Source: flexc++
Section: devel
Priority: optional
Maintainer: Nick Black <nick.black@sprezzatech.com>
XSBC-Original-Maintainer: Frank B. Brokken <f.b.brokken@rug.nl>
           tony mancill <tmancill@debian.org>
Build-Depends: debhelper (>= 7.0.15), libbobcat-dev (>= 3.01.00),
                icmake (>= 7.19.0), g++-4.7 (>= 4.7.1),
                yodl (>= 3.00.0)
Standards-Version: 3.9.4
Homepage: http://flexcpp.sourceforge.net
Vcs-Git: git://git.debian.org/git/collab-maint/flexc++.git
Vcs-Browser: http://git.debian.org/?p=collab-maint/flexc++.git

Package: flexc++
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Suggests: bisonc++
Description: Flex-style scanner generator for C++ 
 Flexc++ was designed after `flex'. Flexc++ offers as compared to flex's C++
 option a cleaner class-design.
 .
 Flexc++ generates a scanner class that is ready for use, as well as a member
 function producing the lexical scanner tokens (lex()). The class can easily
 be provided with additional members without the need for polymorphic
 functions. Consequently, classes generated by flexc++ have no virtual members
 and actually have but one public member: lex(), replacing the old-style flex
 and flex++ yylex() function.
 .
 Flexc++ offers many options, among which an option to define classes
 generated by flexc++ in a separate namespace. This allows developers to
 define additional symbols, even outside of the class generated by flexc++,
 without encountering name-collision problems. With flexc++, artificial means
 to prevent name-collisions, like the yy-conventions used by flex and flex++
 are no longer required.  Flexc++ generates C++ code. If C code is required,
 flex should be used. Flexc++'s grammar requirements are highly compatible
 with flex's requirements, so converting a flex grammar into a flexc++ grammar
 should be fairly simple.
 .
 In addition to the flexc++ scanner generator itself and several skeleton
 files, the package contains an extensive man-page, as well as a full manual
 rewritten after the original flex manual, and several examples.
