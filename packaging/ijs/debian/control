Source: ijs
Section: text
Priority: optional
Maintainer: Debian Printing Team <debian-printing@lists.debian.org>
Uploaders: Jonas Smedegaard <dr@jones.dk>,
Build-Depends: autotools-dev,
 libtool,
 automake1.11,
 autoconf,
 cdbs (>= 0.4.85~),
 debhelper (>= 7.0.1),
 dh-buildinfo,
 devscripts (>= 2.10.7~),
 ghostscript,
 docbook,
 docbook-utils,
Standards-Version: 3.9.2
Homepage: http://www.linuxprinting.org/ijs/
Vcs-Git: git://git.debian.org/git/collab-maint/ijs
Vcs-Browser: http://git.debian.org/?p=collab-maint/ijs.git

Package: libijs-dev
Section: libdevel
Architecture: any
Depends: ${misc:Depends},
 libc6-dev,
 libijs-0.35 (= ${binary:Version})
Description: IJS raster image transport protocol: development files
 IJS (InkJet Server) is, first and foremost, a protocol for transmission of
 raster page images. This snapshot provides a reference implementation of
 the protocol, the design of which is still in flux. When the protocol
 specification is published, it will be authoritative. Applications should
 feel free to link against the library provided in this package, adapt that
 code for their own needs, or roll a completely new implementation.
 .
 IJS is a client-server protocol, used to write ghostscript drivers. The
 drivers are separate programs. The client and server communicate via pipes,
 though shared memory may be used additionally in the future. Currently IJS
 is used by the hpijs and ijsgimpprint drivers.
 .
 Code for both the client- and server-side is included in the library. This
 package provides a static library, development headers and documentation.

Package: libijs-0.35
Section: libs
Architecture: any
Depends: ${misc:Depends},
 ${shlibs:Depends}
Description: IJS raster image transport protocol: shared library
 IJS is, first and foremost, a protocol for transmission of raster page
 images. This snapshot provides a reference implementation of the protocol,
 the design of which is still in flux. When the protocol specification is
 published, it will be authoritative. Applications should feel free to link
 against the library provided in this package, adapt that code for their own
 needs, or roll a completely new implementation.
 .
 IJS is a client-server protocol, used to write ghostscript drivers. The
 drivers are separate programs. The client and server communicate via pipes,
 though shared memory may be used additionally in the future. Currently IJS
 is used by the hpijs and ijsgimpprint drivers.
 .
 Code for both the client- and server-side is included in the library. This
 package provides the shared library.
