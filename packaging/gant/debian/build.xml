<?xml version="1.0" encoding="UTF-8"?>

<!--
Gant - A Groovy way of scripting Ant tasks.

Copyright Â© 2006-10 Russel Winder

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing permissions and limitations under the
License.

Author : Russel Winder <russel.winder@concertant.com>
-->

<project name="Gant" default="package" basedir=".." xmlns:artifact="urn:maven-artifact-ant">

  <description>
    This Ant script provides the build needed by Debian whilst the Gradle system is not packaged.
  </description>

  <property name="gantVersion" value="1.9.8"/>
  <property name="groovyVersion" value="1.8.6"/>
  <property name="mavenAntTaskVersion" value="2.1.3"/>
  <property name="ivyVersion" value="2.2.0"/>

  <property environment="environment"/>

  <property name="sourceDirectory" value="src/main/groovy"/>
  <property name="testsDirectory" value="src/test/groovy"/>
  <property name="jarfilesDirectory" value="/usr/share/java"/>
  <property name="mavenJarfilesDirectory" value="/usr/share/maven2/lib"/>
  <property name="scriptsDirectory" value="scripts"/>

  <property name="buildDirectory" value="target_gant"/>
  <property name="buildClassesDirectory" value="${buildDirectory}/classes"/>
  <property name="buildTestClassesDirectory" value="${buildDirectory}/test-classes"/>
  <property name="buildTestReportsDirectory" value="${buildDirectory}/test-reports"/>

  <property name="buildMetadataDirectory" value="${buildClassesDirectory}/META-INF"/>

  <property name="mavenAntTaskJarName" value="maven-ant-tasks-${mavenVersion}.jar"/>
  <property name="gantJarName" value="gant-${gantVersion}.jar"/>

  <property name="gantJarPath" value="${buildDirectory}/${gantJarName}"/>

  <condition property="skipTestsIsSet">
    <istrue value="${skipTests}"/>
  </condition>

  <target name="-checkGroovyHome">
    <!--
        This test is contained in a target so that the test can be completely avoided for the continuous
        integration runs: only check the test for command line invocations, the property is never set for
        continuous integration runs.
    -->
    <condition property="groovyHomeIsSet">
      <isset property="environment.GROOVY_HOME"/>
    </condition>
  </target>

  <target name="-initializeMavenAntTask">
     <path id="mavenAntTaskJarPathId">
      <fileset dir="${jarfilesDirectory}" includes="maven-ant-tasks-${mavenAntTaskVersion}.jar"/>
      <fileset dir="${jarfilesDirectory}" includes="plexus-classworlds.jar"/>
      <fileset dir="${jarfilesDirectory}" includes="plexus-utils.jar"/>
      <fileset dir="${mavenJarfilesDirectory}" includes="maven-debian-uber.jar"/>
    </path>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="mavenAntTaskJarPathId"/>
  </target>

  <target name="-initializeWithGroovyHome" if="groovyHomeIsSet">
    <echo message="Building with the Groovy installation at $GROOVY_HOME (${environment.GROOVY_HOME})."/>
    <path id="groovyJarPathId">
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="groovy-1.*.jar"/>
    </path>
    <path id="compileJarSetPathId">
      <path refid="groovyJarPathId"/>
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="commons-cli*.jar"/>
      <!-- The ASM and Antlr jars are just transitive dependencies of the Groovy jar, the Ant and Commons
           CLI jars are needed directly by the Gant code. -->
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="asm*.jar"/>
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="ant*.jar"/> <!-- Intentionally includes Ant and Antlr jars. -->
    </path>
    <path id="testJarSetPathId">
      <path refid="compileJarSetPathId"/>
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="junit*.jar"/>
    </path>
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="compileJarSetPathId"/>
    <property name="scriptsExtrasDirectory" value="${scriptsDirectory}/bin_requiresGroovy"/>
  </target>

  <target name="-initializeNoGroovyHome" depends="-initializeMavenAntTask" unless="groovyHomeIsSet">
    <echo message="Building without a Groovy installation. Using Groovy ${groovyVersion}, Commons CLI ${commonsCliVersion}, Ant ${antVersion} from Maven repository."/>
    <artifact:dependencies pathId="groovyJarPathId" filesetId="groovyJarFilesetId">
      <dependency groupId="org.codehaus.groovy" artifactId="groovy-all" version="${groovyVersion}"/>
    </artifact:dependencies>
     <artifact:dependencies pathId="compileJarSet" filesetId="compileJarSetFilesetId">
      <dependency groupId="commons-cli" artifactId="commons-cli" version="${commonsCliVersion}"/>
    </artifact:dependencies>
    <path id="compileJarSetPathId">
      <path refid="groovyJarPathId"/>
      <path refid="compileJarSet"/>
    </path>
     <artifact:dependencies pathId="testJarSet" filesetId="compileJarSetFilesetId">
      <dependency groupId="org.apache.ant" artifactId="ant-junit" version="${antVersion}"/>
    </artifact:dependencies>
    <path id="testJarSetPathId">
      <path refid="compileJarSetPathId"/>
      <path refid="testJarSet"/>
    </path>
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="compileJarSetPathId"/>
    <property name="scriptsExtrasDirectory" value="${scriptsDirectory}/bin_standalone"/>
 </target>

  <target name="-compile">
    <mkdir dir="${buildClassesDirectory}"/>
    <groovyc srcdir="${sourceDirectory}" destdir="${buildClassesDirectory}" fork="true" failonerror="true" includeantruntime="false">
      <classpath>
        <path refid="compileJarSetPathId"/>
      </classpath>
      <javac source="5" target="5" debug="on" encoding="UTF-8"/>
    </groovyc>
  </target>

  <target name="-package" depends="-compile" unless="testsFailed">
    <mkdir dir="${buildMetadataDirectory}"/>
    <copy todir="${buildMetadataDirectory}" file="LICENCE.txt"/>
    <manifest file="${buildMetadataDirectory}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Extension-Name" value="gant"/>
      <attribute name="Specification-Title" value="Gant: scripting Ant tasks with Groovy."/>
      <attribute name="Specification-Version" value="${gantVersion}"/>
      <attribute name="Specification-Vendor" value="The Codehaus"/>
      <attribute name="Implementation-Title" value="Gant: Scripting Ant tasks with Groovy."/>
      <attribute name="Implementation-Version" value="${gantVersion}"/> 
      <attribute name="Implementation-Vendor" value="The Codehaus"/>
    </manifest>
    <jar destfile="${gantJarPath}" basedir="${buildClassesDirectory}" manifest="${buildMetadataDirectory}/MANIFEST.MF"/>
  </target>

  <target name="-compileTests" depends="-package" unless="skipTestsIsSet">
    <mkdir dir="${buildTestClassesDirectory}"/>
    <groovyc srcdir="${testsDirectory}" destdir="${buildTestClassesDirectory}" fork="true" failonerror="true" includeantruntime="false">
      <classpath>
        <pathelement location="${gantJarPath}"/>
        <path refid="testJarSetPathId"/>
      </classpath>
      <javac source="5" target="5" debug="on" encoding="UTF-8"/>
    </groovyc>
  </target>

  <target name="-test" depends="-initializeMavenAntTask,-compileTests" unless="skipTestsIsSet">
    <mkdir dir="${buildTestReportsDirectory}"/>
    <!--  Only need this file if GROOVY_HOME is not set but write it anyway to save the hassle of decision making. -->
    <echo file="groovyAntTaskTestVersion.properties" message="groovyAntTaskTestVersion = ${groovyVersion}"/>
    <artifact:dependencies pathId="ivyJarPathId">
      <dependency groupId="org.apache.ivy" artifactId="ivy" version="${ivyVersion}"/>
    </artifact:dependencies>
    <path id="testClasspathPathId">
      <pathelement location="${buildTestClassesDirectory}"/>
      <path refid="mavenAntTaskJarPathId"/>
      <path refid="ivyJarPathId"/>
      <path refid="testJarSetPathId"/>
    </path>
    <!-- Forkmode should be once for speed but perTest for safety. -->
    <junit printsummary="yes" fork="true" forkmode="once" failureproperty="testsFailed" includeantruntime="false">
      <!--jvmarg line="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/-->
      <formatter type="plain"/>
      <formatter type="xml"/> <!-- Must have XML output for the continuous integration builds. -->
      <batchtest todir="${buildTestReportsDirectory}">
        <fileset dir="${buildTestClassesDirectory}" includes="**/*_Test.class" excludes="**/ant/tests/*"/>
      </batchtest>
      <classpath>
        <path refid="testClasspathPathId"/>
        <pathelement location="${gantJarPath}"/>
      </classpath>
    </junit>
    <junit printsummary="yes" fork="true" forkmode="once" failureproperty="testsFailed" includeantruntime="false">
      <formatter type="plain"/>
      <formatter type="xml"/> <!-- Must have XML output for the continuous integration builds. -->
      <batchtest todir="${buildTestReportsDirectory}">
        <fileset dir="${buildTestClassesDirectory}" includes="**/ant/tests/*_Test.class"/>
      </batchtest>
      <classpath>
        <path refid="testClasspathPathId"/>
      </classpath>
    </junit>
    <delete file="groovyAntTaskTestVersion.properties"/>
  </target>

  <target name="-commandLineDependencies" depends="-checkGroovyHome,-initializeWithGroovyHome,-initializeNoGroovyHome"/>
  
  <!--
      The targets usable from the command line.
  -->

  <target name="compile" depends="-commandLineDependencies,-compile" description="Compile everything needed for a bootstrap build of Gant."/>
  
  <target name="package" depends="-commandLineDependencies,-package" description="Create the jar file for a bootstrap build of Gant."/>
  
  <target name="compileTests" depends="-commandLineDependencies,-compileTests" description="Compile all the tests for a bootstrap build of Gant."/>
  
  <target name="test" depends="-commandLineDependencies,-test" description="Test a boostrap build of Gant."/>
  
  <target name="clean" description="Clean everything up.">
    <delete dir="${buildDirectory}"/>
    <delete dir="target_forMavenTest"/>
    <delete>
      <fileset dir="." defaultexcludes="false">
        <include name="**/*~"/>
        <include name="texput.log"/>
        <include name="cobertura.ser"/>
      </fileset>
    </delete>
  </target>

</project>
