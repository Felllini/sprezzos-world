.TH cpuburn 1 "June 04, 2011" "" ""
.SH NAME
\fBcpuburn, burnCortexA8, burnCortexA9 \fP- a collection of programs to put heavy load on CPU
.SH SYNOPSIS
.nf
.fam C
\fBburnCortexA8\fP
\fBburnCortexA9\fP
.fam T
.fi
.SH DESCRIPTION
These programs are designed to load ARM Cortex CPUs as heavily as possible
for the purposes of system testing ("burn in").  They have been
optimized for different processors.  FPU and ALU instructions are
coded in an assembler endless loop.  They do not test every
instruction.  The goal has been to maximize heat production from the
CPU, putting stress on the CPU itself, cooling system, motherboard
(especially voltage regulators) and power supply.  The programs 
produce no output, but signal hardware errors by a return code or
(more likely) your machine locking up.
.TS
lB lR.
burnCortexA8	is optimized for ARM Cortex A8 processors
burnCortexA9	is optimized for ARM Cortex A9 processors
.TE
.P
.SH USAGE
Burn testing is designed to make your computer glitch if it has
hardware problems, so make sure that nothing critical is running and
all critical data is saved back to the hard-drives.  The best is to 
run it with filesystems mounted read-only.  Note that \fIroot\fP 
privileges are not required.

Run the desired program in the background, checking the error result.
You'll may want to repeat this command for every processor you have 
in an SMP or HyperThreading system.  For example,

.fam C
    burnCortexA8 || echo $? &
.fam T

Monitor progress of cpuburn by \fBps\fP.  You can monitor CPU temperature and/or 
system voltages through ACPI or using the lm-sensors package if you system supports
it.  When finished, \fBkill\fP the \fBburn*\fP process(es).  For 
example, 

.fam C
    killall burnCortexA8
.fam T

.SH BUGS
Report all bug to submit@bugs.debian.org, for more information
visit http://bugs.debian.org
.SH AUTHORS
cpuburn was written by Gr√©gory Herrero <g-herrero@ti.com>.
