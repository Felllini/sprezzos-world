Author: Nick Black <nick.black@sprezzatech.com>
Author: Fabian Greffrath <fabian+debian@greffrath.com>
Subject: Fix format string security errors.

Forwarded: no
--- a/libhb/deccc608sub.c
+++ b/libhb/deccc608sub.c
@@ -1607,7 +1607,7 @@
     if (debug_608)
     {
         hb_log ("\n- - - SRT caption - - -\n");
-        hb_log (timeline);
+        hb_log ("%s", timeline);
     }
     //fwrite (enc_buffer,enc_buffer_used,1,wb->fh);		
     XMLRPC_APPEND(wb->enc_buffer,wb->enc_buffer_used);
--- a/libhb/decmpeg2.c
+++ b/libhb/decmpeg2.c
@@ -644,7 +644,7 @@
                 hb_audio_t *audio = hb_list_item( m->title->list_audio, 0 );
                 if( audio )
                 {
-                    snprintf( subtitle->iso639_2, sizeof( subtitle->iso639_2 ), 
+                    snprintf( "%s", subtitle->iso639_2, sizeof( subtitle->iso639_2 ),
                               audio->config.lang.iso639_2);
                 } else {
                     snprintf( subtitle->iso639_2, sizeof( subtitle->iso639_2 ), "und");
--- a/contrib/faac/A01-formatsecurity.patch
+++ b/contrib/faac/A01-formatsecurity.patch
@@ -0,0 +1,12 @@
+--- faac/frontend/main.c
++++ faac/frontend/main.c
+@@ -715,7 +715,7 @@
+         break;
+ #endif
+         case 'L':
+-        fprintf(stderr, faac_copyright_string);
++        fprintf(stderr, "%s", faac_copyright_string);
+         dieMessage = license;
+         break;
+     case 'X':
+
--- a/contrib/ffmpeg/A09-formatsecurity.patch
+++ b/contrib/ffmpeg/A09-formatsecurity.patch
@@ -0,0 +1,21 @@
+--- ffmpeg/libavcodec/srtdec.c
++++ ffmpeg/libavcodec/srtdec.c
+@@ -110,7 +110,7 @@
+                                     for (j=sptr-2; j>=0; j--)
+                                         if (stack[j].param[i][0]) {
+                                             out += snprintf(out, out_end-out,
+-                                                            stack[j].param[i]);
++                                                            "%s", stack[j].param[i]);
+                                             break;
+                                         }
+                         } else {
+@@ -145,7 +145,7 @@
+                             }
+                             for (i=0; i<PARAM_NUMBER; i++)
+                                 if (stack[sptr].param[i][0])
+-                                    out += snprintf(out, out_end-out,
++                                    out += snprintf(out, out_end-out, "%s",
+                                                     stack[sptr].param[i]);
+                         }
+                     } else if (!buffer[1] && strspn(buffer, "bisu") == 1) {
+
--- a/contrib/mp4v2/A03-formatsecurity.patch
+++ b/contrib/mp4v2/A03-formatsecurity.patch
@@ -0,0 +1,22 @@
+--- mp4v2/src/mp4file.cpp
++++ mp4v2/src/mp4file.cpp
+@@ -2663,7 +2663,7 @@
+     GetChapters(&chapters, &chapterCount, sourceType);
+     if (0 == chapterCount)
+     {
+-        VERBOSE_READ(GetVerbosity(), printf(errMsg));
++        VERBOSE_READ(GetVerbosity(), printf("%s", errMsg));
+         return MP4ChapterTypeNone;
+     }
+
+--- mp4v2/src/mp4property.cpp
++++ mp4v2/src/mp4property.cpp
+@@ -619,7 +619,7 @@
+
+         oss << "  |" << text.str() << "|\n";
+
+-        fprintf( pFile, oss.str().c_str() );
++        fprintf( pFile, "%s", oss.str().c_str() );
+         fflush( pFile );
+         return;
+     }
+
