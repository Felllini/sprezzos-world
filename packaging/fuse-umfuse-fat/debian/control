Source: fuse-umfuse-fat
Priority: optional
Maintainer: Nick Black <nick.black@sprezzatech.com>
XSBC-Original-Maintainer: Debian VSquare Team <pkg-vsquare-devel@lists.alioth.debian.org>
Build-Depends: debhelper (>= 5), libumlib-dev, libfuse-dev, libglib2.0-dev, cdbs
Standards-Version: 3.9.4
Vcs-Svn: svn://svn.debian.org/pkg-vsquare/fuse-umfuse-fat/trunk
Vcs-Browser: http://svn.debian.org/wsvn/pkg-vsquare/fuse-umfuse-fat/trunk/
Homepage: http://view-os.sourceforge.net
Section: misc

Package: umview-mod-umfusefat
Architecture: i386 amd64 powerpc ppc64
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: View-OS in user space - FAT module for UMFUSE
 View-OS is a novel approach to the process/kernel interface.  The semantics of
 each system call can be assigned process by process giving the user the right
 to decide which view of the system each process has to join.  Each process can
 "see" a different file system structure, networking resources, processor,
 devices.  Moreover some of the resources can be provided by the user
 him/herself, thus these resource can be private to the single process and are
 not known a priori by the system.  Groups of processes can share the same view
 but this is just an optimization to share management methods.
 .
 For more information, see http://wiki.virtualsquare.org
 .
 UMView is a user-mode implementation of View-OS.  Processes are run with a
 controlling daemon that captures all the system calls (at present using the
 ptrace() system call) and uses dynamically loadable modules to change their
 semantic.
 .
 This package contains a sub-module for umfuse.  umfuse is contained in the
 main UMView package and allows almost complete source compatibility with FUSE
 modules.  umfusefat can be used to mount FAT12/FAT16/FAT32 images inside an
 UMView instance.

Package: fusefat
Architecture: any
Depends: ${shlibs:Depends},
	${misc:Depends},
	fuse
Description: File System in User Space - Module for FAT
 This module for the FUSE kernel service allows any FUSE-enabled user to mount
 FAT file systems.
 .
 The module has been initially written for UMView, the user-mode
 implementation of View-OS. If you want to allow completely user-mode disk
 images mounting (with no kernel/superuser support at all), take a look at
 umview-mod-umfusefat and its dependencies.
