Description: spelling-error-in-manpage
Bug-Debian: http://lintian.debian.org/tags/spelling-error-in-manpage.html

Index: libccrtp-2.0.3/src/ccrtp/CryptoContext.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/CryptoContext.h	2012-03-22 01:18:01.000000000 +1100
+++ libccrtp-2.0.3/src/ccrtp/CryptoContext.h	2012-06-23 14:07:03.000000000 +1000
@@ -232,7 +232,7 @@
     /**
      * Compute the authentication tag.
      *
-     * Compute the authentication tag according the the paramters in the
+     * Compute the authentication tag according the the parameters in the
      * SRTP Cryptograhic context.
      *
      * @param rtp
Index: libccrtp-2.0.3/src/ccrtp/channel.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/channel.h	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/src/ccrtp/channel.h	2012-06-23 14:07:03.000000000 +1000
@@ -73,7 +73,7 @@
 
 /**
  * @class RTPBaseUDPIPv4Socket
- * @short A UDP/IPv4 socket class targetted at RTP stacks.
+ * @short A UDP/IPv4 socket class targeted at RTP stacks.
  *
  * This class provides a flat interface that includes all the services
  * required by an RTP stack.
Index: libccrtp-2.0.3/src/ccrtp/CryptoContextCtrl.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/CryptoContextCtrl.h	2012-03-22 01:18:01.000000000 +1100
+++ libccrtp-2.0.3/src/ccrtp/CryptoContextCtrl.h	2012-06-23 14:07:03.000000000 +1000
@@ -176,7 +176,7 @@
     /**
      * Compute the authentication tag.
      *
-     * Compute the authentication tag according the the paramters in the
+     * Compute the authentication tag according the the parameters in the
      * SRTP Cryptograhic context.
      *
      * @param rtp
Index: libccrtp-2.0.3/doc/ccrtp.info
===================================================================
--- libccrtp-2.0.3.orig/doc/ccrtp.info	2011-08-03 08:40:46.000000000 +1000
+++ libccrtp-2.0.3/doc/ccrtp.info	2012-06-23 14:07:03.000000000 +1000
@@ -533,7 +533,7 @@
 '100' payload type numeric identifier and an RTP clock rate of 90 Khz.
 Note that the numeric identifier does not have to be in the dynamic
 range. The static payload types are default bindings and MAY be
-overriden, thus, DynamicPayloadFormat(0,90000) is a valid construct
+overridden, thus, DynamicPayloadFormat(0,90000) is a valid construct
 provided 0 has been established as the payload type through a previous
 negotiation process(1).
 
Index: libccrtp-2.0.3/doc/ccrtp.texi
===================================================================
--- libccrtp-2.0.3.orig/doc/ccrtp.texi	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/doc/ccrtp.texi	2012-06-23 14:07:03.000000000 +1000
@@ -704,7 +704,7 @@
 '100' payload type numeric identifier and an @acronym{RTP} clock rate
 of 90 Khz. Note that the numeric identifier does not have to be in the
 dynamic range. The static payload types are default bindings and MAY
-be overriden, thus, DynamicPayloadFormat(0,90000) is a valid construct
+be overridden, thus, DynamicPayloadFormat(0,90000) is a valid construct
 provided 0 has been established as the payload type through a previous
 negotiation process@footnote{Despite the fact that RFC 3551 defines a
 static binding of the 0 code to mu-law PCM at 8Khz.}.
Index: libccrtp-2.0.3/src/ccrtp/iqueue.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/iqueue.h	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/src/ccrtp/iqueue.h	2012-06-23 14:07:52.000000000 +1000
@@ -1191,7 +1191,7 @@
      *
      * A generic header validity check (as specified in RFC 1889)
      * is performed on every incoming packet. If the generic check
-     * completes succesfully, this method is called before the
+     * completes successfully, this method is called before the
      * packet is actually inserted into the reception queue.
      *
      * May be used to perform additional validity checks or to do
@@ -1257,7 +1257,7 @@
     /**
      * This function performs the physical I/O for reading a
      * packet from the source.  It is a virtual that is
-     * overriden in the derived class.
+     * overridden in the derived class.
      *
      * @return number of bytes read.
      * @param buffer of read packet.
Index: libccrtp-2.0.3/src/ccrtp/oqueue.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/oqueue.h	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/src/ccrtp/oqueue.h	2012-06-23 14:10:15.000000000 +1000
@@ -286,7 +286,7 @@
      * Sometimes a "NULL" or empty packet will be used instead, and
      * these are known as "silent" packets.  "Silent" packets are
      * used simply to "push" the scheduler along more accurately
-     * by giving the appearence that a next packet is waiting to
+     * by giving the appearance that a next packet is waiting to
      * be sent and to provide a valid timestamp for that packet.
      *
      * @param stamp Timestamp for expected send time of packet.
@@ -301,7 +301,7 @@
          * Sometimes a "NULL" or empty packet will be used instead, and
          * these are known as "silent" packets.  "Silent" packets are
          * used simply to "push" the scheduler along more accurately
-         * by giving the appearence that a next packet is waiting to
+         * by giving the appearance that a next packet is waiting to
          * be sent and to provide a valid timestamp for that packet.
          *
          * @param stamp Timestamp immediate send time of packet.
@@ -333,7 +333,7 @@
     { sendInfo.marked = mark; }
 
     /**
-     * Get wheter the mark bit will be set in the next packet.
+     * Get whether the mark bit will be set in the next packet.
      **/
     inline bool getMark() const
     { return sendInfo.marked; }
@@ -411,7 +411,7 @@
         { return sendInfo.sendSeq; }
 
         /**
-         * Set ouput queue CryptoContext.
+         * Set output queue CryptoContext.
          *
          * The endQueue method (provided by RTPQueue) deletes all
          * registered CryptoContexts.
@@ -569,7 +569,7 @@
     /**
      * This function performs the physical I/O for writing a
      * packet to the destination.  It is a virtual that is
-     * overriden in the derived class.
+     * overridden in the derived class.
      *
      * @param buffer Pointer to data to write.
      * @param len Length of data to write.
Index: libccrtp-2.0.3/m4/libgcrypt_local.m4
===================================================================
--- libccrtp-2.0.3.orig/m4/libgcrypt_local.m4	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/m4/libgcrypt_local.m4	2012-06-23 14:11:13.000000000 +1000
@@ -17,7 +17,7 @@
 dnl with the API version to also check the API compatibility. Example:
 dnl a MINIMUN-VERSION of 1:1.2.5 won't pass the test unless the installed 
 dnl version of libgcrypt is at least 1.2.5 *and* the API number is 1.  Using
-dnl this features allows to prevent build against newer versions of libgcrypt
+dnl this features allows one to prevent build against newer versions of libgcrypt
 dnl with a changed API.
 dnl
 AC_DEFUN([AM_PATH_LIBGCRYPT_CCRTP],
Index: libccrtp-2.0.3/src/ccrtp/cqueue.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/cqueue.h	2011-10-30 03:49:29.000000000 +1100
+++ libccrtp-2.0.3/src/ccrtp/cqueue.h	2012-06-23 14:09:24.000000000 +1000
@@ -179,7 +179,7 @@
     { return ctrlSendCount; }
 
     /**
-     * Set ouput queue CryptoContext.
+     * Set output queue CryptoContext.
      *
      * The endQueue method (provided by RTPQueue) deletes all
      * registered CryptoContexts.
Index: libccrtp-2.0.3/src/ccrtp/rtcppkt.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/rtcppkt.h	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/src/ccrtp/rtcppkt.h	2012-06-23 14:11:53.000000000 +1000
@@ -58,7 +58,7 @@
  * @short SDES items that may be carried in a Source DEScription RTCP packet.
  *
  * CNAME is mandatory in each RTCP compound packet (except when
- * splitted for partial encryption), the others are optional and have
+ * split for partial encryption), the others are optional and have
  * different sending frequencies, though with recommended default
  * values.
  **/
Index: libccrtp-2.0.3/src/ccrtp/rtppkt.h
===================================================================
--- libccrtp-2.0.3.orig/src/ccrtp/rtppkt.h	2011-08-03 08:31:14.000000000 +1000
+++ libccrtp-2.0.3/src/ccrtp/rtppkt.h	2012-06-23 14:10:53.000000000 +1000
@@ -637,7 +637,7 @@
 
     /**
      * Specify the value of the marker bit. By default, the marker
-     * bit of outgoing packets is false/0. This method allows to
+     * bit of outgoing packets is false/0. This method allows one to
      * explicity specify and change that value.
      *
      * @param mark value for the market bit.
