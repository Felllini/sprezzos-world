Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 stk (4.4.4-SprezzOS1) unstable; urgency=low
 .
   * SprezzOS build
Author: Nick Black <nick.black@sprezzatech.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- stk-4.4.4.orig/include/RtAudio.h
+++ stk-4.4.4/include/RtAudio.h
@@ -428,7 +428,8 @@ class RtAudio
                    RtAudio::StreamParameters *inputParameters,
                    RtAudioFormat format, unsigned int sampleRate,
                    unsigned int *bufferFrames, RtAudioCallback callback,
-                   void *userData = NULL, RtAudio::StreamOptions *options = NULL );
+                   void *userData = NULL, RtAudio::StreamOptions *options = NULL,
+		   void (*errcb)(RtError::Type, std::string const&) = NULL);
 
   //! A function that closes a stream and frees any associated stream memory.
   /*!
@@ -578,7 +579,8 @@ public:
                    RtAudio::StreamParameters *inputParameters,
                    RtAudioFormat format, unsigned int sampleRate,
                    unsigned int *bufferFrames, RtAudioCallback callback,
-                   void *userData, RtAudio::StreamOptions *options );
+                   void *userData, RtAudio::StreamOptions *options,
+		   void (*errcb)(RtError::Type, std::string const&) = NULL);
   virtual void closeStream( void );
   virtual void startStream( void ) = 0;
   virtual void stopStream( void ) = 0;
--- stk-4.4.4.orig/src/RtWvOut.cpp
+++ stk-4.4.4/src/RtWvOut.cpp
@@ -105,7 +105,7 @@ RtWvOut :: RtWvOut( unsigned int nChanne
 
   // Open a stream and set the callback function.
   try {
-    dac_.openStream( &parameters, NULL, format, (unsigned int)Stk::sampleRate(), &size, &write, (void *)this );
+    dac_.openStream( &parameters, NULL, format, (unsigned int)Stk::sampleRate(), &size, &write, (void *)this, NULL );
   }
   catch ( RtError &error ) {
     handleError( error.what(), StkError::AUDIO_SYSTEM );
--- stk-4.4.4.orig/src/RtWvIn.cpp
+++ stk-4.4.4/src/RtWvIn.cpp
@@ -84,7 +84,7 @@ RtWvIn :: RtWvIn( unsigned int nChannels
   RtAudioFormat format = ( sizeof(StkFloat) == 8 ) ? RTAUDIO_FLOAT64 : RTAUDIO_FLOAT32;
 
   try {
-    adc_.openStream( NULL, &parameters, format, (unsigned int)Stk::sampleRate(), &size, &read, (void *)this );
+    adc_.openStream( NULL, &parameters, format, (unsigned int)Stk::sampleRate(), &size, &read, (void *)this, NULL );
   }
   catch ( RtError &error ) {
     handleError( error.what(), StkError::AUDIO_SYSTEM );
