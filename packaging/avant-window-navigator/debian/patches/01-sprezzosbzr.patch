Only in dankawn/: aclocal.m4
Only in dankawn/applet-activation: Makefile.in
Only in dankawn/applets/expander: Makefile.in
diff -ur awn/applets/quick-prefs/applet.vala dankawn/applets/quick-prefs/applet.vala
--- awn/applets/quick-prefs/applet.vala	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/quick-prefs/applet.vala	2012-12-17 01:26:45.919764833 -0500
@@ -116,7 +116,7 @@
   private void
   initialize_menu ()
   {
-    this.ctx_menu = this.create_default_menu () as Menu;
+    this.ctx_menu = this.create_default_menu () as Gtk.Menu;
 
     // quit menu item
     Gtk.ImageMenuItem quit_item = 
@@ -592,7 +592,8 @@
                             "/org/awnproject/Awn",
                             "org.awnproject.Awn.App");
 
-      awn.RemovePanel (this.panel_id);
+	/* FIXME
+      awn.RemovePanel (this.panel_id);*/
     }
     catch (DBus.Error err)
     {
Only in dankawn/applets/quick-prefs: Makefile.in
Only in dankawn/applets/separator: Makefile.in
Only in dankawn/applets/simple-launcher: Makefile.in
diff -ur awn/applets/taskmanager/awn-desktop-lookup-cached.c dankawn/applets/taskmanager/awn-desktop-lookup-cached.c
--- awn/applets/taskmanager/awn-desktop-lookup-cached.c	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/taskmanager/awn-desktop-lookup-cached.c	2012-12-17 01:33:24.413090980 -0500
@@ -22,6 +22,7 @@
 /* awn-desktop-lookup-cached.c */
 
 
+#include <python2.7/pyconfig.h>
 #include "xutils.h"
 #include <libdesktop-agnostic/fdo.h>
 #include "awn-desktop-lookup-cached.h"
Only in dankawn/applets/taskmanager: dock-manager-api.c
Only in dankawn/applets/taskmanager: dock-manager-api.h
diff -ur awn/applets/taskmanager/dock-manager-api.vala dankawn/applets/taskmanager/dock-manager-api.vala
--- awn/applets/taskmanager/dock-manager-api.vala	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/taskmanager/dock-manager-api.vala	2012-12-17 01:31:07.796426777 -0500
@@ -24,26 +24,24 @@
 public interface DockManagerDBusInterface: GLib.Object
 {
   public abstract string[] get_capabilities () throws DBus.Error;
-  public abstract ObjectPath[] get_items () throws DBus.Error;
-  public abstract ObjectPath[] get_items_by_name (string name) throws DBus.Error;
-  public abstract ObjectPath[] get_items_by_desktop_file (string desktop_file) throws DBus.Error;
-  public abstract ObjectPath[] get_items_by_pid (int pid) throws DBus.Error;
-  public abstract ObjectPath get_item_by_xid (int64 xid) throws DBus.Error;
+  public abstract GLib.ObjectPath[] get_items () throws DBus.Error;
+  public abstract GLib.ObjectPath[] get_items_by_name (string name) throws DBus.Error;
+  public abstract GLib.ObjectPath[] get_items_by_desktop_file (string desktop_file) throws DBus.Error;
+  public abstract GLib.ObjectPath[] get_items_by_pid (int pid) throws DBus.Error;
+  public abstract GLib.ObjectPath get_item_by_xid (int64 xid) throws DBus.Error;
 
   // Awn-specific methods
   public abstract void awn_set_visibility (string win_name, bool visible) throws DBus.Error;
-  public abstract ObjectPath awn_register_proxy_item (string desktop_file, string uri) throws DBus.Error;
+  public abstract GLib.ObjectPath awn_register_proxy_item (string desktop_file, string uri) throws DBus.Error;
 
-  public signal void item_added (ObjectPath path);
-  public signal void item_removed (ObjectPath path);
+  public signal void item_added (GLib.ObjectPath path);
+  public signal void item_removed (GLib.ObjectPath path);
 }
 
 [DBus (name="net.launchpad.DockItem")]
 public interface DockItemDBusInterface: GLib.Object
 {
-  public abstract int add_menu_item (HashTable<string, Value?> menu_hints) throws DBus.Error;
   public abstract void remove_menu_item (int id) throws DBus.Error;
-  public abstract void update_dock_item (HashTable<string, Value?> hints) throws DBus.Error;
 
   public abstract string desktop_file { owned get; }
   public abstract string uri { owned get; }
@@ -71,15 +69,15 @@
     conn.register_object (obj_path, this);
   }
 
-  private static ObjectPath[] list_to_object_path_array (SList<Task.Icon> list)
+  private static GLib.ObjectPath[] list_to_object_path_array (SList<Task.Icon> list)
   {
-    ObjectPath[] result = new ObjectPath[list.length ()];
+    GLib.ObjectPath[] result = new GLib.ObjectPath[list.length ()];
     int i = 0;
     foreach (unowned Task.Icon icon in list)
     {
       unowned TaskIconDispatcher dispatcher;
       dispatcher = icon.get_dbus_dispatcher () as TaskIconDispatcher;
-      result[i++] = new ObjectPath (dispatcher.object_path);
+      result[i++] = new GLib.ObjectPath (dispatcher.object_path);
     }
 
     return result;
@@ -103,12 +101,12 @@
     return capabilities;
   }
 
-  public ObjectPath[] get_items () throws DBus.Error
+  public GLib.ObjectPath[] get_items () throws DBus.Error
   {
     return list_to_object_path_array (this.manager.get_icons ());
   }
 
-  public ObjectPath[] get_items_by_name (string name) throws DBus.Error
+  public GLib.ObjectPath[] get_items_by_name (string name) throws DBus.Error
   {
     unowned SList<unowned Task.Icon> icons = this.manager.get_icons ();
     SList<unowned Task.Icon> matches = new SList<unowned Task.Icon> ();
@@ -132,7 +130,7 @@
     return list_to_object_path_array (matches);
   }
 
-  public ObjectPath[] get_items_by_desktop_file (string desktop_file) throws DBus.Error
+  public GLib.ObjectPath[] get_items_by_desktop_file (string desktop_file) throws DBus.Error
   {
     unowned SList<unowned Task.Icon> icons = this.manager.get_icons ();
     SList<unowned Task.Icon> matches = new SList<unowned Task.Icon> ();
@@ -152,7 +150,7 @@
     return list_to_object_path_array (matches);
   }
 
-  public ObjectPath[] get_items_by_pid (int pid) throws DBus.Error
+  public GLib.ObjectPath[] get_items_by_pid (int pid) throws DBus.Error
   {
     unowned SList<unowned Task.Icon> icons = this.manager.get_icons ();
     SList<unowned Task.Icon> matches = new SList<unowned Task.Icon> ();
@@ -176,7 +174,7 @@
     return list_to_object_path_array (matches);
   }
 
-  public ObjectPath get_item_by_xid (int64 xid) throws DBus.Error
+  public GLib.ObjectPath get_item_by_xid (int64 xid) throws DBus.Error
   {
     unowned Task.Icon? icon = this.manager.get_icon_by_xid (xid);
 
@@ -185,7 +183,7 @@
       unowned TaskIconDispatcher dispatcher;
       dispatcher = icon.get_dbus_dispatcher () as TaskIconDispatcher;
 
-      return new ObjectPath (dispatcher.object_path);
+      return new GLib.ObjectPath (dispatcher.object_path);
     }
 
     return null;
@@ -201,11 +199,11 @@
     this.manager.update (win_name, hints);
   }
 
-  public ObjectPath 
+  public GLib.ObjectPath 
   awn_register_proxy_item (string desktop_file, string uri) throws DBus.Error
   {
     // TODO: implement
-    return new ObjectPath ("/not/yet/implemented");
+    return new GLib.ObjectPath ("/not/yet/implemented");
   }
 }
 
@@ -267,7 +265,7 @@
 
     if (proxy != null)
     {
-      proxy.item_added (new ObjectPath(this.object_path));
+      proxy.item_added (new GLib.ObjectPath(this.object_path));
     }
   }
 
@@ -277,90 +275,14 @@
 
     if (proxy != null)
     {
-      proxy.item_removed (new ObjectPath(this.object_path));
+      proxy.item_removed (new GLib.ObjectPath(this.object_path));
     }
   }
 
-  public int add_menu_item (HashTable<string, Value?> menu_hints) throws DBus.Error
-  {
-    Gtk.ImageMenuItem? item = null;
-    Gtk.Image? image = null;
-    string? group = null;
-
-    HashTableIter<string, Value?> iter =
-      HashTableIter<string, Value?>(menu_hints);
-    unowned string key;
-    unowned Value? value;
-    while (iter.next (out key, out value))
-    {
-      if (key == "label")
-      {
-        item = new Gtk.ImageMenuItem.with_label (value.get_string ());
-      }
-      else if (key == "icon-name")
-      {
-        image = new Gtk.Image.from_icon_name (value.get_string (),
-                                              Gtk.IconSize.MENU);
-      }
-      else if (key == "icon-file")
-      {
-        Gdk.Pixbuf pixbuf;
-        int w, h;
-        Gtk.icon_size_lookup (Gtk.IconSize.MENU, out w, out h);
-        try
-        {
-          pixbuf = new Gdk.Pixbuf.from_file_at_size (value.get_string (),
-                                                     w, h);
-          image = new Gtk.Image.from_pixbuf (pixbuf);
-        }
-        catch (GLib.Error err) { warning ("%s", err.message); }
-      }
-      else if (key == "container-title")
-      {
-        group = value.get_string ();
-      }
-      else if (key == "uri")
-      {
-        // TODO: implement
-      }
-    }
-
-    if (item != null)
-    {
-      if (image != null) item.set_image (image);
-      int id = this.icon.add_menu_item (item,group);
-      item.show ();
-
-      item.activate.connect ((w) =>
-      {
-        this.menu_item_activated (id);
-      });
-
-      return id;
-    }
-
-    return 0;
-  }
-
   public void remove_menu_item (int id) throws DBus.Error
   {
     this.icon.remove_menu_item (id);
   }
 
-  public void update_dock_item (HashTable<string, Value?> hints) throws DBus.Error
-  {
-    HashTableIter<string, Value?> iter = HashTableIter<string, Value?> (hints);
-    unowned string key;
-    unowned Value? value;
-    while (iter.next (out key, out value))
-    {
-      unowned SList<unowned Task.Item> items = this.icon.get_items ();
-      foreach (unowned Task.Item item in items)
-      {
-        if (item is Task.Launcher) continue;
-        item.update_overlay (key, value);
-      }
-    }
-  }
 }
 
Only in dankawn/applets/taskmanager: labelled-separator.c
Only in dankawn/applets/taskmanager: labelled-separator.h
Only in dankawn/applets/taskmanager: Makefile.in
diff -ur awn/applets/taskmanager/task-launcher.c dankawn/applets/taskmanager/task-launcher.c
--- awn/applets/taskmanager/task-launcher.c	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/taskmanager/task-launcher.c	2012-12-17 01:33:52.413090476 -0500
@@ -21,6 +21,7 @@
  *             Rodney Cryderman <rcryderman@gmail.com>
  */
 
+#include <python2.7/pyconfig.h>
 #include <stdio.h>
 #include <string.h>
 
diff -ur awn/applets/taskmanager/task-manager.c dankawn/applets/taskmanager/task-manager.c
--- awn/applets/taskmanager/task-manager.c	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/taskmanager/task-manager.c	2012-12-17 01:34:23.839756577 -0500
@@ -21,6 +21,7 @@
  *             Rodney Cryderman <rcryderman@gmail.com>
  */
 
+#include <python2.7/pyconfig.h>
 #include <stdio.h>
 #include <string.h>
 
diff -ur awn/applets/taskmanager/task-window.c dankawn/applets/taskmanager/task-window.c
--- awn/applets/taskmanager/task-window.c	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/taskmanager/task-window.c	2012-12-17 01:34:44.476422870 -0500
@@ -22,6 +22,7 @@
  *
  */
 
+#include <python2.7/pyconfig.h>
 #include <stdio.h>
 #include <string.h>
 #include <sys/types.h>
diff -ur awn/applets/taskmanager/util.c dankawn/applets/taskmanager/util.c
--- awn/applets/taskmanager/util.c	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/applets/taskmanager/util.c	2012-12-17 01:35:00.993089241 -0500
@@ -17,6 +17,7 @@
  *
  */
 
+#include <python2.7/pyconfig.h>
 #include <glib.h>
 #undef G_DISABLE_SINGLE_INCLUDES
 #include <glibtop/procargs.h>
Only in dankawn/: autom4te.cache
Only in dankawn/awn-settings: Makefile.in
Only in dankawn/bindings/python: Makefile.in
Only in dankawn/bindings/vala: Makefile.in
Binary files awn/.bzr/checkout/dirstate and dankawn/.bzr/checkout/dirstate differ
Only in dankawn/: config.guess
Only in dankawn/: config.h.in
Only in dankawn/: config.sub
Only in dankawn/: configure
Only in dankawn/data: Makefile.in
Only in dankawn/: depcomp
Only in dankawn/doc: Makefile.in
Only in dankawn/doc/reference: Makefile.in
Only in dankawn/: gtk-doc.make
Only in dankawn/: install-sh
Only in dankawn/: intltool-extract.in
Only in dankawn/: intltool-merge.in
Only in dankawn/: intltool-update.in
Only in dankawn/libawn: Makefile.in
Only in dankawn/: ltmain.sh
Only in dankawn/m4: gtk-doc.m4
Only in dankawn/m4: intltool.m4
Only in dankawn/m4: libtool.m4
Only in dankawn/m4: lt~obsolete.m4
Only in dankawn/m4: ltoptions.m4
Only in dankawn/m4: ltsugar.m4
Only in dankawn/m4: ltversion.m4
Only in dankawn/: Makefile.in
Only in dankawn/: missing
Only in awn/po: avant-window-navigator.pot
Only in dankawn/po: Makefile.in.in
Only in dankawn/: py-compile
diff -ur awn/src/awn-panel.c dankawn/src/awn-panel.c
--- awn/src/awn-panel.c	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/src/awn-panel.c	2012-12-17 01:25:00.766433397 -0500
@@ -324,7 +324,6 @@
                                              gint      type);
 
 static guint    awn_panel_disable_autohide  (AwnPanel *panel,
-                                             const gchar *app_name,
                                              const gchar *reason);
 
 static void     awn_panel_reset_autohide    (AwnPanel *panel);
@@ -607,7 +606,7 @@
   /* Inhibit autohide, so we cannot unmap the widget when there are composited
      state switches during startup. */
   priv->startup_inhibit_cookie =
-    awn_panel_disable_autohide (AWN_PANEL (panel), "internal", "Panel spawn");
+    awn_panel_disable_autohide (AWN_PANEL (panel), "Panel spawn");
   g_timeout_add (10000, (GSourceFunc)on_startup_complete, panel);
 
   /* Composited checks/setup */
@@ -3717,7 +3716,7 @@
 }
 
 void
-awn_panel_set_glow (AwnPanel *panel, const gchar *sender, gboolean activate)
+awn_panel_set_glow (AwnPanel *panel, gboolean activate)
 {
   g_return_if_fail (AWN_IS_PANEL (panel));
 
@@ -3728,7 +3727,7 @@
   if (activate)
   {
     // watch the sender on dbus and remove the glow when it disappears
-    gchar *detailed_signal = g_strdup_printf ("name-disappeared::%s", sender);
+    gchar *detailed_signal = g_strdup_printf ("name-disappeared");
     g_signal_connect (awn_dbus_watcher_get_default (), detailed_signal,
                       G_CALLBACK (dbus_glow_activator_lost),
                       panel);
@@ -3794,7 +3793,6 @@
 
 static guint
 awn_panel_disable_autohide (AwnPanel *panel,
-                            const gchar *app_name,
                             const gchar *reason)
 {
   AwnPanelPrivate *priv = panel->priv;
@@ -3804,7 +3802,7 @@
 
   AwnInhibitItem *item = g_new0 (AwnInhibitItem, 1);
   item->panel = panel;
-  item->description = g_strdup_printf ("(%s): %s", app_name, reason);
+  item->description = g_strdup_printf ("%s", reason);
   item->cookie = cookie;
 
   g_hash_table_insert (priv->inhibits,
@@ -3830,17 +3828,15 @@
 
 guint
 awn_panel_inhibit_autohide (AwnPanel *panel,
-                            const gchar *sender,
-                            const gchar *app_name,
                             const gchar *reason)
 {
   AwnPanelPrivate *priv = panel->priv;
 
-  guint cookie = awn_panel_disable_autohide (panel, app_name, reason);
+  guint cookie = awn_panel_disable_autohide (panel, reason);
 
   // watch the sender on dbus and remove all its inhibits when it
   //   disappears (to be sure that we don't misbehave due to crashing app)
-  gchar *detailed_signal = g_strdup_printf ("name-disappeared::%s", sender);
+  gchar *detailed_signal = g_strdup_printf ("name-disappeared");
   g_signal_connect (awn_dbus_watcher_get_default (), detailed_signal,
                     G_CALLBACK (dbus_inhibitor_lost),
                     g_hash_table_lookup (priv->inhibits, 
diff -ur awn/src/awn-panel-dispatcher.vala dankawn/src/awn-panel-dispatcher.vala
--- awn/src/awn-panel-dispatcher.vala	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/src/awn-panel-dispatcher.vala	2012-12-17 01:47:34.933075642 -0500
@@ -45,17 +45,14 @@
     public abstract string[] get_inhibitors () throws DBus.Error;
     public abstract ImageStruct get_snapshot () throws DBus.Error;
 
-    public abstract uint inhibit_autohide (DBus.BusName sender,
-                                           string app_name,
-                                           string reason) throws DBus.Error;
+    public abstract uint inhibit_autohide (string reason) throws DBus.Error;
     public abstract void uninhibit_autohide (uint cookie) throws DBus.Error;
 
     // FIXME: do we really need this?
     public abstract void set_applet_flags (string uid,
                                            int flags) throws DBus.Error;
 
-    public abstract void set_glow (DBus.BusName sender,
-                                   bool activate) throws DBus.Error;
+    public abstract void set_glow (bool activate) throws DBus.Error;
 
     public abstract double offset_modifier { get; }
     public abstract int max_size { get; }
@@ -67,7 +64,7 @@
 
     public signal void destroy_applet (string uid);
     public signal void destroy_notify ();
-    public signal void property_changed (string prop_name, Value value);
+    /*public signal void property_changed (string prop_name, Value value);*/
   }
 
   public class PanelDispatcher: Object, PanelDBusInterface
@@ -78,7 +75,7 @@
     {
       Object (panel: panel);
 
-      panel.size_changed.connect ( (p, s) =>
+      /*panel.size_changed.connect ( (p, s) =>
       {
         this.property_changed ("size", s);
       });
@@ -93,7 +90,7 @@
       panel.property_changed.connect ( (p, pn, v) =>
       {
         this.property_changed (pn, v);
-      });
+      });*/
 
       var conn = DBus.Bus.get (DBus.BusType.SESSION);
       string obj_path = "/org/awnproject/Awn/Panel%d".printf(panel.panel_id);
@@ -137,11 +134,9 @@
       return result;
     }
 
-    public uint inhibit_autohide (DBus.BusName sender,
-                                  string app_name,
-                                  string reason) throws DBus.Error
+    public uint inhibit_autohide (string reason) throws DBus.Error
     {
-      return panel.inhibit_autohide (sender, app_name, reason);
+      return panel.inhibit_autohide (reason);
     }
 
     public void uninhibit_autohide (uint cookie) throws DBus.Error
@@ -154,9 +149,9 @@
       panel.set_applet_flags (uid, flags);
     }
 
-    public void set_glow (DBus.BusName sender, bool activate) throws DBus.Error
+    public void set_glow (bool activate) throws DBus.Error
     {
-      panel.set_glow (sender, activate);
+      panel.set_glow (activate);
     }
 
     public double offset_modifier
diff -ur awn/src/awn-panel.h dankawn/src/awn-panel.h
--- awn/src/awn-panel.h	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/src/awn-panel.h	2012-12-17 01:23:54.343101262 -0500
@@ -95,14 +95,11 @@
                                            GError          **error);
 
 void        awn_panel_set_glow            (AwnPanel         *panel,
-                                           const gchar      *sender,
                                            gboolean          activate);
 
 gint        awn_panel_get_glow_size       (AwnPanel *panel);
 
 guint       awn_panel_inhibit_autohide    (AwnPanel *panel,
-                                           const gchar *sender,
-                                           const gchar *app_name,
                                            const gchar *reason);
 
 gboolean    awn_panel_uninhibit_autohide  (AwnPanel         *panel,
diff -ur awn/src/awn-panel.vapi dankawn/src/awn-panel.vapi
--- awn/src/awn-panel.vapi	2012-12-17 01:37:32.058059000 -0500
+++ dankawn/src/awn-panel.vapi	2012-12-17 01:47:07.086409480 -0500
@@ -9,8 +9,8 @@
     public bool add_applet (string desktop_file) throws GLib.Error;
     public bool delete_applet (string uid) throws GLib.Error;
     public bool set_applet_flags (string uid, int flags) throws GLib.Error;
-    public bool set_glow (string sender, bool activate);
-    public uint inhibit_autohide (string sender, string app_name, string reason); 
+    public bool set_glow (bool activate);
+    public uint inhibit_autohide (string reason); 
     public bool uninhibit_autohide (uint cookie);
 
     [CCode (array_length = false, array_null_terminated = true)]
Only in dankawn/src: Makefile.in
Only in dankawn/tests: Makefile.in
Only in dankawn/themes: Makefile.in
