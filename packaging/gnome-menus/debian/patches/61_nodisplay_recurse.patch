From ade49e7f07ef6cb0168002f6c12a4be6c1bdbee8 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@mecheye.net>
Date: Mon, 18 Jun 2012 22:08:26 +0000
Subject: libmenu: Add a way to grab NoDisplay on an item and all of its parents

Some applications may want a way to show or hide a tree entry based on
its visibility in the actual tree.

https://bugzilla.gnome.org/show_bug.cgi?id=678419
---
Index: gnome-menus-3.4.2/libmenu/gmenu-tree.c
===================================================================
--- gnome-menus-3.4.2.orig/libmenu/gmenu-tree.c	2012-06-23 20:28:56.000000000 +0200
+++ gnome-menus-3.4.2/libmenu/gmenu-tree.c	2012-06-23 20:35:34.747979852 +0200
@@ -127,7 +127,6 @@ struct GMenuTreeEntry
   char         *desktop_file_id;
 
   guint is_excluded : 1;
-  guint is_nodisplay : 1;
 };
 
 struct GMenuTreeSeparator
@@ -1210,6 +1209,31 @@ gmenu_tree_entry_get_desktop_file_id (GM
 }
 
 gboolean
+gmenu_tree_entry_get_is_nodisplay_recurse (GMenuTreeEntry *entry)
+{
+  GMenuTreeDirectory *directory;
+  GDesktopAppInfo *app_info;
+
+  g_return_val_if_fail (entry != NULL, FALSE);
+
+  app_info = gmenu_tree_entry_get_app_info (entry);
+
+  if (g_desktop_app_info_get_nodisplay (app_info))
+    return TRUE;
+
+  directory = entry->item.parent;
+  while (directory != NULL)
+    {
+      if (directory->is_nodisplay)
+        return TRUE;
+
+      directory = directory->item.parent;
+    }
+
+  return FALSE;
+}
+
+gboolean
 gmenu_tree_entry_get_is_excluded (GMenuTreeEntry *entry)
 {
   g_return_val_if_fail (entry != NULL, FALSE);
@@ -1453,8 +1477,7 @@ static GMenuTreeEntry *
 gmenu_tree_entry_new (GMenuTreeDirectory *parent,
 		      DesktopEntry       *desktop_entry,
 		      const char         *desktop_file_id,
-		      gboolean            is_excluded,
-                      gboolean            is_nodisplay)
+		      gboolean            is_excluded)
 {
   GMenuTreeEntry *retval;
 
@@ -1467,7 +1490,6 @@ gmenu_tree_entry_new (GMenuTreeDirectory
   retval->desktop_entry   = desktop_entry_ref (desktop_entry);
   retval->desktop_file_id = g_strdup (desktop_file_id);
   retval->is_excluded     = is_excluded != FALSE;
-  retval->is_nodisplay    = is_nodisplay != FALSE;
 
   return retval;
 }
@@ -3165,8 +3187,7 @@ entries_listify_foreach (const char
 		     gmenu_tree_entry_new (directory,
                                            desktop_entry,
                                            desktop_file_id,
-                                           FALSE,
-                                           desktop_entry_get_no_display (desktop_entry)));
+                                           FALSE));
 }
 
 static void
@@ -3179,8 +3200,7 @@ excluded_entries_listify_foreach (const
 		     gmenu_tree_entry_new (directory,
 					   desktop_entry,
 					   desktop_file_id,
-					   TRUE,
-                                           desktop_entry_get_no_display (desktop_entry)));
+					   TRUE));
 }
 
 static void
Index: gnome-menus-3.4.2/libmenu/gmenu-tree.h
===================================================================
--- gnome-menus-3.4.2.orig/libmenu/gmenu-tree.h	2012-06-23 20:28:56.000000000 +0200
+++ gnome-menus-3.4.2/libmenu/gmenu-tree.h	2012-06-23 20:29:01.950059558 +0200
@@ -136,6 +136,7 @@ GMenuTreeDirectory *gmenu_tree_entry_get
 const char *gmenu_tree_entry_get_desktop_file_path (GMenuTreeEntry *entry);
 const char *gmenu_tree_entry_get_desktop_file_id   (GMenuTreeEntry *entry);
 
+gboolean gmenu_tree_entry_get_is_nodisplay_recurse  (GMenuTreeEntry *entry);
 gboolean gmenu_tree_entry_get_is_excluded  (GMenuTreeEntry *entry);
 
 GMenuTreeDirectory *gmenu_tree_header_get_directory (GMenuTreeHeader *header);
