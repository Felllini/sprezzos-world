Description: Fix build with irrlicht 1.7.3
 This patch enables supertuxkart to be built with the latest stable release
 of irrlicht (1.7.3) rather than svn r3843.
Forwarded: http://sourceforge.net/apps/trac/supertuxkart/ticket/628
Author: Vincent Cheng <Vincentc1208@gmail.com>
Last-Update: 2012-05-07

--- a/src/states_screens/dialogs/track_info_dialog.cpp
+++ b/src/states_screens/dialogs/track_info_dialog.cpp
@@ -199,7 +199,7 @@
     IGUIStaticText* hscores_header = GUIEngine::getGUIEnv()->addStaticText( text.c_str(), hiscores_title_area,
                                                                            false , true , // border, word warp
                                                                            m_irrlicht_window);
-    hscores_header->setTextRestrainedInside(false);
+    //hscores_header->setTextRestrainedInside(false);
     hscores_header->setTextAlignment(EGUIA_CENTER, EGUIA_CENTER);
     
     // fill highscore entries
--- a/src/states_screens/dialogs/add_device_dialog.cpp
+++ b/src/states_screens/dialogs/add_device_dialog.cpp
@@ -65,7 +65,7 @@
                                               /*word wrap*/true,
                                               m_irrlicht_window);
     b->setTabStop(false);
-    b->setRightToLeft(translations->isRTLLanguage());
+    //b->setRightToLeft(translations->isRTLLanguage());
     // because it looks like 'setRightToLeft' applies next time 
     // setText is called only
     b->setText(msg.c_str());
--- a/src/guiengine/skin.cpp
+++ b/src/guiengine/skin.cpp
@@ -853,7 +853,7 @@
             irr_driver->getVideoDriver()->getMaterial2D();
         for (unsigned int n=0; n<MATERIAL_MAX_TEXTURES; n++)
         {
-            material2D.UseMipMaps = false;
+            //material2D.UseMipMaps = false;
         }
         
         const bool mouseIn = rect.isPointInside(irr_driver->getDevice()
@@ -892,7 +892,7 @@
         
         for (unsigned int n=0; n<MATERIAL_MAX_TEXTURES; n++)
         {
-            material2D.UseMipMaps = true;
+            //material2D.UseMipMaps = true;
         }
     }
     /* icon ribbons */
--- a/src/guiengine/widgets/bubble_widget.cpp
+++ b/src/guiengine/widgets/bubble_widget.cpp
@@ -58,7 +58,7 @@
     irrwidget = GUIEngine::getGUIEnv()->addStaticText(message.c_str(), m_shrinked_size,
                                                       false, true /* word wrap */, m_parent,
                                                       (m_focusable ? getNewID() : getNewNoFocusID()));
-    irrwidget->setTextRestrainedInside(false);
+    //irrwidget->setTextRestrainedInside(false);
     
 #if IRRLICHT_VERSION_MAJOR > 1 || (IRRLICHT_VERSION_MAJOR == 1 && IRRLICHT_VERSION_MINOR >= 8)
     irrwidget->setRightToLeft( translations->isRTLLanguage() );
--- a/src/graphics/irr_driver.cpp
+++ b/src/graphics/irr_driver.cpp
@@ -267,7 +267,7 @@
         material2D.TextureLayer[n].TextureWrapV = ETC_CLAMP_TO_EDGE;
         
         //material2D.TextureLayer[n].LODBias = 16;
-        material2D.UseMipMaps = true;
+        //material2D.UseMipMaps = true;
     }
     material2D.AntiAliasing=video::EAAM_FULL_BASIC;
     //m_video_driver->enableMaterial2D();
--- a/src/graphics/irr_driver.hpp
+++ b/src/graphics/irr_driver.hpp
@@ -39,7 +39,7 @@
 namespace irr
 {
     namespace scene { class ISceneManager; class IMesh; class IAnimatedMeshSceneNode; class IAnimatedMesh;
-        class IMeshSceneNode; class IParticleSystemSceneNode; class ICameraSceneNode; class ILightSceneNode; }
+        class IMeshSceneNode; class IParticleSystemSceneNode; class ICameraSceneNode; class ILightSceneNode; class ISceneNode; }
     namespace gui   { class IGUIEnvironment; class IGUIFont; }
 }
 using namespace irr;
--- a/src/graphics/particle_emitter.cpp
+++ b/src/graphics/particle_emitter.cpp
@@ -291,7 +291,7 @@
 
 void ParticleEmitter::clearParticles()
 {
-    m_node->clearParticles();
+    //m_node->clearParticles();
 }
 
 //-----------------------------------------------------------------------------
--- a/src/guiengine/widgets/CGUIEditBox.cpp
+++ b/src/guiengine/widgets/CGUIEditBox.cpp
@@ -755,10 +755,7 @@
 
 	if (Border)
 	{
-		EGUI_DEFAULT_COLOR col = EGDC_GRAY_EDITABLE;
-		if ( isEnabled() )
-			col = focus ? EGDC_FOCUSED_EDITABLE : EGDC_EDITABLE;
-		skin->draw3DSunkenPane(this, skin->getColor(col),
+		skin->draw3DSunkenPane(this, video::SColor(255, 0,0,0),
 			false, true, FrameRect, &AbsoluteClippingRect);
 
 		FrameRect.UpperLeftCorner.X += skin->getSize(EGDS_TEXT_DISTANCE_X)+1;
