Description: Build supertuxkart against system enet instead of embedded copy
 Note that this patch must be applied _after_ backport_cmake.patch.
Forwarded: not-yet
Author: Vincent Cheng <Vincentc1208@gmail.com>
Last-Update: 2012-05-31

--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -19,19 +19,15 @@
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")
 
 # Define install paths
-set(STK_INSTALL_BINARY_DIR "bin" CACHE
+set(STK_INSTALL_BINARY_DIR "games" CACHE
     STRING "Install executable to this directory, absolute or relative to CMAKE_INSTALL_PREFIX")
-set(STK_INSTALL_DATA_DIR "share/supertuxkart" CACHE
+set(STK_INSTALL_DATA_DIR "share/games/supertuxkart" CACHE
     STRING "Install data folder to this directory, absolute or relative to CMAKE_INSTALL_PREFIX")
 
 # Build the Bullet physics library
 add_subdirectory("${STK_SOURCE_DIR}/bullet")
 include_directories("${STK_SOURCE_DIR}/bullet/src")
 
-# Build the ENet UDP network library
-add_subdirectory("${STK_SOURCE_DIR}/enet")
-include_directories("${STK_SOURCE_DIR}/enet/include")
-
 # Build the Wiiuse library
 if(USE_WIIUSE)
     add_subdirectory("${STK_SOURCE_DIR}/wiiuse")
@@ -49,7 +45,7 @@
 endif()
 
 # Irrlicht
-find_package(Irrlicht 1.8 REQUIRED)
+find_package(Irrlicht REQUIRED)
 include_directories(${IRRLICHT_INCLUDE_DIRS})
 
 # OpenAL
@@ -64,6 +60,10 @@
 find_package(CURL REQUIRED)
 include_directories(${CURL_INCLUDE_DIRS})
 
+# ENet
+find_package(ENet REQUIRED)
+include_directories(${ENET_INCLUDE_DIR})
+
 # Fribidi
 if(USE_FRIBIDI)
     find_package(Fribidi)
@@ -158,8 +158,8 @@
     bulletdynamics
     bulletcollision
     bulletmath
-    enet
     ${CURL_LIBRARIES}
+    ${ENET_LIBRARIES}
     ${IRRLICHT_LIBRARIES}
     ${OGGVORBIS_LIBRARIES}
     ${OPENAL_LIBRARY}
--- /dev/null
+++ b/cmake/FindENet.cmake
@@ -0,0 +1,22 @@
+# - Find ENet
+# Find the ENet includes and libraries
+#
+# Following variables are provided:
+# ENET_FOUND
+#     True if ENet has been found
+# ENET_INCLUDE_DIR
+#     The include directories of ENet
+# ENET_LIBRARIES
+#     ENet library list
+
+
+find_path(ENET_INCLUDE_DIR enet/enet.h /usr/include)
+find_library(ENET_LIBRARY NAMES enet PATHS /usr/lib)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(ENet DEFAULT_MSG ENET_INCLUDE_DIR ENET_LIBRARY)
+
+# Publish variables
+set(ENET_INCLUDE_DIRS ${ENET_INCLUDE_DIR})
+set(ENET_LIBRARIES ${ENET_LIBRARY})
+mark_as_advanced(ENET_INCLUDE_DIR ENET_LIBRARY)
