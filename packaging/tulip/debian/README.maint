Maintainer notes for the tulip package
======================================

filtering of upstream tarball
-----------------------------

git rm -r				\
 thirdparty/saxon/			\
 thirdparty/xml-commons/		\
 thirdparty/libgpugraph/		\
 thirdparty/ftgl/			\
 thirdparty/QScintilla-gpl-2.4.6/	\
 thirdparty/sip-4.12.1/
tar -jcf ../tulip_3.6.0dfsg.orig.tar.bz2 . --exclude .git --transform 's,^\./,tulip-3.6.0dfsg/,'


generation of debian/patches/
-----------------------------

Packaging is done with a "main" tulip git repo with upstream source is
not public, because of both volume and DFSG issues.  The useful parts
can be reconstructed from upstream tarballs, and from the
dfsg-filtering shown above.  Or you can deal with the package as with
any other with debian/ tree in a collab-maint git repo.

This "main" repository contains:
* a "dfsg" branch forked off "upstream"
* a "patches" branch managed with git-rebase, for changes to filtered upstream source
* a "debian/" submodule available as git://git.debian.org/git/collab-maint/tulip.git
* a "debian" branch forked off "dfsg", with just submodule updates

After a switch to branch "debian" and a "git submodules update", we
can switch back to "patches", and even a "git reset --hard" won't nuke
anything from debian/, so we can happily rewrite the patch stack and
adjust debian/ contents till OK.

The patches are then exported from "patches" to the debian/submodule with:

(cd debian && git rm -f patches/*)
git format-patch -N -o debian/patches/ dfsg..patches
(cd debian/patches/ && ls *.patch > series)
(cd debian && git add -f patches)

-- 
Yann Dirson, 2012-05-08.


old notes, stripped from obsolete stuff (still to be merged above)
---------------------------------------

I currently maintain this package using stgit.  There are no tools yet
to help Debian-specific tasks in this matter, so here is how I work:

 - upstream releases imported using git-import-orig into "upstream"
 branch (note: you need to specify a version explicitely for
 prereleases including a ~ in the version):
	$ git-import-orig --no-merge -u 3.0.0B7 ../tulip_3.0.0~B7.orig.tar.gz

 - "git tag -m vX.Y.Z-D debian/X.Y.Z-D"

Other possible improvements:

- work out a topic-branch-based scheme to manage the history of
individual patches
- write a tool to automate the various tasks
- maybe explain how someone can reconstruct my working environment
from debian/patches

-- 
Yann Dirson, 2008-01-12.
