.TH "SAFECOPY" "1" "August 2009" "" ""
.SH "NAME"
SAFECOPY \- A data recovery tool
.SH "SYNOPSIS"
.B SAFECOPY
.RB [OPTIONS]
.RB SOURCE
.RB TARGET
.SH "DESCRIPTION"
A data recovery tool.
.PP
.PP
Safecopy is a data recovery tool which tries to extract as much data as
possible from a seekable, but problematic (i.e. damaged sectors)
source \- like floppy drives, harddisk partitions, CDs, ..., where
other tools like dd would fail doe to I/O errors.
.PP
Safecopy tries to get as much data from the source as possible without
device dependent tricks. For example to get an ISO image from a copy
protected or otherwise damaged CD\-ROM, cdrdao and bin2iso would possibly
do a better and faster job.
.PP
Safecopy comes with preset options (named stages) to ease its use.
These presets can be overridden by individual options.
.SH "OPTIONS"
Usage: safecopy [options] <source> <target>
.TP
.B \-b <size>
Blocksize, also used for skipping offset when searching for the end of a
bad area. Set this to physical sectorsize of your media.
.br
Default: 1*
.br
If <size> is an integer, then the unit is in bytes.
.br
If <size> is followed by the percentage sign, it
express a percentage of the whole file/device size.
.br
If <size> is followed by a star sign, it means
a number of times the block size reported by the operating system.
.TP
.B \-f <size>
Size when skipping over badblocks.
Higher values put less strain on dammaged hardware,
but on the other hand, you might miss good areas
in between two bad ones.
.br
Default value is 16*.
.br
If <size> is an integer, then the unit is in bytes.
.br
If <size> is followed by the percentage sign, it
express a percentage of the whole file/device size.
.br
If <size> is followed by a star sign, it means
a number of times the block size. See option \-b.
.TP
.B \-r <size>
Resolution when searching for the exact beginning or end of a bad area
Bigger values increase performace at potential cost of valid data
close to damaged areas.
.br
Default: 1*
.br
If <size> is an integer, then the unit is in bytes.
.br
If <size> is followed by the percentage sign, it
express a percentage of the whole file/device size.
.br
If <size> is followed by a star sign, it means
a number of times the block size. See option \-b.
.TP
.B \-R <number>
Number of read attempts on the first bad block of a damaged area
with minimum resolution. More retries can sometimes recover a weak sector,
but at the cost of additional strain.
.br
Default: 3
.TP
.B \-Z <number>
On each error, force seek the read head from start to
end of the source device as often as specified.
That takes times, create additional strain and might not be supported
by all devices or drivers.
.br
Default: 1
.TP
.B \-L <mode>
Use low level device calls as specified by the mode number.
.br
Where mode number can be:
.br
0: Do not use low level device calls.
.br
1: Attempt low level device calls for error recovery only.
.br
2: Always use low level device calls if available.
.br
Default: 1
.TP
.B \-\-sync
.br
Use synchronized read calls (disable driver buffering).
Safecopy will use O_DIRECT if supported by the operating system and
O_SYNC otherwise.
.br
Default: Asynchronous read buffering.
.TP
.B \-s <blocks>
Start position where to start reading. Will correspond
to position 0 in the destination file.
.br
Default: block 0
.TP
.B \-l <blocks>
Length of data to be read.
.br
Default: size of input file.
.TP
.B \-I <badblockfile>
Incremental mode. Assume the target file already exists and has holes
specified in the badblockfile.
.br
It will attempt to retrieve more data from the listed blocks or from
beyond the file size of the target file only.
.br
WARNING: Without this option, the destination file will be emptied prior
to writing.
.br
Use \-I /dev/null if you want to continue a previous run of safecopy
without a badblock list file.
.br
Default: None
.TP
.B \-i <bytes>
Blocksize to interpret the badblockfile given with \-I.
.br
Default: Blocksize as specified by \-b.
.TP
.B \-X <badblockfile>
Exclusion mode. If used together with \-I, excluded blocks override
included ones. Safecopy will not read or write any data from areas covered
by excluded blocks.
.br
Default: None
.TP
.B \-x <bytes>
Blocksize to interpret the badblockfile given with \-X.
.br
Default: blocksize as specified by \-b
.TP
.B \-o <badblockfile>
Write a badblocks/e2fsck compatible bad block file.
.br
Default: None
.TP
.B \-S <seekscript>
Use an external script foir seeking in input file. This might be useful for
tape devices or similar.
.br
Seekscript must be an executable that takes the number of blocks to be skipped
as argv1 (1-64) the blocksize in bytes as argv2 and the current position as
argv3.
.br
Return values needs to be the number of blocks successfully skipped, or 0 to
indicate seek failure. The external seekscript will only be used if lseek()
fails and we need to skip over data.
.br
Default: None
.TP
.B \-M <string>
Mark unrecovered data with this string instead of skipping it. This helps in
later on rescued file system images.
.br
The default behavior is to zero the unreadable data on creation of the output
files, and leaving the data as it is on any later run.
.br
WARNING: when used in combination with incremental mode (\-I), this may
overwrite data in any block specified in the badblockfile.
Blocks not in the badblockfile, or covered by those specified in the \-X file
are safe from being overwritten.
.br
Default: None
.TP
.B \-\-debug <level>
Enable debug output. Level is a bit field, add values together for more
informations as follow:
.br
1 program flow
.br
2 IO control
.br
4 badblock marking
.br
8 seeking
.br
16 incremental mode
.br
32 exclude mode
.br
Use 255 for all debug output.
.br
Default: 0
.TP
.B \-T <timingfile>
Write sector read timing information into this file for later analysis.
.br
Default: None
.TP
.B \-h | \-\-help
Show a maybe more detailed help.
.SH "PRESETS OPTIONS"
.TP
.B \-\-stage1
Preset to rescue most of the data fast, using no retries and avoiding bad
areas.
.br
Presets: \-f 10% \-r 10% \-R 1 \-Z 0 \-L 2 \-M BaDbloCk \-o stage1.badblocks
.TP
.B \-\-stage2
Preset to rescue more data, using no retries but searching for exact ends
of bad areas.
.br
Presets: \-f 128* \-r 1* \-R 1 \-Z 0 \-L 2 \-I stage1.badblocks
\-o stage2.badblocks
.TP
.B \-\-stage3
Preset to rescue everything that can be rescued using maximum retries,
head realignment tricks and low level access.
.br
Presets: \-f 1* \-r 1* \-R 4 \-Z 1 \-L 2 \-I stage2.badblocks
\-o stage3.badblocks
.SH "DESCRIPTION OF OUTPUT"
.TP
.B . :
Between 1 and 1024 blocks successfully read.
.TP
.B _ :
Read was incomplete. (possibly end of file) blocksize is reduced to
read the rest.
.TP
.B > :
Read failed, reducing blocksize to read partial data.
.TP
.B [xx](+yy) :
current block and number of blocks (or bytes) continuously read
successfully up to this point.
.TP
.B X :
Read failed on block with minimum blocksize and is skipped. Unrecoverable
error, destination file is padded with zeros. Data is now skipped until
end of the unreadable area is reached.
.TP
.B < :
Successfull read\- test after the end of a bad area causes backtracking to
search for the first readable data.
.TP
.B [xx](+yy) :
Current block and number of blocks (or bytes) of recent continuous
unreadable data.
.SH "AUTHOR"
safecopy was written by Corvus Corax (corvuscorax@cybertrench.com)
.PP
This manual page was originally written by Juan Angulo Moreno
<juan@apuntale.com> for the Debian project (but may be used by others).
It was filled out by Christophe Monniez <christophe.monniez@fccu.be> .
