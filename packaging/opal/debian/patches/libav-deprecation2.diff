diff -ur /media/build/world/opal_3.10.9/plugins/video/common/dyna.cxx ./plugins/video/common/dyna.cxx
--- opal_3.10.9/plugins/video/common/dyna.cxx	2012-11-26 05:48:26.000000000 -0500
+++ ./plugins/video/common/dyna.cxx	2012-12-18 06:55:37.562707906 -0500
@@ -176,6 +176,7 @@
 
 
 #if PLUGINCODEC_TRACING
+#include <stdio.h>
 static void logCallbackFFMPEG(void * avcl, int severity, const char* fmt , va_list arg)
 {
   int level;
diff -ur /media/build/world/opal_3.10.9/plugins/video/H.263-1998/h263-1998.cxx ./plugins/video/H.263-1998/h263-1998.cxx
--- opal_3.10.9/plugins/video/H.263-1998/h263-1998.cxx	2012-12-18 06:34:14.000000000 -0500
+++ ./plugins/video/H.263-1998/h263-1998.cxx	2012-12-18 06:55:08.689375093 -0500
@@ -525,7 +525,7 @@
 
     // Need to copy to local buffer to guarantee 16 byte alignment
     memcpy(m_inputFrame->data[0], OPAL_VIDEO_FRAME_DATA_PTR(header), header->width*header->height*3/2);
-    m_inputFrame->pict_type = (flags & PluginCodec_CoderForceIFrame) ? FF_I_TYPE : AV_PICTURE_TYPE_NONE;
+    m_inputFrame->pict_type = (flags & PluginCodec_CoderForceIFrame) ? AV_PICTURE_TYPE_I : AV_PICTURE_TYPE_NONE;
 
     /*
     m_inputFrame->pts = (int64_t)srcRTP.GetTimestamp()*m_context->time_base.den/m_context->time_base.num/VIDEO_CLOCKRATE;
diff -ur /media/build/world/opal_3.10.9/plugins/video/H.264/h264-x264.cxx ./plugins/video/H.264/h264-x264.cxx
--- opal_3.10.9/plugins/video/H.264/h264-x264.cxx	2012-11-26 05:48:24.000000000 -0500
+++ ./plugins/video/H.264/h264-x264.cxx	2012-12-18 06:59:50.426036678 -0500
@@ -36,6 +36,8 @@
  * $Date: 2012-07-17 22:41:57 -0500 (Tue, 17 Jul 2012) $
  */
 
+#include <stdio.h>
+
 #ifndef PLUGIN_CODEC_DLL_EXPORTS
 #include "plugin-config.h"
 #endif
@@ -1071,13 +1073,13 @@
         return false;
 
       m_context->workaround_bugs = FF_BUG_AUTODETECT;
-      m_context->error_recognition = FF_ER_AGGRESSIVE;
+      //m_context->error_recognition = FF_ER_AGGRESSIVE;
       m_context->idct_algo = FF_IDCT_H264;
       m_context->error_concealment = FF_EC_GUESS_MVS | FF_EC_DEBLOCK;
       m_context->flags = CODEC_FLAG_INPUT_PRESERVED | CODEC_FLAG_EMU_EDGE;
-      m_context->flags2 = CODEC_FLAG2_BRDO |
-                          CODEC_FLAG2_MEMC_ONLY |
-                          CODEC_FLAG2_DROP_FRAME_TIMECODE |
+      m_context->flags2 = /* CODEC_FLAG2_BRDO | obsolete */
+                          /* CODEC_FLAG2_MEMC_ONLY | obsolete */
+                          /* CODEC_FLAG2_DROP_FRAME_TIMECODE obsolete | */
                           CODEC_FLAG2_SKIP_RD |
                           CODEC_FLAG2_CHUNKS;
 
diff -ur /media/build/world/opal_3.10.9/plugins/video/MPEG4-ffmpeg/mpeg4.cxx ./plugins/video/MPEG4-ffmpeg/mpeg4.cxx
--- opal_3.10.9/plugins/video/MPEG4-ffmpeg/mpeg4.cxx	2012-11-26 05:48:28.000000000 -0500
+++ ./plugins/video/MPEG4-ffmpeg/mpeg4.cxx	2012-12-18 06:58:03.892705267 -0500
@@ -594,12 +594,12 @@
 #else
     m_avcontext->max_b_frames=0; /*don't use b frames*/
     m_avcontext->flags|=CODEC_FLAG_AC_PRED;
-    m_avcontext->flags|=CODEC_FLAG_H263P_UMV;
+    // m_avcontext->flags|=CODEC_FLAG_H263P_UMV; obsolete
     /*c->flags|=CODEC_FLAG_QPEL;*/ /*don't enable this one: this forces profile_level to advanced simple profile */
     m_avcontext->flags|=CODEC_FLAG_4MV;
     m_avcontext->flags|=CODEC_FLAG_GMC;
     m_avcontext->flags|=CODEC_FLAG_LOOP_FILTER;
-    m_avcontext->flags|=CODEC_FLAG_H263P_SLICE_STRUCT;
+    //m_avcontext->flags|=CODEC_FLAG_H263P_SLICE_STRUCT; obsolete
 #endif
     m_avcontext->opaque = this;              // for use in RTP callback
 }
@@ -804,7 +804,7 @@
         // Should the next frame be an I-Frame?
         if ((flags & PluginCodec_CoderForceIFrame) || (m_frameNum == 0))
         {
-            m_avpicture->pict_type = FF_I_TYPE;
+            m_avpicture->pict_type = AV_PICTURE_TYPE_I;
         }
         else // No IFrame requested, let avcodec decide what to do
         {
@@ -1325,7 +1325,7 @@
 
 void MPEG4DecoderContext::SetStaticDecodingParams() {
     m_avcontext->flags |= CODEC_FLAG_4MV; 
-    m_avcontext->flags |= CODEC_FLAG_PART;
+    //m_avcontext->flags |= CODEC_FLAG_PART;
     m_avcontext->workaround_bugs = 0; // no workaround for buggy implementations
 }
 
@@ -1339,7 +1339,7 @@
     if (m_doError) {
         int errors = 0;
         MpegEncContext *s = (MpegEncContext *) m_avcontext->priv_data;
-        if (s->error_count && m_avcontext->coded_frame->pict_type == FF_I_TYPE) {
+        if (s->error_count && m_avcontext->coded_frame->pict_type == AV_PICTURE_TYPE_I) {
             const uint8_t badflags = AC_ERROR | DC_ERROR | MV_ERROR;
             for (int i = 0; i < s->mb_num && errors < threshold; ++i) {
                 if (s->error_status_table[s->mb_index2xy[i]] & badflags)
