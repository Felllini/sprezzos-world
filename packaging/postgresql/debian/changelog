postgresql-9.1 (9.1.7-SprezzOS1) unstable; urgency=low

  * New upstream version 9.1.7 (2012-12-06)

 -- Nick Black <nick.black@sprezzatech.com>  Thu, 06 Dec 2012 18:59:10 -0500

postgresql-9.1 (9.1.6-SprezzOS1) unstable; urgency=low

  * SprezzOS build

 -- nick black <nick.black@sprezzatech.com>  Tue, 27 Nov 2012 14:39:38 -0500

postgresql-9.1 (9.1.6-1) unstable; urgency=medium

  * Urgency medium because of data loss bug fix.
  * New upstream bug fix release:
    - Fix persistence marking of shared buffers during WAL replay.
      This mistake can result in buffers not being written out during
      checkpoints, resulting in data corruption if the server later
      crashes without ever having written those buffers. Corruption can
      occur on any server following crash recovery, but it is
      significantly more likely to occur on standby slave servers since
      those perform much more WAL replay. There is a low probability of
      corruption of btree and GIN indexes. There is a much higher
      probability of corruption of table "visibility maps". Fortunately,
      visibility maps are non-critical data in 9.1, so the worst
      consequence of such corruption in 9.1 installations is transient
      inefficiency of vacuuming. Table data proper cannot be corrupted by
      this bug.
      While no index corruption due to this bug is known to have occurred
      in the field, as a precautionary measure it is recommended that
      production installations "REINDEX" all btree and GIN indexes at a
      convenient time after upgrading to 9.1.6.
      Also, if you intend to do an in-place upgrade to 9.2.X, before
      doing so it is recommended to perform a "VACUUM" of all tables
      while having vacuum_freeze_table_age set to zero. This will ensure
      that any lingering wrong data in the visibility maps is corrected
      before 9.2.X can depend on it. vacuum_cost_delay can be adjusted to
      reduce the performance impact of vacuuming, while causing it to
      take longer to finish.
    - See HISTORY/changelog.gz for the other bug fixes.
  * debian/rules: Compress all binaries with xz. Thanks Cyril Brulebois!
    (Closes: #688678)

 -- Martin Pitt <mpitt@debian.org>  Tue, 25 Sep 2012 05:40:23 +0200

postgresql-9.1 (9.1.5-2) unstable; urgency=low

  * debian/rules: Re-enable hardening functions (regression from 9.1.3-2 when
    hardening-wrapper is not installed). Use "hardening=all", but disable
    "pie" (as that's not compatible with -fPIC) and add -pie to CFLAGS
    explicitly. Also drop the explicit "-Wl,-z,now" linker option, as this is
    now implied with "all". (LP: #1039618)
  * Fix upgrades from older 9.1 releases in stable Ubuntu -updates/-security
    releasese. The strict "<< 9.1.4-2~" check for moving pg_basebackup.1.gz is
    not sufficient, as Ubuntu stables have newer upstream releases by now.
    - debian/control: Move Breaks/Replaces: from static version to
      ${binary:Version}.
    - debian/postgresql-9.1.preinst: Also fix the alternatives when upgrading
      from a -0something version.
    - (LP: #1043449)

 -- Martin Pitt <mpitt@debian.org>  Fri, 31 Aug 2012 09:54:27 +0200

postgresql-9.1 (9.1.5-1) unstable; urgency=medium

  * Urgency medium due to security fixes and bug fixes which should reach
    Wheezy quickly.
  * New upstream bug fix/security release:
    - Prevent access to external files/URLs via XML entity references.
      xml_parse() would attempt to fetch external files or URLs as needed
      to resolve DTD and entity references in an XML value, thus allowing
      unprivileged database users to attempt to fetch data with the
      privileges of the database server. While the external data wouldn't
      get returned directly to the user, portions of it could be exposed
      in error messages if the data didn't parse as valid XML; and in any
      case the mere ability to check existence of a file might be useful
      to an attacker. (CVE-2012-3489)
    - Prevent access to external files/URLs via "contrib/xml2"'s
      xslt_process().
      libxslt offers the ability to read and write both files and URLs
      through stylesheet commands, thus allowing unprivileged database
      users to both read and write data with the privileges of the
      database server. Disable that through proper use of libxslt's
      security options. (CVE-2012-3488)
      Also, remove xslt_process()'s ability to fetch documents and
      stylesheets from external files/URLs. While this was a documented
      "feature", it was long regarded as a bad idea. The fix for
      CVE-2012-3489 broke that capability, and rather than expend effort
      on trying to fix it, we're just going to summarily remove it.
    - Lots of other bug fixes, see HISTORY/changelog.gz.

 -- Martin Pitt <mpitt@debian.org>  Fri, 17 Aug 2012 14:41:52 +0200

postgresql-9.1 (9.1.4-3) unstable; urgency=medium

  Urgency medium: Trivial changes, and fixes RC bug.

  [ Christoph Berg ]
  * debian/source/options: Ignore test suite .sql files, to fix building
    twice in a row; ignore .bzr-builddeb/default.conf so bzr checkouts can be
    built using dpkg-buildpackage.

  [ Martin Pitt ]
  * debian/postgresql-9.1.postrm: Do not remove the directories
    /var/{lib,log}/postgresql/, they are owned by the postgresql-common
    package. (Closes: #681966)

 -- Martin Pitt <mpitt@debian.org>  Sat, 21 Jul 2012 16:53:55 +0200

postgresql-9.1 (9.1.4-2) unstable; urgency=low

  [ Christoph Berg ]
  * Some cosmetic changes to control and rules file.
  * Add myself to Uploaders.

  [ Martin Pitt ]
  * Move pg_basebackup *.mo files and man page to -client-9.2. Thanks to Peter
    Eisentraut for spotting this. (Closes: #674421)
  * debian/postgresql-9.1.preinst: Remove postmaster.1.gz alternative on
    upgrades to this version, so that the postinst can rebuild it. This is
    necessary to drop pg_basebackup.1.gz from the server alternatives group,
    so that it can go into the client group.
  * debian/postgresql-9.1.preinst: Drop obsolete transition code.
  * debian/rules: Set -DLINUX_OOM_ADJ in CPPFLAGS, not in CFLAGS. Thanks Peter
    Eisentraut. (Closes: #668300)

 -- Martin Pitt <mpitt@debian.org>  Fri, 22 Jun 2012 10:35:38 +0200

postgresql-9.1 (9.1.4-1) unstable; urgency=medium

  * Urgency medium due to security fixes.
  * New upstream bug fix/security release:
    - Fix incorrect password transformation in "contrib/pgcrypto"'s DES
      crypt() function.
      If a password string contained the byte value 0x80, the remainder
      of the password was ignored, causing the password to be much weaker
      than it appeared. With this fix, the rest of the string is properly
      included in the DES hash. Any stored password values that are
      affected by this bug will thus no longer match, so the stored
      values may need to be updated. (CVE-2012-2143)
    - Ignore SECURITY DEFINER and SET attributes for a procedural
      language's call handler. Applying such attributes to a call handler
      could crash the server. (CVE-2012-2655)
    - Make "contrib/citext"'s upgrade script fix collations of citext
      arrays and domains over citext.
      Release 9.1.2 provided a fix for collations of citext columns and
      indexes in databases upgraded or reloaded from pre-9.1
      installations, but that fix was incomplete: it neglected to handle
      arrays and domains over citext. This release extends the module's
      upgrade script to handle these cases. As before, if you have
      already run the upgrade script, you'll need to run the collation
      update commands by hand instead. See the 9.1.2 release notes for
      more information about doing this.
    - Allow numeric timezone offsets in timestamp input to be up to 16
      hours away from UTC. Some historical time zones have offsets larger than
      15 hours, the previous limit. This could result in dumped data values
      being rejected during reload.
    - Fix timestamp conversion to cope when the given time is exactly the
      last DST transition time for the current timezone.
      This oversight has been there a long time, but was not noticed
      previously because most DST-using zones are presumed to have an
      indefinite sequence of future DST transitions.
    - Fix text to name and char to name casts to perform string
      truncation correctly in multibyte encodings.
    - Fix memory copying bug in to_tsquery().
    - Ensure txid_current() reports the correct epoch when executed in
      hot standby.
    - Fix planner's handling of outer PlaceHolderVars within subqueries.
      This bug concerns sub-SELECTs that reference variables coming from
      the nullable side of an outer join of the surrounding query. In
      9.1, queries affected by this bug would fail with "ERROR:
      Upper-level PlaceHolderVar found where not expected". But in 9.0
      and 8.4, you'd silently get possibly-wrong answers, since the value
      transmitted into the subquery wouldn't go to null when it should.
    - Fix planning of UNION ALL subqueries with output columns that are
      not simple variables.
      Planning of such cases got noticeably worse in 9.1 as a result of a
      misguided fix for "MergeAppend child's targetlist doesn't match
      MergeAppend" errors. Revert that fix and do it another way.
    - Fix slow session startup when pg_attribute is very large.
      If pg_attribute exceeds one-fourth of shared_buffers, cache
      rebuilding code that is sometimes needed during session start would
      trigger the synchronized-scan logic, causing it to take many times
      longer than normal. The problem was particularly acute if many new
      sessions were starting at once.
    - Ensure sequential scans check for query cancel reasonably often.
      A scan encountering many consecutive pages that contain no live
      tuples would not respond to interrupts meanwhile.
    - Ensure the Windows implementation of PGSemaphoreLock() clears
      ImmediateInterruptOK before returning.
      This oversight meant that a query-cancel interrupt received later
      in the same query could be accepted at an unsafe time, with
      unpredictable but not good consequences.
    - Show whole-row variables safely when printing views or rules.
      Corner cases involving ambiguous names (that is, the name could be
      either a table or column name of the query) were printed in an
      ambiguous way, risking that the view or rule would be interpreted
      differently after dump and reload. Avoid the ambiguous case by
      attaching a no-op cast.
    - Fix "COPY FROM" to properly handle null marker strings that
      correspond to invalid encoding.
      A null marker string such as E'\\0' should work, and did work in
      the past, but the case got broken in 8.4.
    - Fix "EXPLAIN VERBOSE" for writable CTEs containing RETURNING
      clauses.
    - Fix "PREPARE TRANSACTION" to work correctly in the presence of
      advisory locks.
      Historically, "PREPARE TRANSACTION" has simply ignored any
      session-level advisory locks the session holds, but this case was
      accidentally broken in 9.1.
    - Fix truncation of unlogged tables.
    - Ignore missing schemas during non-interactive assignments of
      search_path.
      This re-aligns 9.1's behavior with that of older branches.
      Previously 9.1 would throw an error for nonexistent schemas
      mentioned in search_path settings obtained from places such as
      "ALTER DATABASE SET".
    - Fix bugs with temporary or transient tables used in extension
      scripts.
      This includes cases such as a rewriting "ALTER TABLE" within an
      extension update script, since that uses a transient table behind
      the scenes.
    - Ensure autovacuum worker processes perform stack depth checking
      properly.
      Previously, infinite recursion in a function invoked by
      auto-"ANALYZE" could crash worker processes.
    - Fix logging collector to not lose log coherency under high load.
      The collector previously could fail to reassemble large messages if
      it got too busy.
    - Fix logging collector to ensure it will restart file rotation after
      receiving SIGHUP.
    - Fix "too many LWLocks taken" failure in GiST indexes.
    - Fix WAL replay logic for GIN indexes to not fail if the index was
      subsequently dropped.
    - Correctly detect SSI conflicts of prepared transactions after a
      crash.
    - Avoid synchronous replication delay when committing a transaction
      that only modified temporary tables.
      In such a case the transaction's commit record need not be flushed
      to standby servers, but some of the code didn't know that and
      waited for it to happen anyway.
    - Fix error handling in pg_basebackup.
    - Fix walsender to not go into a busy loop if connection is
      terminated.
    - Fix memory leak in PL/pgSQL's "RETURN NEXT" command.
    - Fix PL/pgSQL's "GET DIAGNOSTICS" command when the target is the
      function's first variable.
    - Ensure that PL/Perl package-qualifies the _TD variable.
      This bug caused trigger invocations to fail when they are nested
      within a function invocation that changes the current package.
    - Fix PL/Python functions returning composite types to accept a
      string for their result value.
      This case was accidentally broken by the 9.1 additions to allow a
      composite result value to be supplied in other formats, such as
      dictionaries.
    - Fix potential access off the end of memory in psql's expanded
      display ("\x") mode.
    - Fix several performance problems in pg_dump when the database
      contains many objects.
      pg_dump could get very slow if the database contained many schemas,
      or if many objects are in dependency loops, or if there are many
      owned sequences.
    - Fix memory and file descriptor leaks in pg_restore when reading a
      directory-format archive.
    - Fix pg_upgrade for the case that a database stored in a non-default
      tablespace contains a table in the cluster's default tablespace.
    - In ecpg, fix rare memory leaks and possible overwrite of one byte
      after the sqlca_t structure.
    - Fix "contrib/dblink"'s dblink_exec() to not leak temporary database
      connections upon error.
    - Fix "contrib/dblink" to report the correct connection name in error
      messages.
    - Fix "contrib/vacuumlo" to use multiple transactions when dropping
      many large objects.
      This change avoids exceeding max_locks_per_transaction when many
      objects need to be dropped. The behavior can be adjusted with the
      new -l (limit) option.
  * debian/control: Bump debhelper build dependency to >= 8, as it does not
    build with earlier versions.
  * debian/control: Move bzr branches to alioth, so that other members of
    pkg-postgresql can commit. Update Vcs-* tags.
  * debian/control: Set Maintainer: to pkg-postgresql group, and move myself
    to Uploaders:.

 -- Martin Pitt <mpitt@debian.org>  Mon, 04 Jun 2012 06:47:45 +0200

postgresql-9.1 (9.1.3-2) unstable; urgency=low

  * debian/control, debian/rules: Support and prefer dpkg-buildflags when
    building with dpkg-dev >= 1.16.1~. Fall back to hardening-wrapper
    otherwise, to keep supporting backports.
  * debian/rules: Build with "-z now" for some extra hardening. We can't use
    the full "hardening=+all", as PIE causes build failures.
  * debian/copyright: Fix syntax for copyright format 1.0.
  * debian/control: Bump Breaks/Replaces versions to current binary version,
    so that e. g. the moved pg_basebackup does not cause upgrade errors when
    upgrading from higher point releases in previous distro releases.
    (LP: #944632)

 -- Martin Pitt <mpitt@debian.org>  Tue, 06 Mar 2012 11:55:57 +0100

postgresql-9.1 (9.1.3-1) unstable; urgency=medium

  * Urgency medium due to security fixes.
  * New upstream security/bug fix release:
    - Require execute permission on the trigger function for "CREATE
      TRIGGER".
      This missing check could allow another user to execute a trigger
      function with forged input data, by installing it on a table he
      owns. This is only of significance for trigger functions marked
      SECURITY DEFINER, since otherwise trigger functions run as the
      table owner anyway. (CVE-2012-0866)
    - Remove arbitrary limitation on length of common name in SSL
      certificates.
      Both libpq and the server truncated the common name extracted from
      an SSL certificate at 32 bytes. Normally this would cause nothing
      worse than an unexpected verification failure, but there are some
      rather-implausible scenarios in which it might allow one
      certificate holder to impersonate another. The victim would have to
      have a common name exactly 32 bytes long, and the attacker would
      have to persuade a trusted CA to issue a certificate in which the
      common name has that string as a prefix. Impersonating a server
      would also require some additional exploit to redirect client
      connections. (CVE-2012-0867)
    - Convert newlines to spaces in names written in pg_dump comments.
      pg_dump was incautious about sanitizing object names that are
      emitted within SQL comments in its output script. A name containing
      a newline would at least render the script syntactically incorrect.
      Maliciously crafted object names could present a SQL injection risk
      when the script is reloaded. (CVE-2012-0868)
    - Fix btree index corruption from insertions concurrent with
      vacuuming.
      An index page split caused by an insertion could sometimes cause a
      concurrently-running "VACUUM" to miss removing index entries that
      it should remove. After the corresponding table rows are removed,
      the dangling index entries would cause errors (such as "could not
      read block N in file ...") or worse, silently wrong query results
      after unrelated rows are re-inserted at the now-free table
      locations. This bug has been present since release 8.2, but occurs
      so infrequently that it was not diagnosed until now. If you have
      reason to suspect that it has happened in your database, reindexing
      the affected index will fix things.
    - Fix transient zeroing of shared buffers during WAL replay.
      The replay logic would sometimes zero and refill a shared buffer,
      so that the contents were transiently invalid. In hot standby mode
      this can result in a query that's executing in parallel seeing
      garbage data. Various symptoms could result from that, but the most
      common one seems to be "invalid memory alloc request size".
    - Fix handling of data-modifying WITH subplans in READ COMMITTED
      rechecking.
      A WITH clause containing "INSERT"/"UPDATE"/"DELETE" would crash if
      the parent "UPDATE" or "DELETE" command needed to be re-evaluated
      at one or more rows due to concurrent updates in READ COMMITTED
      mode.
    - Fix corner case in SSI transaction cleanup.
      When finishing up a read-write serializable transaction, a crash
      could occur if all remaining active serializable transactions are
      read-only.
    - Fix postmaster to attempt restart after a hot-standby crash.
      A logic error caused the postmaster to terminate, rather than
      attempt to restart the cluster, if any backend process crashed
      while operating in hot standby mode.
    - Fix "CLUSTER"/"VACUUM FULL" handling of toast values owned by
      recently-updated rows.
      This oversight could lead to "duplicate key value violates unique
      constraint" errors being reported against the toast table's index
      during one of these commands.
    - Update per-column permissions, not only per-table permissions, when
      changing table owner.
      Failure to do this meant that any previously granted column
      permissions were still shown as having been granted by the old
      owner. This meant that neither the new owner nor a superuser could
      revoke the now-untraceable-to-table-owner permissions.
    - Support foreign data wrappers and foreign servers in "REASSIGN
      OWNED".
      This command failed with "unexpected classid" errors if it needed
      to change the ownership of any such objects.
    - Allow non-existent values for some settings in "ALTER USER/DATABASE
      SET".
      Allow default_text_search_config, default_tablespace, and
      temp_tablespaces to be set to names that are not known. This is
      because they might be known in another database where the setting
      is intended to be used, or for the tablespace cases because the
      tablespace might not be created yet. The same issue was previously
      recognized for search_path, and these settings now act like that
      one.
    - Fix "unsupported node type" error caused by COLLATE in an "INSERT"
      expression.
    - Avoid crashing when we have problems deleting table files
      post-commit.
      Dropping a table should lead to deleting the underlying disk files
      only after the transaction commits. In event of failure then (for
      instance, because of wrong file permissions) the code is supposed
      to just emit a warning message and go on, since it's too late to
      abort the transaction. This logic got broken as of release 8.4,
      causing such situations to result in a PANIC and an unrestartable
      database.
    - Recover from errors occurring during WAL replay of "DROP
      TABLESPACE".
      Replay will attempt to remove the tablespace's directories, but
      there are various reasons why this might fail (for example,
      incorrect ownership or permissions on those directories). Formerly
      the replay code would panic, rendering the database unrestartable
      without manual intervention. It seems better to log the problem and
      continue, since the only consequence of failure to remove the
      directories is some wasted disk space.
    - Fix race condition in logging AccessExclusiveLocks for hot standby.
      Sometimes a lock would be logged as being held by "transaction
      zero". This is at least known to produce assertion failures on
      slave servers, and might be the cause of more serious problems.
    - Track the OID counter correctly during WAL replay, even when it
      wraps around.
    - Prevent emitting misleading "consistent recovery state reached" log
      message at the beginning of crash recovery.
    - Fix initial value of pg_stat_replication.replay_location.
    - Fix regular expression back-references with - attached.
      Rather than enforcing an exact string match, the code would
      effectively accept any string that satisfies the pattern
      sub-expression referenced by the back-reference symbol.
      A similar problem still afflicts back-references that are embedded
      in a larger quantified expression, rather than being the immediate
      subject of the quantifier. This will be addressed in a future
      PostgreSQL release.
    - Fix recently-introduced memory leak in processing of inet/cidr
      values.
    - Fix planner's ability to push down index-expression restrictions
      through UNION ALL.
    - Fix planning of WITH clauses referenced in "UPDATE"/"DELETE" on an
      inherited table.
      This bug led to "could not find plan for CTE" failures.
    - Fix GIN cost estimation to handle column IN (...) index conditions.
      This oversight would usually lead to crashes if such a condition
      could be used with a GIN index.
    - Fix dangling pointer after "CREATE TABLE AS"/"SELECT INTO" in a
      SQL-language function.
      In most cases this only led to an assertion failure in
      assert-enabled builds, but worse consequences seem possible.
    - Fix I/O-conversion-related memory leaks in plpgsql.
    - Work around bug in perl's SvPVutf8() function.
      This function crashes when handed a typeglob or certain read-only
      objects such as $^V. Make plperl avoid passing those to it.
    - In pg_dump, don't dump contents of an extension's configuration
      tables if the extension itself is not being dumped.
    - Improve pg_dump's handling of inherited table columns.
      pg_dump mishandled situations where a child column has a different
      default expression than its parent column. If the default is
      textually identical to the parent's default, but not actually the
      same (for instance, because of schema search path differences) it
      would not be recognized as different, so that after dump and
      restore the child would be allowed to inherit the parent's default.
      Child columns that are NOT NULL where their parent is not could
      also be restored subtly incorrectly.
    - Fix pg_restore's direct-to-database mode for INSERT-style table data.
      Direct-to-database restores from archive files made with
      "--inserts" or "--column-inserts" options fail when using
      pg_restore from a release dated September or December 2011, as a
      result of an oversight in a fix for another problem. The archive
      file itself is not at fault, and text-mode output is okay.
    - Teach pg_upgrade to handle renaming of plpython's shared library.
      Upgrading a pre-9.1 database that included plpython would fail
      because of this oversight.
    - Allow pg_upgrade to process tables containing regclass columns.
      Since pg_upgrade now takes care to preserve pg_class OIDs, there
      was no longer any reason for this restriction.
    - Make libpq ignore ENOTDIR errors when looking for an SSL client
      certificate file.
      This allows SSL connections to be established, though without a
      certificate, even when the user's home directory is set to
      something like /dev/null.
    - Fix some more field alignment issues in ecpg's SQLDA area.
    - Allow AT option in ecpg DEALLOCATE statements.
      The infrastructure to support this has been there for awhile, but
      through an oversight there was still an error check rejecting the
      case.
    - Do not use the variable name when defining a varchar structure in
      ecpg.
    - Fix "contrib/auto_explain"'s JSON output mode to produce valid JSON.
    - Fix error in "contrib/intarray"'s int[] & int[] operator.
      If the smallest integer the two input arrays have in common is 1,
      and there are smaller values in either array, then 1 would be
      incorrectly omitted from the result.
    - Fix error detection in "contrib/pgcrypto"'s encrypt_iv() and
      decrypt_iv().
      These functions failed to report certain types of invalid-input
      errors, and would instead return random garbage values for
      incorrect input.
    - Fix one-byte buffer overrun in "contrib/test_parser".
      The code would try to read one more byte than it should, which
      would crash in corner cases. Since "contrib/test_parser" is only
      example code, this is not a security issue in itself, but bad
      example code is still bad.
    - Use __sync_lock_test_and_set() for spinlocks on ARM, if available.
      This function replaces our previous use of the SWPB instruction,
      which is deprecated and not available on ARMv6 and later. Reports
      suggest that the old code doesn't fail in an obvious way on recent
      ARM boards, but simply doesn't interlock concurrent accesses,
      leading to bizarre failures in multiprocess operation.
    - Use "-fexcess-precision=standard" option when building with gcc
      versions that accept it.
      This prevents assorted scenarios wherein recent versions of gcc
      will produce creative results.
    - Allow use of threaded Python on FreeBSD (Chris Rees)
      Our configure script previously believed that this combination
      wouldn't work; but FreeBSD fixed the problem, so remove that error
      check.
  * Drop 00git_inet_cidr_unpack.patch, 01-armel-tas.patch: Applied upstream.
  * debian/watch: Use ftp for checking, thanks Peter Eisentraut.
    (Closes: #656129)
  * debian/control: Bump Standards-Version to 3.9.3. No changes necessary.

 -- Martin Pitt <mpitt@debian.org>  Mon, 27 Feb 2012 07:30:59 +0100

postgresql-9.1 (9.1.2-4) unstable; urgency=low

  * Add docbook-xsl, opensp and xsltproc build dependencies.

 -- Martin Pitt <mpitt@debian.org>  Wed, 04 Jan 2012 11:57:36 +0100

postgresql-9.1 (9.1.2-3) unstable; urgency=low

  * debian/*.symbols: Update symbol versions to accurate historic data. Many
    thanks to Christoph Berg for these! (Closes: #652931)
  * Add 00git_inet_cidr_unpack.patch: Revert the behavior of inet/cidr
    functions to not unpack the arguments. This fixes the memory leak when
    sorting inet values. Patch taken from upstream git HEAD.
  * debian/control: Add missing docbook-dsssl build dependency to fix
    generation of documentation. (Closes: #654330)
  * debian/control: Use openjade instead of the ancient jade for building the
    documentation.

 -- Martin Pitt <mpitt@debian.org>  Tue, 03 Jan 2012 16:48:21 +0100

postgresql-9.1 (9.1.2-2) unstable; urgency=low

  * 01-armel-tas.patch: Turn slock_t datatype into an int, and define
    S_UNLOCK() to call __sync_lock_release() instead of using the default
    implementation. This complies to the gcc built-in atomic operations
    specifiction more strictly and now also works on the Panda boards.
    (LP: #904828)
  * Replace 01-armel-tas.patch with 01-atomic-builtins.patch to use
    gcc/intel atomic builtins if available. Drop the arm implementation as it
    does not work on newer thumb2/panda board.
  * Move PL/Python translations from -plpython-9.1 package to main
    postgresql-9.1 package, as they are also used by the -plpython3 extension.
    (Closes: #651837)
  * Move pg_basebackup from the server to the client package, it's a
    client-side program.
  * debian/control: Re-add bison and flex build dependencies, so that the
    generated and shipped Makefile.global gets non-empty BISON and FLEX
    values. (Closes: #647135)

 -- Martin Pitt <mpitt@debian.org>  Wed, 21 Dec 2011 12:07:54 +0100

postgresql-9.1 (9.1.2-1) unstable; urgency=low

  * New upstream bug fix release:
    - Fix bugs in information_schema.referential_constraints view.
      This view was being insufficiently careful about matching the
      foreign-key constraint to the depended-on primary or unique key
      constraint. That could result in failure to show a foreign key
      constraint at all, or showing it multiple times, or claiming that
      it depends on a different constraint than the one it really does.
      Since the view definition is installed by initdb, merely upgrading
      will not fix the problem. If you need to fix this in an existing
      installation, you can (as a superuser) drop the information_schema
      schema then re-create it by sourcing
      "SHAREDIR/information_schema.sql". (Run pg_config --sharedir if
      you're uncertain where "SHAREDIR" is.) This must be repeated in
      each database to be fixed.
    - Make "contrib/citext"'s upgrade script fix collations of citext
      columns and indexes.
      Existing citext columns and indexes aren't correctly marked as
      being of a collatable data type during pg_upgrade from a pre-9.1
      server. That leads to operations on them failing with errors such
      as "could not determine which collation to use for string
      comparison". This change allows them to be fixed by the same script
      that upgrades the citext module into a proper 9.1 extension during
      CREATE EXTENSION citext FROM unpackaged.
      If you have a previously-upgraded database that is suffering from
      this problem, and you already ran the "CREATE EXTENSION" command,
      you can manually run (as superuser) the "UPDATE" commands found at
      the end of "SHAREDIR/extension/citext--unpackaged--1.0.sql". (Run
      pg_config --sharedir if you're uncertain where "SHAREDIR" is.)
    - Fix possible crash during "UPDATE" or "DELETE" that joins to the
      output of a scalar-returning function.
    - Fix incorrect replay of WAL records for GIN index updates.
    - Fix TOAST-related data corruption during CREATE TABLE dest AS
      SELECT - FROM src or INSERT INTO dest SELECT * FROM src.
    - Fix possible failures during hot standby startup.
    - Start hot standby faster when initial snapshot is incomplete.
    - Fix race condition during toast table access from stale syscache
      entries. The typical symptom was transient errors like "missing chunk
      number 0 for toast value NNNNN in pg_toast_2619", where the cited toast
      table would always belong to a system catalog.
    - Track dependencies of functions on items used in parameter default
      expressions. Previously, a referenced object could be dropped without
      having dropped or modified the function, leading to misbehavior when
      the function was used. Note that merely installing this update will not
      fix the missing dependency entries; to do that, you'd need to
      "CREATE OR REPLACE" each such function afterwards. If you have
      functions whose defaults depend on non-built-in objects, doing so
      is recommended.
    - Fix incorrect management of placeholder variables in nestloop joins.
      This bug is known to lead to "variable not found in subplan target
      list" planner errors, and could possibly result in wrong query
      output when outer joins are involved.
    - Fix window functions that sort by expressions involving aggregates.
    - Fix "MergeAppend child's targetlist doesn't match MergeAppend"
      planner errors.
    - Fix index matching for operators with both collatable and
      noncollatable inputs. In 9.1.0, an indexable operator that has a
      non-collatable left-hand input type and a collatable right-hand input
      type would not be recognized as matching the left-hand column's index.
      An example is the hstore ? text operator.
    - Allow inlining of set-returning SQL functions with multiple OUT
      parameters.
    - Don't trust deferred-unique indexes for join removal.
    - Make DatumGetInetP() unpack inet datums that have a 1-byte header,
      and add a new macro, DatumGetInetPP(), that does not.
    - Improve locale support in money type's input and output.
      Aside from not supporting all standard lc_monetary formatting
      options, the input and output functions were inconsistent, meaning
      there were locales in which dumped money values could not be
      re-read.
    - Don't let transform_null_equals affect CASE foo WHEN NULL ...
      constructs.  transform_null_equals is only supposed to affect foo =
      NULL expressions written directly by the user, not equality checks
      generated internally by this form of CASE.
    - Change foreign-key trigger creation order to better support
      self-referential foreign keys.
    - Fix IF EXISTS to work correctly in "DROP OPERATOR FAMILY".
    - Disallow dropping of an extension from within its own script.
    - Don't mark auto-generated types as extension members.
    - Cope with invalid pre-existing search_path settings during "CREATE
      EXTENSION".
    - Avoid floating-point underflow while tracking buffer allocation
      rate.
    - Prevent autovacuum transactions from running in serializable mode.
      Autovacuum formerly used the cluster-wide default transaction
      isolation level, but there is no need for it to use anything higher
      than READ COMMITTED, and using SERIALIZABLE could result in
      unnecessary delays for other processes.
    - Ensure walsender processes respond promptly to SIGTERM.
    - Exclude "postmaster.opts" from base backups.
    - Fix incorrect field alignment in ecpg's SQLDA area.
    - Preserve blank lines within commands in psql's command history.
      The former behavior could cause problems if an empty line was
      removed from within a string literal, for example.
    - Avoid platform-specific infinite loop in pg_dump.
    - Fix compression of plain-text output format in pg_dump.
      pg_dump has historically understood -Z with no -F switch to mean
      that it should emit a gzip-compressed version of its plain text
      output. Restore that behavior.
    - Fix pg_dump to dump user-defined casts between auto-generated
      types, such as table rowtypes.
    - Fix missed quoting of foreign server names in pg_dump.
    - Assorted fixes for pg_upgrade. Handle exclusion constraints correctly,
      avoid failures on Windows, don't complain about mismatched toast table
      names in 8.4 databases.
    - In PL/pgSQL, allow foreign tables to define row types.
    - Fix up conversions of PL/Perl functions' results.
      Restore the pre-9.1 behavior that PL/Perl functions returning void
      ignore the result value of their last Perl statement; 9.1.0 would
      throw an error if that statement returned a reference. Also, make
      sure it works to return a string value for a composite type, so
      long as the string meets the type's input format. In addition,
      throw errors for attempts to return Perl arrays or hashes when the
      function's declared result type is not an array or composite type,
      respectively. (Pre-9.1 versions rather uselessly returned strings
      like ARRAY(0x221a9a0) or HASH(0x221aa90) in such cases.)
    - Ensure PL/Perl strings are always correctly UTF8-encoded.
    - Use the preferred version of xsubpp to build PL/Perl, not
      necessarily the operating system's main copy.
    - Correctly propagate SQLSTATE in PL/Python exceptions.
    - Do not install PL/Python extension files for Python major versions
      other than the one built against.
    - Change all the "contrib" extension script files to report a useful
      error message if they are fed to psql. This should help teach people
      about the new method of using "CREATE EXTENSION" to load these files.
      In most cases, sourcing the scripts directly would fail anyway, but
      with harder-to-interpret messages.
    - Fix incorrect coding in "contrib/dict_int" and "contrib/dict_xsyn".
    - Remove "contrib/sepgsql" tests from the regular regression test
      mechanism. Since these tests require root privileges for setup, they're
      impractical to run automatically. Switch over to a manual approach
      instead, and provide a testing script to help with that.
    - Fix assorted errors in "contrib/unaccent"'s configuration file
      parsing.
    - Honor query cancel interrupts promptly in pgstatindex().
    - Revert unintentional enabling of WAL_DEBUG. Fortunately, as debugging
      tools go, this one is pretty cheap; but it's not intended to be enabled
      by default, so revert.
    - Ensure VPATH builds properly install all server header files.
    - Shorten file names reported in verbose error messages.
      Regular builds have always reported just the name of the C file
      containing the error message call, but VPATH builds formerly
      reported an absolute path name.
  * debian/rules: Fix build failure for binary-indep-only builds.
    (Closes: #646079)

 -- Martin Pitt <mpitt@debian.org>  Fri, 02 Dec 2011 14:39:18 +0100

postgresql-9.1 (9.1.1-3) unstable; urgency=low

  * debian/rules: Build with LINUX_OOM_ADJ=0 on Linux, to allow the OOM killer
    to slay the backends when the postmaster gets marked as unkillable.
    (LP: #854590)

 -- Martin Pitt <mpitt@debian.org>  Wed, 19 Oct 2011 09:43:13 +0200

postgresql-9.1 (9.1.1-2) unstable; urgency=low

  [ Peter Eisentraut ]
  * Fix FTBFS twice with dpkg-dev >= 1.16.1, because of leftover file
    src/backend/gettext-files.  Clean that one explicitly. (Closes: #643645)
  * Fix lintian reports: (Closes: #643646)
    - brace-expansion-in-debhelper-config-file
    - maintainer-script-without-set-e

  [ Martin Pitt ]
  * debian/*.install, debian/rules: Compress manpages in debian/tmp instead of
    just two binary packages and forgetting the others.
  * Build a new postgresql-plpython3-9.1 package for Python 3 support. This
    requires some reorganization of debian/rules to do multiple builds.
  * debian/postgresql-9.1.postrm: Clean up /var/log/postgresql/ on purge.
    Spotted by piuparts.

 -- Martin Pitt <mpitt@debian.org>  Fri, 07 Oct 2011 18:52:55 +0200

postgresql-9.1 (9.1.1-1) unstable; urgency=low

  * New upstream bug fix release:
    - Make pg_options_to_table return NULL for an option with no value.
      Previously such cases would result in a server crash.
    - Fix memory leak at end of a GiST index scan.
      Commands that perform many separate GiST index scans, such as
      verification of a new GiST-based exclusion constraint on a table
      already containing many rows, could transiently require large
      amounts of memory due to this leak.
    - Fix explicit reference to pg_temp schema in "CREATE TEMPORARY
      TABLE". This used to be allowed, but failed in 9.1.0.

 -- Martin Pitt <mpitt@debian.org>  Mon, 26 Sep 2011 14:35:36 +0200

postgresql-9.1 (9.1.0-1) unstable; urgency=low

  * Final 9.1 release.
  * 02-relax-sslkey-permscheck.patch, 50-per-version-dirs.patch: Refresh to
    apply cleanly.
  * debian/control: Tighten the dependencies of the -pl* extensions/-contrib
    to postgresql-9.1 to the same binary version. (Closes: #640335)

 -- Martin Pitt <mpitt@debian.org>  Mon, 12 Sep 2011 16:02:28 +0200

postgresql-9.1 (9.1~rc1-3) unstable; urgency=low

  * debian/watch: Fix for mangling ~rc, thanks Peter Eisentraut. 
    (Closes: #639357)
  * debian/control: Add versionless Provides: to the PL* extensions, as per
    request from Christoph Berg.
  * debian/control: Add "Replaces: postgresql-9.0-dbg" to fix file conflict.
    (Closes: #639258)
  * debian/control: Drop the versionless metapackages, they are built from
    postgresql-common now. This behaves better with backports. Thanks to
    Christoph Berg for the suggestion.

 -- Martin Pitt <mpitt@debian.org>  Sat, 27 Aug 2011 13:42:40 +0200

postgresql-9.1 (9.1~rc1-2) unstable; urgency=low

  * debian/control: Build the versionless metapackages again, and point them
    to 9.1.

 -- Martin Pitt <mpitt@debian.org>  Thu, 25 Aug 2011 12:50:45 +0200

postgresql-9.1 (9.1~rc1-1) unstable; urgency=low

  * New upstream release.
  * Upload to unstable now that the final 9.1 release will come soon. 9.1 will
    most probably be the version supported in the Wheezy release.
  * 54-debian-alternatives-for-external-tools.patch: Unfuzz for new release.
  * debian/control: Suggest locales-all. (Closes: #629875)
  * debian/control: Wrap dependencies.
  * debian/control: Add explicit jade build dependency. (see #621492 for the
    corresponding 9.0 bug report)

 -- Martin Pitt <mpitt@debian.org>  Sun, 21 Aug 2011 20:59:58 +0200

postgresql-9.1 (9.1~beta3-1) experimental; urgency=low

  * New upstream beta release.
    - Works around gcc 4.6.0 bug. (Closes: #633086)

    Note that this does not change the data format since Beta 2, so no need
    to dump/reload clusters.

 -- Martin Pitt <mpitt@debian.org>  Thu, 14 Jul 2011 18:39:43 +0200

postgresql-9.1 (9.1~beta2-1) experimental; urgency=low

  * New upstream beta release.
  * Drop 03-cmsgcred-size.patch, fixed upstream.
  * debian/postgresql-9.1.install: Install new pg_basebackup translations.
  * debian/control: Fix the server-dev dependency to p-common to also work for
    backports.
  * debian/watch: Fix for beta versions.
  * debian/copyright: Add pointers to GPL and Artistic licenses for the Perl
    terms.
  * debian/postgresql-9.1.preinst: Fail the package upgrade early when
    upgrading from beta-1, as the DB format changed.

 -- Martin Pitt <mpitt@debian.org>  Tue, 14 Jun 2011 09:53:29 +0200

postgresql-9.1 (9.1~beta1-4) experimental; urgency=low

  * debian/control: Add postgresql-common dependency to -server-dev, so that
    we get the pg_config diversion.
  * 52-tutorial-README.patch: Fix server-dev version in comment.
  * 51-default-sockets-in-var.patch: Move the pg_regress patching parts to
    debian/pg_regress-in-tmp.patch and temporarily apply it only for running
    the local checks. In the installed system it seems we actually do want it
    to use the /var/run/postgresql socket dir. (Closes: #554166)

 -- Martin Pitt <mpitt@debian.org>  Sun, 29 May 2011 19:34:38 +0200

postgresql-9.1 (9.1~beta1-3) experimental; urgency=low

  * Move /usr/share/postgresql/9.1/extension/pl* from -contrib into the actual
    -pl* packages, and ship PL/pgsql in postgresql-9.1.
  * debian/copyright: Convert to DEP-5.
  * debian/copyright: Add current copyrights, thanks to Ansgar Burchardt for
    noticing.
  * Add 03-cmsgcred-size.patch: Fix size of struct cmsgcred to fix ident
    authentication on kFreeBSD 64 bit. Thanks to Petr Salinger for the
    patch! (Closes: #627597)

 -- Martin Pitt <mpitt@debian.org>  Sun, 22 May 2011 20:44:36 +0200

postgresql-9.1 (9.1~beta1-2) experimental; urgency=low

  * debian/control: Add missing ${misc:Depends} to -dbg.
  * Bump Standards-Version to 3.9.2 (no changes necessary).
  * debian/rules: Fix FTBFS with only-binary (-B) builds.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Wed, 11 May 2011 10:41:53 +0200

postgresql-9.1 (9.1~beta1-1) experimental; urgency=low

  * First 9.1 beta release. Packaging based on 9.1 branch.
  * debian/control: Do not build the versionless metapackages for now, as long
    as 9.0 is still the default.

 -- Martin Pitt <mpitt@debian.org>  Wed, 11 May 2011 09:18:56 +0200
