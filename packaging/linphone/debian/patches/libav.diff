From 291aa7d321f80d244aa97ef5cc7547db05575897 Mon Sep 17 00:00:00 2001
From: Nick Black <nick.black@sprezzatech.com>
Date: Mon, 28 Jan 2013 23:44:03 -0500
Subject: [PATCH] support new libav api. minimal changes.

--- a/mediastreamer2/src/ffmpeg-priv.h
+++ b/mediastreamer2/src/ffmpeg-priv.h
@@ -35,6 +35,7 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 /* new layout */
 # include <libavcodec/avcodec.h>
 # include <libavutil/avutil.h>
+# include <libavutil/mem.h>
 #else
 /* old layout */
 # include <ffmpeg/avcodec.h>
--- a/mediastreamer2/src/h264dec.c
+++ b/mediastreamer2/src/h264dec.c
@@ -44,7 +44,6 @@ typedef struct _DecData{
 static void ffmpeg_init(){
 	static bool_t done=FALSE;
 	if (!done){
-		avcodec_init();
 		avcodec_register_all();
 		done=TRUE;
 	}
@@ -58,10 +58,10 @@ static void dec_open(DecData *d){
 	int error;
 	codec=avcodec_find_decoder(CODEC_ID_H264);
 	if (codec==NULL) ms_fatal("Could not find H264 decoder in ffmpeg.");
-	avcodec_get_context_defaults(&d->av_context);
-	error=avcodec_open(&d->av_context,codec);
+	avcodec_get_context_defaults3(&d->av_context, codec);
+	error=avcodec_open2(&d->av_context,codec, NULL);
 	if (error!=0){
-		ms_fatal("avcodec_open() failed.");
+		ms_fatal("avcodec_open2() failed.");
 	}
 }
 
--- a/mediastreamer2/src/jpegwriter.c
+++ b/mediastreamer2/src/jpegwriter.c
@@ -90,7 +90,7 @@ static void jpg_process(MSFilter *f){
 			mblk_t *jpegm;
 			struct SwsContext *sws_ctx;
 			
-			AVCodecContext *avctx=avcodec_alloc_context();
+			AVCodecContext *avctx=avcodec_alloc_context3(NULL);
 			
 			avctx->width=yuvbuf.w;
 			avctx->height=yuvbuf.h;
@@ -98,9 +98,9 @@ static void jpg_process(MSFilter *f){
 			avctx->time_base.den =1;
 			avctx->pix_fmt=PIX_FMT_YUVJ420P;
 
-			error=avcodec_open(avctx,s->codec);
+			error=avcodec_open2(avctx,s->codec,NULL);
 			if (error!=0) {
-				ms_error("avcodec_open() failed: %i",error);
+				ms_error("avcodec_open2() failed: %i",error);
 				cleanup(s,NULL);
 				av_free(avctx);
 				return;
--- a/mediastreamer2/src/nowebcam.c
+++ b/mediastreamer2/src/nowebcam.c
@@ -68,9 +68,9 @@ static mblk_t *jpeg2yuv(uint8_t *jpgbuf, int bufsize, MSVideoSize *reqsize){
 		return NULL;
 	}
 
-	avcodec_get_context_defaults(&av_context);
-	if (avcodec_open(&av_context,codec)<0){
-		ms_error("jpeg2yuv: avcodec_open failed");
+	avcodec_get_context_defaults3(&av_context,NULL);
+	if (avcodec_open2(&av_context,codec,NULL)<0){
+		ms_error("jpeg2yuv: avcodec_open2 failed");
 		return NULL;
 	}
 	av_init_packet(&pkt);
--- a/mediastreamer2/src/videodec.c
+++ b/mediastreamer2/src/videodec.c
@@ -53,7 +53,7 @@ static void dec_init(MSFilter *f, enum CodecID cid){
 	DecState *s=(DecState *)ms_new0(DecState,1);
 	ms_ffmpeg_check_init();
 	
-	avcodec_get_context_defaults(&s->av_context);
+	avcodec_get_context_defaults3(&s->av_context,NULL);
 	s->av_codec=NULL;
 	s->codec=cid;
 	s->input=NULL;
@@ -135,7 +135,7 @@ static void dec_preprocess(MSFilter *f){
 	if (s->av_context.codec==NULL){
 		/* we must know picture size before initializing snow decoder*/
 		if (s->codec!=CODEC_ID_SNOW){
-			error=avcodec_open(&s->av_context, s->av_codec);
+			error=avcodec_open2(&s->av_context, s->av_codec, NULL);
 			if (error!=0) ms_error("avcodec_open() failed: %i",error);
 			if (s->codec==CODEC_ID_MPEG4 && s->dci_size>0){
 				s->av_context.extradata=s->dci;
@@ -225,8 +225,8 @@ static mblk_t * parse_snow_header(DecState *s,mblk_t *inm){
 			int error;
 			s->av_context.width=h>>16;
 			s->av_context.height=h&0xffff;
-			error=avcodec_open(&s->av_context, s->av_codec);
-			if (error!=0) ms_error("avcodec_open() failed for snow: %i",error);
+			error=avcodec_open2(&s->av_context, s->av_codec, NULL);
+			if (error!=0) ms_error("avcodec_open2() failed for snow: %i",error);
 			else {
 				s->snow_initialized=TRUE;
 				ms_message("Snow decoder initialized,size=%ix%i",
--- a/mediastreamer2/src/videoenc.c
+++ b/mediastreamer2/src/videoenc.c
@@ -53,7 +53,6 @@ void ms_ffmpeg_log_callback(void* ptr, i
 
 void ms_ffmpeg_check_init(){
 	if(!avcodec_initialized){
-		avcodec_init();
 		avcodec_register_all();
 		avcodec_initialized=TRUE;
 #ifdef ENABLE_LOG_FFMPEG
@@ -242,7 +242,7 @@ static void prepare(EncState *s){
 	AVCodecContext *c=&s->av_context;
 	const int max_br_vbv=128000;
 
-	avcodec_get_context_defaults(c);
+	avcodec_get_context_defaults3(c,NULL);
 	if (s->codec==CODEC_ID_MJPEG)
 	{
 		ms_message("Codec bitrate set to %i",c->bit_rate);
@@ -300,9 +300,9 @@ static void prepare_h263(EncState *s){
 	if (s->profile==0){
 		s->codec=CODEC_ID_H263;
 	}else{
-		c->flags|=CODEC_FLAG_H263P_UMV;
+		//c->flags|=CODEC_FLAG_H263P_UMV;
 		c->flags|=CODEC_FLAG_AC_PRED;
-		c->flags|=CODEC_FLAG_H263P_SLICE_STRUCT;
+		//c->flags|=CODEC_FLAG_H263P_SLICE_STRUCT;
 		/*
 		c->flags|=CODEC_FLAG_OBMC;
 		c->flags|=CODEC_FLAG_AC_PRED;
@@ -348,9 +348,9 @@ static void enc_preprocess(MSFilter *f){
 		ms_error("could not find encoder for codec id %i",s->codec);
 		return;
 	}
-	error=avcodec_open(&s->av_context, s->av_codec);
+	error=avcodec_open2(&s->av_context, s->av_codec, NULL);
 	if (error!=0) {
-		ms_error("avcodec_open() failed: %i",error);
+		ms_error("avcodec_open2() failed: %i",error);
 		return;
 	}
 	video_starter_init(&s->starter);
@@ -372,7 +372,7 @@ static void add_rfc2190_header(mblk_t **
 	// assume video size is CIF or QCIF
 	if (context->width == 352 && context->height == 288) header->b_wptr[1] = 0x60;
 	else header->b_wptr[1] = 0x40;
-	if (context->coded_frame->pict_type != FF_I_TYPE) header->b_wptr[1] |= 0x10;
+	if (context->coded_frame->pict_type != AV_PICTURE_TYPE_I) header->b_wptr[1] |= 0x10;
 	header->b_wptr += 4;
 	header->b_cont = *packet;
 	*packet = header;
@@ -779,7 +779,7 @@ static void process_frame(MSFilter *f, m
 		s->req_vfu=TRUE;
 	}
 	if (s->req_vfu){
-		pict.pict_type=FF_I_TYPE;
+		pict.pict_type=AV_PICTURE_TYPE_I;
 		s->req_vfu=FALSE;
 	}
 	comp_buf->b_rptr=comp_buf->b_wptr=comp_buf->b_datap->db_base;
@@ -799,7 +799,7 @@ static void process_frame(MSFilter *f, m
 		if (s->framenum==1){
 			video_starter_first_frame (&s->starter,f->ticker->time);
 		}
-		if (c->coded_frame->pict_type==FF_I_TYPE){
+		if (c->coded_frame->pict_type==AV_PICTURE_TYPE_I){
 			ms_message("Emitting I-frame");
 		}
 		comp_buf->b_wptr+=error;

