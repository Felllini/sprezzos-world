--- a/tools/maketestzone/maketestzone
+++ b/tools/maketestzone/maketestzone
@@ -999,10 +999,10 @@ maketestzone [OTHER DESIRED OPTIONS]
 
 Below are thoe options that are accepted by the B<maketestzone> tool.
 
-=over
-
 =head2 Output File Naming:
 
+=over
+
 =item  -o STRING
 
 =item  --output-file-prefix=STRING
@@ -1031,8 +1031,12 @@ Run donuts on the results
 
 The file suffix to use for donuts output (default = .donuts)
 
+=back
+
 =head2 Output Zone Information:
 
+=over
+
 =item  -d STRING
 
 =item  --domain=STRING
@@ -1059,8 +1063,12 @@ A record (IPv4) address to use in data
 
 AAAA record (IPv6) address to use in data
 
+=back
+
 =head2 Output Data Type Selection:
 
+=over
+
 =item  -p STRING
 
 =item  --record-prefixes=STRING
@@ -1085,8 +1093,12 @@ Don't create CNAME records
 
 Don't create sub-zone records
 
+=back
+
 =head2 Task Selection:
 
+=over
+
 =item  -g
 
 =item  --dont-generate-zone
@@ -1127,8 +1139,12 @@ Generate a test script for running dig c
 
 Verbose output
 
+=back
+
 =head2 Zonesigner Configuration:
 
+=over
+
 =item  -a STRING
 
 =item  --zonesigner-arguments=STRING
@@ -1141,14 +1157,22 @@ Arguments to pass to zonesigner
 
 Have zonesigner generate needed keys
 
+=back
+
 =head2 Bind Configuration Options
 
+=over
+
 =item  --bind-db-dir=STRING
 
 The base directory where the bind DB files will be placed
 
+=back
+
 =head2 HTML Output Configuration
 
+=over
+
 =item  --html-out-add-links
 
 Make each html record name a http link to that address
@@ -1161,14 +1185,22 @@ Add a link to each of the generated DB f
 
 Add a link to each of the generated donuts error list files.
 
+=back
+
 =head2 SH Test Script Configuration Options
 
+=over
+
 =item  --sh-test-resolver=STRING
 
 The resolver address to force
 
+=back
+
 =head2 Help Options
 
+=over
+
 =item -h
 
 Display a help summary (short flags preferred)
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Bind.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Bind.pm
@@ -101,8 +101,3 @@ sub write_trailer {
 	$fh->printf("};\n");
     }
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Csv.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Csv.pm
@@ -88,8 +88,3 @@ sub write_dnskey {
 					$record->{'content'});
     $fh->print($self->get_csv()->string() . "\n");
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Dns.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Dns.pm
@@ -68,8 +68,3 @@ sub read_content {
 
     return $doc;
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Dump.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Dump.pm
@@ -30,8 +30,3 @@ sub write {
     close(O);
     return 0;
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Itar.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Itar.pm
@@ -39,8 +39,3 @@ sub write {
     close(O);
     return 0;
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Libval.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Libval.pm
@@ -95,8 +95,3 @@ sub write_trailer {
 	$fh->printf(";\n");
     }
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Mf.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Mf.pm
@@ -91,8 +91,3 @@ sub write_dnskey {
     my $status;
     $fh->printf("\t%15s DNSKEY $record->{flags} $record->{algorithm} $record->{digesttype} $record->{content}\n", $name);
 }
-
-=pod
-
-=cut
-
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Secspider.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor/Secspider.pm
@@ -53,8 +53,3 @@ sub write_dnskey {
     $keytag = " # $record->{keytag}" if (exists($record->{keytag}));
     $fh->printf("\t%15s $record->{flags} $record->{algorithm} $record->{digesttype} \"$record->{content}\";$keytag\n", $name);
 }
-
-=pod
-
-=cut
-
--- a/tools/modules/dnssectools.pm
+++ b/tools/modules/dnssectools.pm
@@ -306,6 +306,8 @@ Return values:
 
 It relies on the the following dnssec-tools.conf configuration parameters:
 
+=back
+
 =over 4
 
 =item I<admin-email>
--- a/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor.pm
+++ b/tools/convertar/lib/Net/DNS/SEC/Tools/TrustAnchor.pm
@@ -4,7 +4,7 @@ package Net::DNS::SEC::Tools::TrustAncho
 
 =head1 NAME
 
-Net::DNS::SEC::Tools::TrustAnchor
+Net::DNS::SEC::Tools::TrustAnchor - base class for TA repositories
 
 =head1 SYNOPSIS
 
@@ -29,8 +29,6 @@ Note that:
 
 is assumed to have imported some of the API routines mentioned below.
 
-=over 4
-
 =cut
 
 use Exporter;
@@ -42,6 +40,8 @@ our @EXPORT = qw(load_module parse_compo
 
 =pod
 
+=over 4
+
 =item $tar = new Net::DNS::SEC::Tools::TrustAnchor();
 
 Initializes a new collection of trust anchors.
@@ -219,6 +219,7 @@ Merges the I<@other> array of trust anch
 trust anchor list.
 
 =cut
+
 sub merge {
     my ($self, @others) = @_;
     foreach my $other (@others) {
