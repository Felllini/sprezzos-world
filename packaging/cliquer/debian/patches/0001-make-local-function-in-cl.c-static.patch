From 1f5b9b32eb955c01135f484120cf5d68e25ba5e8 Mon Sep 17 00:00:00 2001
From: Bernhard R. Link <brlink@debian.org>
Date: Sat, 12 Mar 2011 15:09:47 +0100
Subject: make local function in cl.c static

---
 cl.c |   24 ++++++++++++------------
 1 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/cl.c b/cl.c
index e929565..9005f1f 100644
--- a/cl.c
+++ b/cl.c
@@ -12,12 +12,12 @@
 
 #define TRYFORHELP  "Try `%s -h' for more information.\n",argv[0]
 
-void printhelp(char *prog);
-void read_options(int argc, char **argv);
-void print_search(graph_t *g);
-boolean record_clique_func(set_t s,graph_t *g,clique_options *opts);
-boolean print_clique_func(set_t s,graph_t *g,clique_options *opts);
-void print_clique(set_t s,graph_t *g);
+static void printhelp(char *prog);
+static void read_options(int argc, char **argv);
+static void print_search(graph_t *g);
+static boolean record_clique_func(set_t s,graph_t *g,clique_options *opts);
+static boolean print_clique_func(set_t s,graph_t *g,clique_options *opts);
+static void print_clique(set_t s,graph_t *g);
 
 
 /* Options, changed by command-line arguments. */
@@ -144,7 +144,7 @@ int main(int argc, char **argv) {
  * Prints the help message to stdout.  prog is the program name
  * (from argv[0]).
  */
-void printhelp(char *prog) {
+static void printhelp(char *prog) {
 	printf("Usage:  %s [options] <dimacs-file>\n"
 	       "\n"
 	       "<dimacs-file> is the ASCII or binary DIMACS-format file from which to read\n"
@@ -187,7 +187,7 @@ void printhelp(char *prog) {
 /*
  * Reads the command-line options and sets the global options accordingly.
  */
-void read_options(int argc, char **argv) {
+static void read_options(int argc, char **argv) {
 	int c;
 	char *ptr;
 
@@ -337,7 +337,7 @@ void read_options(int argc, char **argv) {
 /*
  * Prints a line to stderr indicating what is being searched for.
  */
-void print_search(graph_t *g) {
+static void print_search(graph_t *g) {
 	fprintf(stderr,"Searching for %s ",find_all?"all":"a single");
 	if (min_weight==0) {
 		fprintf(stderr,"maximum %s clique%s...\n",
@@ -362,7 +362,7 @@ void print_search(graph_t *g) {
 /*
  * Prints the clique s along with it's size and weight.
  */
-void print_clique(set_t s,graph_t *g) {
+static void print_clique(set_t s,graph_t *g) {
 	int i;
 
 	printf("size=%d, weight=%d:  ",set_size(s),graph_subgraph_weight(g,s));
@@ -382,7 +382,7 @@ void print_clique(set_t s,graph_t *g) {
  * Records a clique into the clique list using dynamic allocation.
  * Used as opts->user_function.
  */
-boolean record_clique_func(set_t s,graph_t *g,clique_options *opts) {
+static boolean record_clique_func(set_t s,graph_t *g,clique_options *opts) {
 	if (clique_count>=clique_list_size) {
 		clique_list=realloc(clique_list,(clique_list_size+512) * 
 				    sizeof(set_t));
@@ -396,7 +396,7 @@ boolean record_clique_func(set_t s,graph_t *g,clique_options *opts) {
 /*
  * Prints a clique.  Used as opts->user_function.
  */
-boolean print_clique_func(set_t s,graph_t *g,clique_options *opts) {
+static boolean print_clique_func(set_t s,graph_t *g,clique_options *opts) {
 	print_clique(s,g);
 	return TRUE;
 }
-- 
1.5.6.5

