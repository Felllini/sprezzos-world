$Id: fix_invalid_xhtml.patch 388 2012-10-09 11:57:04Z tg $

Fix invalid XHTML:
• prevent <table></table> without any <tr /> inside
• someone forgot to check whether HTML5 was enabled before toying around
• sanitise XML IDs (a space is *not* allowed, and "Main Page" contains one)
• let makeLink and all its callers remove HTML5-only attributes from
  hyperlinks if someone else was not careful (rather, several someones)
• prevent <ul></ul> without any <li /> inside
• <img> tags must always have an alt attribute

--- a/includes/HTMLForm.php
+++ b/includes/HTMLForm.php
@@ -803,6 +803,9 @@ class HTMLForm extends ContextSource {
 			$attribs['id'] = Sanitizer::escapeId( "mw-htmlform-$sectionName" );
 		}
 
+		if (!$tableHtml)
+			$tableHtml = '<tr><td><!-- empty to prevent invalid XHTML --></td></tr>';
+
 		$tableHtml = Html::rawElement( 'table', $attribs,
 			Html::rawElement( 'tbody', array(), "\n$tableHtml\n" ) ) . "\n";
 
@@ -1206,6 +1209,8 @@ class HTMLTextField extends HTMLFormFiel
 	}
 
 	function getInputHTML( $value ) {
+		global $wgHtml5;
+
 		$attribs = array(
 			'id' => $this->mID,
 			'name' => $this->mName,
@@ -1229,6 +1234,8 @@ class HTMLTextField extends HTMLFormFiel
 		# well
 		foreach ( array( 'min', 'max', 'pattern', 'title', 'step',
 		'placeholder' ) as $param ) {
+			if ( !$wgHtml5 && $param != 'title' )
+				continue;
 			if ( isset( $this->mParams[$param] ) ) {
 				$attribs[$param] = $this->mParams[$param];
 			}
@@ -1625,13 +1632,14 @@ class HTMLMultiSelectField extends HTMLF
 				$html .= Html::rawElement( 'h1', array(), $label ) . "\n";
 				$html .= $this->formatOptions( $info, $value );
 			} else {
-				$thisAttribs = array( 'id' => "{$this->mID}-$info", 'value' => $info );
+				$info_id = Sanitizer::escapeId($this->mID . '-' . $info);
+				$thisAttribs = array( 'id' => $info_id, 'value' => $info );
 
 				$checkbox = Xml::check(
 					$this->mName . '[]',
 					in_array( $info, $value, true ),
 					$attribs + $thisAttribs );
-				$checkbox .= '&#160;' . Html::rawElement( 'label', array( 'for' => "{$this->mID}-$info" ), $label );
+				$checkbox .= '&#160;' . Html::rawElement( 'label', array( 'for' => $info_id ), $label );
 
 				$html .= ' ' . Html::rawElement( 'div', array( 'class' => 'mw-htmlform-flatlist-item' ), $checkbox );
 			}
--- a/includes/SkinTemplate.php
+++ b/includes/SkinTemplate.php
@@ -1613,6 +1613,8 @@ abstract class BaseTemplate extends Quic
 	 *   output a <span> instead of just text.
 	 */
 	function makeLink( $key, $item, $options = array() ) {
+		global $wgHtml5;
+
 		if ( isset( $item['text'] ) ) {
 			$text = $item['text'];
 		} else {
@@ -1664,6 +1666,11 @@ abstract class BaseTemplate extends Quic
 					$attrs['class'] = $options['link-class'];
 				}
 			}
+			if ( !$wgHtml5 ) {
+				foreach ( array( 'context', 'primary' ) as $k ) {
+					unset( $attrs[$k] );
+				}
+			}
 			$html = Html::rawElement( isset( $attrs['href'] ) ? 'a' : $options['link-fallback'], $attrs, $html );
 		}
 
--- a/skins/MonoBook.php
+++ b/skins/MonoBook.php
@@ -60,6 +60,8 @@ class MonoBookTemplate extends BaseTempl
 	 * @access private
 	 */
 	function execute() {
+		global $wgHtml5;
+
 		// Suppress warnings to prevent notices about missing indexes in $this->data
 		wfSuppressWarnings();
 
@@ -69,7 +71,7 @@ class MonoBookTemplate extends BaseTempl
 	<a id="top"></a>
 	<?php if($this->data['sitenotice']) { ?><div id="siteNotice"><?php $this->html('sitenotice') ?></div><?php } ?>
 
-	<h1 id="firstHeading" class="firstHeading"><span dir="auto"><?php $this->html('title') ?></span></h1>
+	<h1 id="firstHeading" class="firstHeading"><span<?php if ($wgHtml5) echo ' dir="auto"'; ?>><?php $this->html('title') ?></span></h1>
 	<div id="bodyContent" class="mw-body">
 		<div id="siteSub"><?php $this->msg('tagline') ?></div>
 		<div id="contentSub"<?php $this->html('userlangattributes') ?>><?php $this->html('subtitle') ?></div>
@@ -93,12 +95,21 @@ class MonoBookTemplate extends BaseTempl
 	<div class="portlet" id="p-personal">
 		<h5><?php $this->msg('personaltools') ?></h5>
 		<div class="pBody">
+<?php
+	$ul_shown = false;
+	foreach ($this->getPersonalTools() as $key => $item) {
+		if (!$ul_shown) {
+?>
 			<ul<?php $this->html('userlangattributes') ?>>
-<?php		foreach($this->getPersonalTools() as $key => $item) { ?>
-				<?php echo $this->makeListItem($key, $item); ?>
-
-<?php		} ?>
-			</ul>
+<?php
+			$ul_shown = true;
+		}
+		echo "\n" . $this->makeListItem($key, $item);
+	}
+	if ($ul_shown) {
+		echo "\n</ul>\n";
+	}
+?>
 		</div>
 	</div>
 	<div class="portlet" id="p-logo">
--- a/includes/Linker.php
+++ b/includes/Linker.php
@@ -1148,7 +1148,7 @@ class Linker {
 	 * @return string
 	 */
 	private static function formatAutocommentsCallback( $match ) {
-		global $wgLang;
+		global $wgLang, $wgHtml5;
 		$title = self::$autocommentTitle;
 		$local = self::$autocommentLocal;
 
@@ -1189,7 +1189,9 @@ class Linker {
 			$auto .= wfMsgExt( 'colon-separator', array( 'escapenoentities', 'content' ) );
 		}
 		$auto = '<span class="autocomment">' . $auto . '</span>';
-		$comment = $pre . $link . $wgLang->getDirMark() . '<span dir="auto">' . $auto . $post . '</span>';
+		$comment = $pre . $link . $wgLang->getDirMark() .
+		    '<span' . ($wgHtml5 ? ' dir="auto"' : '') . '>' . $auto .
+		    $post . '</span>';
 		return $comment;
 	}
 
@@ -1381,6 +1383,8 @@ class Linker {
 	 * @return string
 	 */
 	public static function commentBlock( $comment, $title = null, $local = false ) {
+		global $wgHtml5;
+
 		// '*' used to be the comment inserted by the software way back
 		// in antiquity in case none was provided, here for backwards
 		// compatability, acc. to brion -ævar
@@ -1388,7 +1392,9 @@ class Linker {
 			return '';
 		} else {
 			$formatted = self::formatComment( $comment, $title, $local );
-			return " <span class=\"comment\" dir=\"auto\">($formatted)</span>";
+			return " <span class=\"comment\"" .
+			    ($wgHtml5 ? " dir=\"auto\"" : "") .
+			    ">($formatted)</span>";
 		}
 	}
 
--- a/includes/media/MediaTransformOutput.php
+++ b/includes/media/MediaTransformOutput.php
@@ -259,7 +259,7 @@ class ThumbnailImage extends MediaTransf
 		}
 
 		$attribs = array(
-			'alt' => $alt,
+			'alt' => $alt ? $alt : '(thumbnail)',
 			'src' => $this->url,
 			'width' => $this->width,
 			'height' => $this->height,
--- a/includes/specials/SpecialUpload.php
+++ b/includes/specials/SpecialUpload.php
@@ -930,6 +930,7 @@ class UploadForm extends HTMLForm {
 				$this->addHeaderText(
 					'<div class="thumb t' . $wgContLang->alignEnd() . '">' .
 					Html::element( 'img', array(
+						'alt' => '(thumbnail)',
 						'src' => $mto->getUrl(),
 						'class' => 'thumbimage',
 					) ) . '</div>', 'description' );
