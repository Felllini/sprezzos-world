Source: nose
Section: python
Priority: optional
Maintainer: Nick Black <nick.black@sprezzatech.com>
XSBC-Original-Maintainer: Gustavo Noronha Silva <kov@debian.org>
Uploaders:
 Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>,
 Torsten Marek <shlomme@debian.org>,
 Charlie Smotherman <cjsmo@cableone.net>
Build-Depends:
 debhelper (>= 7.0.50~),
 python-all (>= 2.6.6-3~),
 python-setuptools (>= 0.6a9),
 python-sphinx (>= 1.0.7+dfsg),
 python3-all,
 python3-setuptools
X-Python-Version: >= 2.5
X-Python3-Version: >= 3.2
Standards-Version: 3.9.3
Homepage: http://somethingaboutorange.com/mrl/projects/nose/
Vcs-Svn: svn://svn.debian.org/python-modules/packages/nose/trunk/
Vcs-Browser: http://svn.debian.org/viewsvn/python-modules/packages/nose/trunk/

Package: python-nose-doc
Architecture: all
Section: doc
Breaks: python-nose (<< 1.1.2)
Replaces: python-nose (<< 1.1.2)
Depends: ${misc:Depends}, ${sphinxdoc:Depends}
Description: documentation for discovery and running for Python's unittest
 nose provides an alternate test discovery and running process for
 unittest, one that is intended to mimic the behavior of py.test as
 much as is reasonably possible without resorting to too much magic
 .
 This package provides the documentation for nose.

Package: python-nose
Architecture: all
Depends: python-pkg-resources, ${misc:Depends}, ${python:Depends}
Suggests: python-coverage, python-nose-doc
Description: test discovery and running of Python's unittest
 nose provides an alternate test discovery and running process for
 unittest, one that is intended to mimic the behavior of py.test as
 much as is reasonably possible without resorting to too much magic

Package: python3-nose
Architecture: all
Depends: python3-pkg-resources, ${misc:Depends}, ${python3:Depends}
Suggests: python-nose-doc
Description: test discovery and running for Python3 unittest
 nose provides an alternate test discovery and running process for Python3
 unittest, one that is intended to mimic the behavior of py.test as
 much as is reasonably possible without resorting to too much magic
