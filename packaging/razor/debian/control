Source: razor
Section: mail
Priority: optional
Maintainer: Nick Black <nick.black@sprezzatech.com>
XSBC-Original-Maintainer: Giuseppe Iuculano <giuseppe@iuculano.it>
Build-Depends: debhelper (>= 7), libnet-dns-perl, libtime-hires-perl | perl (>= 5.8), liburi-perl, quilt (>= 0.40)
Standards-Version: 3.9.4
Homepage: http://razor.sourceforge.net
Vcs-git: git://git.debian.org/git/users/derevko-guest/razor.git
Vcs-Browser: http://git.debian.org/?p=users/derevko-guest/razor.git

Package: razor
Architecture: any
Depends: ${shlibs:Depends}, libdigest-hmac-perl, libdigest-md5-perl, libmime-base64-perl, libnet-dns-perl, libtime-hires-perl | perl (>= 5.8), libtest-simple-perl, liburi-perl, ${perl:Depends}
Provides: librazor2-perl
Description: spam-catcher using a collaborative filtering network
 Vipul's Razor is a distributed, collaborative, spam detection and
 filtering network. Razor establishes a distributed and constantly updating
 catalogue of spam in propagation. This catalogue is used by clients to
 filter out known spam. On receiving a spam, a Razor Reporting Agent (run
 by an end-user or a troll box) calculates and submits a 20-character unique
 identification of the spam (a SHA Digest) to its closest Razor
 Catalogue Server. The Catalogue Server echos this signature to other
 trusted servers after storing it in its database. Prior to manual
 processing or transport-level reception, Razor Filtering Agents (end-users
 and MTAs) check their incoming mail against a Catalogue Server and filter
 out or deny transport in case of a signature match. Catalogued spam, once
 identified and reported by a Reporting Agent, can be blocked out by the
 rest of the Filtering Agents on the network.
