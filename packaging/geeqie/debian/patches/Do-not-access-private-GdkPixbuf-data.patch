From 28bcc9fb92b214dd0b21b96e79952b15f3efa520 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <mcihar@suse.cz>
Date: Wed, 22 Aug 2012 14:20:31 +0200
Subject: [PATCH] Do not access private GdkPixbuf data

The GdkPixbuf is private to Gdk, so we can not access it, rather use
numbers and data we anyway have.
---
 src/image_load_tiff.c |   15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/src/image_load_tiff.c b/src/image_load_tiff.c
index 71a33b8..305de18 100644
--- a/src/image_load_tiff.c
+++ b/src/image_load_tiff.c
@@ -148,6 +148,9 @@ tiff_load_unmap_file (thandle_t handle, tdata_t data, toff_t offset)
 static gboolean image_loader_tiff_load (gpointer loader, const guchar *buf, gsize count, GError **error)
 {
 	ImageLoaderTiff *lt = (ImageLoaderTiff *) loader;
+#if G_BYTE_ORDER == G_BIG_ENDIAN
+    int i;
+#endif
 
         TIFF *tiff;
 	guchar *pixels = NULL;
@@ -326,17 +329,17 @@ static gboolean image_loader_tiff_load (gpointer loader, const guchar *buf, gsiz
 		/* Turns out that the packing used by TIFFRGBAImage depends on 
         	 * the host byte order... 
 	         */ 
-		while (pixels < lt->pixbuf->pixels + bytes) 
+        for (i = 0; i < bytes;)
 			{
-			uint32 pixel = *(uint32 *)pixels;
+			uint32 pixel = *(uint32 *)(pixels + i);
 			int r = TIFFGetR(pixel);
 			int g = TIFFGetG(pixel);
 			int b = TIFFGetB(pixel);
 			int a = TIFFGetA(pixel);
-			*pixels++ = r;
-			*pixels++ = g;
-			*pixels++ = b;
-			*pixels++ = a;
+			pixels[i++] = r;
+			pixels[i++] = g;
+			pixels[i++] = b;
+			pixels[i++] = a;
 			}
 #endif
 
-- 
1.7.10.4

