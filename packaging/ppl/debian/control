Source: ppl
Section: libs
Priority: optional
Maintainer: Nick Black <nick.black@sprezzatech.com>
XSBC-Original-Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Standards-Version: 3.9.4
Build-Depends: debhelper (>= 6.0.7~), libgmp-dev, autoconf, libtool, autotools-dev, swi-prolog [!hurd-i386], chrpath,
 libncurses5-dev, libncursesw5-dev
Build-Depends-Indep: doxygen-latex, graphviz, poppler-utils, ghostscript, texlive-math-extra
Homepage: http://www.cs.unipr.it/ppl/

Package: libppl12
Architecture: any
Multi-Arch: same
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Parma Polyhedra Library (runtime library)
 The Parma Polyhedra Library (PPL) is a C++ library for the
 manipulation of (not necessarily closed) convex polyhedra and other
 numerical abstractions.  The applications of convex polyhedra include
 program analysis, optimized compilation, integer and combinatorial
 optimization and statistical data-editing.  The Parma Polyhedra
 Library is user friendly (you write `x + 2*y + 5*z <= 7' when you
 mean it), fully dynamic (available virtual memory is the only
 limitation to the dimension of anything), written in standard C++,
 exception-safe, rather efficient and thoroughly documented.

Package: libppl0.12-dev
Architecture: any
Multi-Arch: same
Pre-Depends: ${misc:Pre-Depends}
Section: libdevel
Depends: libppl12 (= ${binary:Version}), libppl-c4 (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Provides: libppl-c-dev, libppl-dev
Recommends: libgmp3-dev (>= 4.1.3)
Replaces: libppl6, libppl7 (<< 0.10~pre27-4), libppl9
Conflicts: libppl0.10-dev, libppl0.11-dev
Suggests: libppl-doc
Description: Parma Polyhedra Library (development)
 The Parma Polyhedra Library (PPL) is a C++ library for the
 manipulation of (not necessarily closed) convex polyhedra and other
 numerical abstractions.  The applications of convex polyhedra include
 program analysis, optimized compilation, integer and combinatorial
 optimization and statistical data-editing.  The Parma Polyhedra
 Library is user friendly (you write `x + 2*y + 5*z <= 7' when you
 mean it), fully dynamic (available virtual memory is the only
 limitation to the dimension of anything), written in standard C++,
 exception-safe, rather efficient and thoroughly documented.
 .
 This package provides the header files and static libraries for the
 C and C++ interfaces.

Package: ppl-dev
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Section: devel
Depends: libppl0.12-dev (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Replaces: libppl0.11-dev
Description: Parma Polyhedra Library (development binaries)
 The Parma Polyhedra Library (PPL) is a C++ library for the
 manipulation of (not necessarily closed) convex polyhedra and other
 numerical abstractions.  The applications of convex polyhedra include
 program analysis, optimized compilation, integer and combinatorial
 optimization and statistical data-editing.  The Parma Polyhedra
 Library is user friendly (you write `x + 2*y + 5*z <= 7' when you
 mean it), fully dynamic (available virtual memory is the only
 limitation to the dimension of anything), written in standard C++,
 exception-safe, rather efficient and thoroughly documented.
 .
 This package provides the ppl-config binary.

Package: libppl-c4
Architecture: any
Multi-Arch: same
Pre-Depends: ${misc:Pre-Depends}
Depends: libppl12 (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Description: Parma Polyhedra Library (C interface)
 The Parma Polyhedra Library (PPL) is a C++ library for the
 manipulation of (not necessarily closed) convex polyhedra and other
 numerical abstractions.  The applications of convex polyhedra include
 program analysis, optimized compilation, integer and combinatorial
 optimization and statistical data-editing.  The Parma Polyhedra
 Library is user friendly (you write `x + 2*y + 5*z <= 7' when you
 mean it), fully dynamic (available virtual memory is the only
 limitation to the dimension of anything), written in standard C++,
 exception-safe, rather efficient and thoroughly documented.
 .
 This package provides the C interface.

Package: libppl-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}, libjs-query
Description: Parma Polyhedra Library: Documentation
 The Parma Polyhedra Library (PPL) is a C++ library for the
 manipulation of (not necessarily closed) convex polyhedra and other
 numerical abstractions.  The applications of convex polyhedra include
 program analysis, optimized compilation, integer and combinatorial
 optimization and statistical data-editing.  The Parma Polyhedra
 Library is user friendly (you write `x + 2*y + 5*z <= 7' when you
 mean it), fully dynamic (available virtual memory is the only
 limitation to the dimension of anything), written in standard C++,
 exception-safe, rather efficient and thoroughly documented.
 .
 This package provides the documentation.

Package: libppl-swi
Architecture: any
Multi-Arch: same
Pre-Depends: ${misc:Pre-Depends}
Depends: libppl12 (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}, swi-prolog
Description: Parma Polyhedra Library (SWI Prolog interface)
 The Parma Polyhedra Library (PPL) is a C++ library for the
 manipulation of (not necessarily closed) convex polyhedra and other
 numerical abstractions.  The applications of convex polyhedra include
 program analysis, optimized compilation, integer and combinatorial
 optimization and statistical data-editing.  The Parma Polyhedra
 Library is user friendly (you write `x + 2*y + 5*z <= 7' when you
 mean it), fully dynamic (available virtual memory is the only
 limitation to the dimension of anything), written in standard C++,
 exception-safe, rather efficient and thoroughly documented.
 .
 This package provides the SWI Prolog interface.
