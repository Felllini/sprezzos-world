Description: Escape "-" signs that mean the "minus" character
Author: Rafael Laboissiere <rafael@debian.org>
Last-Update: 2011-06-28
--- a/doc/man/man1/bbox.1
+++ b/doc/man/man1/bbox.1
@@ -31,16 +31,16 @@
 line in memory.
 .SH "OPTIONS"
 .TP
-\fB-h | --help \fR
+\fB\-h | \-\-help \fR
 Show summary of options.
 .TP
-\fB-V \fR
+\fB\-V \fR
 Show version of program.
 .TP
-\fB-r \fR
+\fB\-r \fR
 resolution of picture in dpi
 .TP
-\fB-l \fR
+\fB\-l \fR
 loose bounding box (integer bounding box is expanded by 1
 point, hires bounding box is expanded by 0.5 points)
 .SH "SEE ALSO"
--- a/doc/man/man1/ps2eps.1
+++ b/doc/man/man1/ps2eps.1
@@ -9,7 +9,7 @@
 ps2eps \- convert PostScript to EPS (Encapsulated PostScript) files
 .SH SYNOPSIS
 
-\fBps2eps\fR [ \fB-f\fR ] [ \fB-q\fR ] [ \fB-N\fR ] [ \fB-O\fR ] [ \fB-n\fR ] [ \fB-P\fR ] [ \fB-c\fR ] [ \fB-C\fR ] [ \fB-m\fR ] [ \fB-B\fR ] [ \fB-E\fR ] [ \fB-s \fIpagedim\fB\fR ] [ \fB-t \fIoffset\fB\fR ] [ \fB-r \fIresolution\fB\fR ] [ \fB-R \fI+|-|^\fB\fR ] [ \fB-l\fR ] [ \fB-g\fR ] [ \fB-H\fR ] [ \fB-d\fR ] [ \fB-h|--help\fR ] [ \fB-a\fR ] [ \fB-W\fR ] [ \fB-L\fR ] [ \fB-V|--version\fR ] [ \fB--\fR ] [ \fB\fIpsfile1\fB\fR ] [ \fB\fIpsfile2\fB\fR ] [ \fB\fI\&...\fB\fR ]
+\fBps2eps\fR [ \fB\-f\fR ] [ \fB\-q\fR ] [ \fB\-N\fR ] [ \fB\-O\fR ] [ \fB\-n\fR ] [ \fB\-P\fR ] [ \fB\-c\fR ] [ \fB\-C\fR ] [ \fB\-m\fR ] [ \fB\-B\fR ] [ \fB\-E\fR ] [ \fB\-s \fIpagedim\fB\fR ] [ \fB\-t \fIoffset\fB\fR ] [ \fB\-r \fIresolution\fB\fR ] [ \fB\-R \fI+|\-|^\fB\fR ] [ \fB\-l\fR ] [ \fB\-g\fR ] [ \fB\-H\fR ] [ \fB\-d\fR ] [ \fB\-h|\-\-help\fR ] [ \fB\-a\fR ] [ \fB\-W\fR ] [ \fB\-L\fR ] [ \fB\-V|\-\-version\fR ] [ \fB\-\-\fR ] [ \fB\fIpsfile1\fB\fR ] [ \fB\fIpsfile2\fB\fR ] [ \fB\fI\&...\fB\fR ]
 
 .SH "DESCRIPTION"
 .PP
@@ -34,67 +34,67 @@
 psutils package to extract a single page from a document that
 contains multiple pages).
 .PP
-If BoundingBox in output seems to be wrong, please try options \fB--size\fR or
-\fB--ignoreBB\fR\&. See also section TROUBLESHOOTING. 
+If BoundingBox in output seems to be wrong, please try options \fB\-\-size\fR or
+\fB\-\-ignoreBB\fR\&. See also section TROUBLESHOOTING.
 .SH "OPTIONS"
 .PP
 \fBps2eps\fR follows the usual GNU command line syntax,
-with long options starting with two dashes (`-').  A summary of
+with long options starting with two dashes (`\-').  A summary of
 options is included below.
 .TP
-\fB-h, --help \fR
+\fB\-h, \-\-help \fR
 Show summary of options.
 .TP
-\fB-V, --version \fR
+\fB\-V, \-\-version \fR
 Show version of program.
 .TP
-\fB-f, --force \fR
+\fB\-f, \-\-force \fR
 Force overwriting existing files. \fBps2eps\fR 
 will not overwrite files by default to avoid deleting original EPS
 files accidently.
 .TP
-\fB-q, --quiet \fR
+\fB\-q, \-\-quiet \fR
 quiet operation (no output while processing files, except errors).
 .TP
-\fB-N, --noinsert \fR
+\fB\-N, \-\-noinsert \fR
 do not insert any postscript code. Normally a few postscript
 instructions are added around the original postscript code by
 \fBps2eps\fR which can be turned off by this option.
 .TP
-\fB-O, --preserveorientation \fR
+\fB\-O, \-\-preserveorientation \fR
 do not filter %%Orientation: header comment.
 .TP
-\fB-n, --nofix \fR
+\fB\-n, \-\-nofix \fR
 do not try to fix postscript code by filtering some instructions.
 .TP
-\fB-P, --removepreview \fR
+\fB\-P, \-\-removepreview \fR
 remove preview image (smaller file, but no preview anymore).
 .TP
-\fB-F, --fixps \fR
+\fB\-F, \-\-fixps \fR
 fix postscript code unconditionally. Otherwise, filtering is
 usually triggered by detection of certain drivers only.
 .TP
-\fB-c, --comments \fR
+\fB\-c, \-\-comments \fR
 preserve document structure comments.
 .TP
-\fB-C, --clip \fR
+\fB\-C, \-\-clip \fR
 insert postscript code for clipping. Unless
-\fB--nohires\fR is specified, the HiResBoundingBox
+\fB\-\-nohires\fR is specified, the HiResBoundingBox
 (enlarged by 0.1 points) is used for clipping. 
 .TP
-\fB-m, --mono \fR
+\fB\-m, \-\-mono \fR
 use black/white bitmap as base for calculation (default: off).
 .TP
-\fB-s, --size=pagedim \fR
-where pagedim is a pre-defined standard page size
+\fB\-s, \-\-size=pagedim \fR
+where pagedim is a pre\-defined standard page size
 (e.g., a4,a0,b0,letter,...) or explicitly specified in a 
 format pagedim:=\fIX\fRx\fIY\fR[cm|in],
 where \fIX\fR and \fIY\fR are numbers (floating points are accepted) followed by
 units centimeter (cm) or inch (in), (default: cm). 
-Use \fB--size=list\fR to list pre-defined pagesizes. 
+Use \fB\-\-size=list\fR to list pre\-defined pagesizes.
 See also environment variable PS2EPS_SIZE\&.
 .TP
-\fB-t, --translate=x,y \fR
+\fB\-t, \-\-translate=x,y \fR
 specify an x,y offset (may be negative) in postscript points
 (1/72 dpi) for drawing. This option may be required
 if your drawing has negative coordinates which usually lets ghostscript 
@@ -102,55 +102,55 @@
 at positive coordinates. The resulting output will
 also be shifted.
 .TP
-\fB-r, --resolution=dpi \fR
+\fB\-r, \-\-resolution=dpi \fR
 specify a resolution in dpi (dots per inch) for drawing under
 ghostscript. Default
 resolution is 144 dpi which is the double of the typical 72 dpi.
 This option may help if there is a hardware dependent resolution
 encoded in the postscript, e.g., 600dpi. Example:
-\fBps2eps -l -r 600 test.ps\fR
+\fBps2eps \-l \-r 600 test.ps\fR
 .TP
-\fB-R, --rotate=direction \fR
+\fB\-R, \-\-rotate=direction \fR
 This option rotates the resulting EPS output. 
 The parameter direction determines the direction of
-rotation: + means +90 degrees (clockwise),- means -90 degrees
+rotation: + means +90 degrees (clockwise),\- means \-90 degrees
 (counter-clockwise), and  ^ means 180 degrees (up-side down).
 .TP
-\fB-l, --loose \fR
+\fB\-l, \-\-loose \fR
 expand the original tight bounding box by one point in each
 direction.
 .TP
-\fB-B, --ignoreBB \fR
+\fB\-B, \-\-ignoreBB \fR
 do not use existing bounding box as page size for
 rendering.
 .TP
-\fB-E, --ignoreEOF \fR
+\fB\-E, \-\-ignoreEOF \fR
 do not use %%EOF as hint for end of file. Otherwise, \fBps2eps\fR assumes
 that postscript code ends after the last %%EOF comment, because
 some drivers add trailing binary ``garbage'' code which gets deleted 
 by \fBps2eps\fR by default. 
 .TP
-\fB-g, --gsbbox \fR
+\fB\-g, \-\-gsbbox \fR
 use internal bbox device of ghostscript instead of the external C
 program \fBbbox\fR\&. The internal bbox device of ghostscript
 generates different values (sometimes even incorrect), 
 so using the provided \fBbbox\fR should be more robust.
 See also environment variable PS2EPS_GSBBOX\&.
 .TP
-\fB-H, --nohires \fR
+\fB\-H, \-\-nohires \fR
 do not generate a %%HiResBoundingBox comment for output.
 .TP
-\fB-a, --accuracy \fR
+\fB\-a, \-\-accuracy \fR
 increase the accuracy by turning subsample antialiasing on (may be slower) 
 .TP
-\fB-L, --license \fR
+\fB\-L, \-\-license \fR
 show licensing information.
 .TP
-\fB-d, --debuggs \fR
+\fB\-d, \-\-debuggs \fR
 show ghostscript call. This may be helpful for solving problems that
 occur during a ghostscript call.
 .TP
-\fB-W, --warnings \fR
+\fB\-W, \-\-warnings \fR
 show warnings about sanity of generated EPS file. Certain
 postscript commands should not be contained in an EPS file.
 With this option set \fBps2eps\fR will issue a warning if it 
@@ -168,10 +168,10 @@
 If you have documents that are larger than your
 ghostscript default (usually A4 or US letter), you have to
 specify the page dimensions explicitly using the 
-\fB-s\fR option. Otherwise your EPS
+\fB\-s\fR option. Otherwise your EPS
 might be cut off during rasterizing by ghostscript resulting
 in a wrongly calculated bounding box. You can pass 
-all pre-defined page sizes to \fB-s\fR that ghostscript understands. These are
+all pre-defined page sizes to \fB\-s\fR that ghostscript understands. These are
 currently: 11x17, ledger, legal, letter, lettersmall, archA, archB, archC, archD, archE
 a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, isob0, isob1, isob2, isob3, isob4, isob5, isob6, 
 b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, c6, jisb0, jisb1,
@@ -189,9 +189,9 @@
 postscript file (though \fBps2eps\fR even works with negative and
 fractional values are contained in the original bounding box by using
 automatic translation). Therefore, if the given bounding box is to
-small or incorrect anyway, you can ignore the existing bounding box with the \fB-B\fR
+small or incorrect anyway, you can ignore the existing bounding box with the \fB\-B\fR
 option, which will cause ghostscript to use its internal
-default size (or use \fB-s\fR). However, if the
+default size (or use \fB\-s\fR). However, if the
 BoundingBox has negative coordinates, which is not allowed by
 the specification, \fBps2eps\fR will shift the output to positive values.
 .PP
@@ -215,7 +215,7 @@
 which is very annoying. In order to prevent this, most programs have a
 clipping option for imported \fI\&.eps\fR files (within LaTeX you can use
 \\includegraphics*{}) for this purpose. If this is unfortunately not
-the case, you can use the \fB-C\fR option of \fBps2eps\fR which will (hopefully)
+the case, you can use the \fB\-C\fR option of \fBps2eps\fR which will (hopefully)
 do it for you. Unfortunately, PScript.dll 5.2 (Windows XP) introduced
 new very badly behaving Postscript code (initclip) which will even
 override the outer clipping! Thus, a new filter had to be installed
@@ -224,10 +224,10 @@
 However, because most programs clip directly on the bounding box,
 you still may loose some pixels of your image, because the bounding
 box is described in the coarse resolution of postscript points,
-i.e. 72 dpi.  In order to prevent this, you can use the \fB-l\fR
-option or \fB-C\fR option (for the latter, clipping by the importing program
+i.e. 72 dpi.  In order to prevent this, you can use the \fB\-l\fR
+option or \fB\-C\fR option (for the latter, clipping by the importing program
 should be disabled then) to allow for a 1 point larger bounding box.
-\fB-C\fR clips around a 1 point enlarged bounding box and \fB-l\fR enlarges the
+\fB\-C\fR clips around a 1 point enlarged bounding box and \fB\-l\fR enlarges the
 bounding box values by 1 point (you can also combine both options).
 .SS "INCLUDED FILTERS"
 .PP
@@ -238,7 +238,7 @@
 driver (\fBps2eps\fR was mainly tested with HP and Adobe printer
 drivers, although it may work for all printers using the
 PScript.dll). In this case you can try to turn of filtering by
-using option \fB-n\fR, or try to find the bad sequence in the postscript
+using option \fB\-n\fR, or try to find the bad sequence in the postscript
 code and adapt the filter rule in the \fBps2eps\fR script (variables
 $linefilter, $rangefilter_begin, $rangefilter_end; linefilter is
 an expression for filtering single lines, rangefilter_... are
@@ -264,17 +264,17 @@
 action within the marked binary sections.
 .PP
 \fBps2eps\fR filters also %%Orientation: comments by
-default (you can use option \fB-O\fR to turn off filtering),
+default (you can use option \fB\-O\fR to turn off filtering),
 because ghostscript may ``automagically'' rotate images when generating PDF 
 images, which is not desired in most cases. Hint: you can turn off that
-feature in ghostscript unconditionally by specifying -dAutoRotatePages=/None.
+feature in ghostscript unconditionally by specifying \-dAutoRotatePages=/None.
 .SS "CORRUPTED OUTPUT"
 .PP
 Some postscript code may get corrupted when comment lines or even blank 
 lines are removed (which is the default to make .eps files smaller), 
 because those files may contain encoded images
 which also have a % as first character in a line or use a special
-comment as end of image delimiter. If this is the case, use the \fB-c\fR
+comment as end of image delimiter. If this is the case, use the \fB\-c\fR
 option to prevent filtering comments.
 .SS "COLOR AND MEMORY"
 .PP
@@ -282,7 +282,7 @@
 letting ghostscript consume more resources for drawing its bitmap
 (roughly 6MBytes for an A4 page). \fBbbox\fR is reading
 the bitmap line by line so it consumes only minimal memory. If you experience problems
-with memory consumption of ghostscript, you may use the \fB-m\fR option
+with memory consumption of ghostscript, you may use the \fB\-m\fR option
 for using a monochrome image. But this will probably result in wrongly
 determined bounding boxes with colored
 images, because ghostscript has to do black/white dithering and may thus suppress
@@ -290,7 +290,7 @@
 .PP
 Another option in case of memory problems and too long run times
 is to use the much more memory efficient internal ghostscript bbox by using the
-\fB-g\fR option.
+\fB\-g\fR option.
 .SH "ENVIRONMENT VARIABLES"
 .PP
 Please note that a command line option always takes precedence over
@@ -298,7 +298,7 @@
 .PP
 The environment variable PS2EPS_SIZE can be used
 to specify a default page size and take any argument that
-\fB--size\fR accepts.  Examples: \fBexport PS2EPS_SIZE=a0\fR (bash-like syntax)
+\fB\-\-size\fR accepts.  Examples: \fBexport PS2EPS_SIZE=a0\fR (bash-like syntax)
 or \fBsetenv PS2EPS_SIZE letter\fR (csh syntax). 
 .PP
 If the environment variable PS2EPS_GSBBOX is set
@@ -308,14 +308,14 @@
 .SH "EXAMPLES"
 .PP
 The usual call is simply:
-\fBps2eps -l \fIfile\fB\fR
+\fBps2eps \-l \fIfile\fB\fR
 .PP
 A relatively failsafe call would be (if your postscript is smaller
 than iso b0 [100cm x 141.4cm] and you have a fast computer with enough memory):
-\fBps2eps -l -B -s b0 -c -n \fIfile\fB\fR
+\fBps2eps \-l \-B \-s b0 \-c \-n \fIfile\fB\fR
 .PP
 If output is not correct try:
-\fBps2eps -l -B -s b0 -F \fIfile\fB\fR 
+\fBps2eps \-l \-B \-s b0 \-F \fIfile\fB\fR
 .SH "AUTHOR"
 .PP
 \fBps2eps\fR was written by Roland Bless. 
@@ -332,7 +332,7 @@
 should be more robust.
 However, because normal clipping has only a resolution of 1/72dpi
 (postscript point), the clipping process may still erase parts of your
-EPS image. In this case please use the \fB-l\fR option to add 
+EPS image. In this case please use the \fB\-l\fR option to add
 an additional point of white space around the tight bounding box.
 .SS "ACKNOWLEDGMENTS"
 .PP
