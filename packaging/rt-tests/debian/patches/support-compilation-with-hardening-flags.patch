From: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Subject: support compilation with hardening flags

For Debian 7.0 (aka wheezy) packages it's recommended to use several
hardening flags, the default on amd64 being:

	CFLAGS=-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security
	CPPFLAGS=-D_FORTIFY_SOURCE=2
	LDFLAGS=-Wl,-z,relro

This patch doesn't fix all warnings but at least makes all programs compile
again by not using char *variables as printf format strings.

Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Forwarded: id:1346615170-25310-1-git-send-email-u.kleine-koenig@pengutronix.de
---
 src/pmqtest/pmqtest.c         |    4 ++--
 src/ptsematest/ptsematest.c   |    4 ++--
 src/sigwaittest/sigwaittest.c |    4 ++--
 src/svsematest/svsematest.c   |    4 ++--
 4 files changed, 8 insertions(+), 8 deletions(-)

--- a/src/ptsematest/ptsematest.c
+++ b/src/ptsematest/ptsematest.c
@@ -389,12 +389,12 @@
 					(int) ((receiver[i].sumdiff / receiver[i].samples) + 0.5),
 					receiver[i].maxdiff);
 				if (receiver[i].error[0] != '\0') {
-					printf(receiver[i].error);
+					printf("%s", receiver[i].error);
 					errorlines++;
 					receiver[i].error[0] = '\0';
 				}
 				if (sender[i].error[0] != '\0') {
-					printf(sender[i].error);
+					printf("%s", sender[i].error);
 					errorlines++;
 					receiver[i].error[0] = '\0';
 				}
--- a/src/sigwaittest/sigwaittest.c
+++ b/src/sigwaittest/sigwaittest.c
@@ -561,12 +561,12 @@
 					    receiver[i].samples) + 0.5),
 					    receiver[i].maxdiff);
 				if (receiver[i].error[0] != '\0') {
-					printf(receiver[i].error);
+					printf("%s", receiver[i].error);
 					receiver[i].error[0] = '\0';
 					errorlines++;
 				}
 				if (sender[i].error[0] != '\0') {
-					printf(sender[i].error);
+					printf("%s", sender[i].error);
 					sender[i].error[0] = '\0';
 					errorlines++;
 				}
--- a/src/svsematest/svsematest.c
+++ b/src/svsematest/svsematest.c
@@ -646,12 +646,12 @@
 					    receiver[i].samples) + 0.5),
 					    receiver[i].maxdiff);
 				if (receiver[i].error[0] != '\0') {
-					printf(receiver[i].error);
+					printf("%s", receiver[i].error);
 					receiver[i].error[0] = '\0';
 					errorlines++;
 				}
 				if (sender[i].error[0] != '\0') {
-					printf(sender[i].error);
+					printf("%s", sender[i].error);
 					sender[i].error[0] = '\0';
 					errorlines++;
 				}
--- a/src/pmqtest/pmqtest.c
+++ b/src/pmqtest/pmqtest.c
@@ -512,12 +512,12 @@
 					(int) ((receiver[i].sumdiff / receiver[i].samples) + 0.5),
 					receiver[i].maxdiff);
 				if (receiver[i].error[0] != '\0') {
-					printf(receiver[i].error);
+					printf("%s", receiver[i].error);
 					errorlines++;
 					receiver[i].error[0] = '\0';
 				}
 				if (sender[i].error[0] != '\0') {
-					printf(sender[i].error);
+					printf("%s", sender[i].error);
 					errorlines++;
 					receiver[i].error[0] = '\0';
 				}
