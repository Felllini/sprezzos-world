--- a/top/top.1
+++ b/top/top.1
@@ -745,17 +745,6 @@
 40.\fB nTH \*(Em Number of Threads \fR
 The number of threads associated with a process.
 
-.TP 4
-41.\fB vMj \*(Em Major Page Fault Count Delta\fR
-The number of\fB major\fR page faults that have occurred since the
-last update (see nMaj).
-
-.TP 4
-42.\fB vMn \*(Em Minor Page Fault Count Delta\fR
-The number of\fB minor\fR page faults that have occurred since the
-last update (see nMin).
-
-
 .\" ......................................................................
 .SS 3b. MANAGING Fields
 .\" ----------------------------------------------------------------------
--- a/top/top.c
+++ b/top/top.c
@@ -220,8 +220,6 @@
 SCB_NUM1(FLG, flags)
 SCB_NUM1(FL1, maj_flt)
 SCB_NUM1(FL2, min_flt)
-SCB_NUM1(FV1, maj_delta)
-SCB_NUM1(FV2, min_delta)
 SCB_NUMx(GID, egid)
 SCB_STRS(GRP, egroup)
 SCB_NUMx(NCE, nice)
@@ -1409,8 +1407,6 @@
 #undef L_oom
 #endif
    {    -1,     -1,  A_left,   SF(ENV),  L_ENVIRON },
-   {     3,  SK_no,  A_right,  SF(FV1),  L_stat    },
-   {     3,  SK_no,  A_right,  SF(FV2),  L_stat    }
  #undef SF
  #undef A_left
  #undef A_right
@@ -2161,8 +2157,6 @@
    // find matching entry from previous frame and make stuff elapsed
    if ((h = hstbsrch(PHist_sav, maxt_sav - 1, this->tid))) {
       tics -= h->tics;
-      this->maj_delta = this->maj_flt - h->maj;
-      this->min_delta = this->min_flt - h->min;
    }
 #else
    // hash & save for the next frame
@@ -2170,8 +2164,6 @@
    // find matching entry from previous frame and make stuff elapsed
    if ((h = hstget(this->tid))) {
       tics -= h->tics;
-      this->maj_delta = this->maj_flt - h->maj;
-      this->min_delta = this->min_flt - h->min;
    }
 #endif
 
@@ -3883,12 +3875,6 @@
          case P_FL2:
             cp = scale_unum(p->min_flt, S, W, Jn);
             break;
-         case P_FV1:
-            cp = scale_unum(p->maj_delta, S, W, Jn);
-            break;
-         case P_FV2:
-            cp = scale_unum(p->min_delta, S, W, Jn);
-            break;
          case P_GID:
             cp = make_num(p->egid, W, Jn, P_GID);
             break;
--- a/top/top.h
+++ b/top/top.h
@@ -173,7 +173,6 @@
    P_OOA, P_OOM,
 #endif
    P_ENV,
-   P_FV1, P_FV2,
 #ifdef USE_X_COLHDR
    // not really pflags, used with tbl indexing
    P_MAXPFLGS
--- a/top/top_nls.c
+++ b/top/top_nls.c
@@ -248,12 +248,6 @@
 /* Translation Hint: the abbreviation 'vars' below is shorthand for
                      'variables' */
    Desc_nlstab[P_ENV] = _("Environment vars");
-/* Translation Hint: maximum 'vMj' = 3 */
-   Head_nlstab[P_FV1] = _("vMj");
-   Desc_nlstab[P_FV1] = _("Major Faults delta");
-/* Translation Hint: maximum 'vMn' = 3 */
-   Head_nlstab[P_FV2] = _("vMn");
-   Desc_nlstab[P_FV2] = _("Minor Faults delta");
 }
 
 
--- a/proc/procps.h
+++ b/proc/procps.h
@@ -33,7 +33,7 @@
 //
 #if defined(k64test) || (defined(_ABIN32) && _MIPS_SIM == _ABIN32)
 #define KLONG long long    // not typedef; want "unsigned KLONG" to work
-#define KLF "ll"
+#define KLF "L"
 #define STRTOUKL strtoull
 #else
 #define KLONG long
--- a/proc/slab.h
+++ b/proc/slab.h
@@ -1,7 +1,7 @@
 #ifndef _PROC_SLAB_H
 #define _PROC_SLAB_H
 
-#define SLAB_INFO_NAME_LEN      128
+#define SLAB_INFO_NAME_LEN      64
 
 struct slab_info {
 	char name[SLAB_INFO_NAME_LEN];  /* name of this cache */
--- a/proc/readproc.h
+++ b/proc/readproc.h
@@ -41,9 +41,6 @@
     int
         tid,		// (special)       task id, the POSIX thread ID (see also: tgid)
     	ppid;		// stat,status     pid of parent process
-    unsigned long       // next 2 fields are NOT filled in by readproc
-        maj_delta,      // stat (special) major page faults since last update
-        min_delta;      // stat (special) minor page faults since last update
     unsigned
         pcpu;           // stat (special)  %CPU usage (is not filled in by readproc!!!)
     char
