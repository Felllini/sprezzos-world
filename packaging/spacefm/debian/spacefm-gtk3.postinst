#!/bin/bash

spacefm_cleanup()
{
    cd /
    if [ -n "$spacefm_tmp" ]; then
	rm -rf "$spacefm_tmp"
    fi
}

spacefm_err()
{
    echo -n "$spacefm_test"
    echo 'spacefm-build: ERROR: Unable to complete installation'
    spacefm_cleanup
    exit 1
}

unset spacefm_tmp spacefm_test spacefm_nusername

echo "spacefm-postinst $1"
case "$1" in
    configure)
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        exit
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# get first non-root username
for spacefm_nuid in {1000..2000}; do
    spacefm_nusername=`getent passwd $spacefm_nuid 2>&- | sed 's/\([!:]*\):.*/\1/'`
    if [ -n "$spacefm_nusername" ]; then
        break
    fi
done
if [ -z "$spacefm_nusername" ]; then
    echo 'spacefm-build: ERROR: unable to determine non-root username'
    exit 1
fi

echo 'spacefm-build: Extracting source...'
spacefm_src=/usr/share/spacefm/src/spacefm-current.tar.xz
if [ ! -e $spacefm_src ]; then
    echo "spacefm-build: ERROR: missing $spacefm_src"
    exit 1
fi

spacefm_tmp=`su "$spacefm_nusername" -c 'mktemp -d --tmpdir spacefm-build-XXXX.tmp'`
if [ $? -ne 0 ] || [ -z "$spacefm_tmp" ] || [ ! -d "$spacefm_tmp" ]; then
    echo 'spacefm-build: ERROR: failed to create temporary directory'
    spacefm_cleanup
    exit 1
fi

cd "$spacefm_tmp" || spacefm_err
su "$spacefm_nusername" -c "tar -xJf $spacefm_src" || spacefm_err

cd spacefm-* || spacefm_err

echo 'spacefm-build: Running configure...'
spacefm_test=`su "$spacefm_nusername" -c './configure --disable-pixmaps --prefix=/usr'` || spacefm_err

echo 'spacefm-build: Running make (this can take several minutes)...'
su "$spacefm_nusername" -c 'make -s'
if [ ! -e src/spacefm ]; then
    echo 'spacefm-build: ERROR: make failed'
    spacefm_cleanup
    exit 1
fi
        
echo 'spacefm-build: Running make install...'
spacefm_test=`make install 2>&1` || spacefm_err

spacefm_cleanup
echo "spacefm-build: update-mime-database /usr/share/mime"
update-mime-database /usr/share/mime > /dev/null
echo "spacefm-build: update-desktop-database -q"
update-desktop-database -q
echo "spacefm-build: gtk-update-icon-cache -q -t -f /usr/share/icons/hicolor"
gtk-update-icon-cache -q -t -f /usr/share/icons/hicolor
echo "spacefm-build: gtk-update-icon-cache -q -t -f /usr/share/icons/Faenza"
gtk-update-icon-cache -q -t -f /usr/share/icons/Faenza

echo 'spacefm-build: Success'
exit 0

