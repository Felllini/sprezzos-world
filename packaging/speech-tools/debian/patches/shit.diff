Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 speech-tools (1:2.1-SprezzOS1) unstable; urgency=low
 .
   * Rebuild without libesd
Author: Nick Black <nick.black@sprezzatech.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- speech-tools-2.1.orig/siod/siodeditline.c
+++ speech-tools-2.1/siod/siodeditline.c
@@ -151,7 +151,7 @@ static STATUS siod_manual()
     symbol = el_current_sym();
     infostring = siod_manual_sym(symbol);
     putc('\n',stderr);
-    fprintf(stderr,infostring);
+    fprintf(stderr,"%s",infostring);
     fflush(stderr);
     putc('\n',stderr);
     fflush(stderr);
--- speech-tools-2.1.orig/utils/cmd_line.cc
+++ speech-tools-2.1/utils/cmd_line.cc
@@ -460,7 +460,7 @@ static void output_sgml_synopsis(char **
     fprintf(stdout,"<cmdsynopsis><command>%s</command>", 
 	    (const char *)full.filename());
 
-    fprintf(stdout, (const char *)ts.get_upto_eoln().string());
+    fprintf(stdout, "%s", (const char *)ts.get_upto_eoln().string());
 
     while (!ts.eof())
     {

diff -ur st21/base_class/EST_TSimpleMatrix.cc speech-tools_2.1/base_class/EST_TSimpleMatrix.cc
--- st21/base_class/EST_TSimpleMatrix.cc	2013-01-14 19:51:58.765006175 -0500
+++ speech-tools_2.1/base_class/EST_TSimpleMatrix.cc	2009-02-18 07:56:24.000000000 -0500
@@ -42,6 +42,7 @@
 
 #include "EST_TSimpleMatrix.h"
 #include "EST_TVector.h"
+#include <cstring>
 #include <fstream>
 #include <iostream>
 #include "EST_cutils.h"
@@ -98,7 +99,7 @@
 	{
 	  int copy_r = Lof(this->num_rows(), new_rows);
 
-	  just_resize(new_rows, new_cols, &old_vals);
+	  this->just_resize(new_rows, new_cols, &old_vals);
 
           for (q=0; q<(copy_r*new_cols*sizeof(T)); q++) /* memcpy */
               ((char *)this->p_memory)[q] = ((char *)old_vals)[q];
@@ -127,9 +128,9 @@
 	  int copy_r = Lof(this->num_rows(), new_rows);
 	  int copy_c = Lof(this->num_columns(), new_cols);
 	  
-	  just_resize(new_rows, new_cols, &old_vals);
+	  this->just_resize(new_rows, new_cols, &old_vals);
 
-	  set_values(old_vals,
+	  this->set_values(old_vals,
 		     old_row_step, old_column_step,
 		     0, copy_r,
 		     0, copy_c);
diff -ur speech-tools_2.1/base_class/EST_TSimpleVector.cc st21/base_class/EST_TSimpleVector.cc
--- speech-tools_2.1/base_class/EST_TSimpleVector.cc	2009-02-18 07:52:55.000000000 -0500
+++ st21/base_class/EST_TSimpleVector.cc	2013-01-14 19:53:40.261671011 -0500
@@ -42,6 +42,7 @@
 
 #include "EST_TSimpleVector.h"
 #include "EST_matrix_support.h"
+#include <cstring>
 #include <fstream>
 #include "EST_cutils.h"
 
@@ -70,7 +71,7 @@
   int old_offset = this->p_offset;
   unsigned int q;
 
-  just_resize(newn, &old_vals);
+  this->just_resize(newn, &old_vals);
 
   if (set && old_vals)
     {
diff -ur speech-tools_2.1/include/EST_TNamedEnum.h st21/include/EST_TNamedEnum.h
--- speech-tools_2.1/include/EST_TNamedEnum.h	2004-09-30 08:53:36.000000000 -0400
+++ st21/include/EST_TNamedEnum.h	2013-01-14 19:50:21.311674600 -0500
@@ -130,7 +130,7 @@
 	{this->initialise((const void *)defs); };
   EST_TNamedEnumI(EST_TValuedEnumDefinition<const char *,const char *,INFO> defs[], ENUM (*conv)(const char *))
 	{this->initialise((const void *)defs, conv); };
-  const char *name(ENUM tok, int n=0) const {return value(tok,n); };
+  const char *name(ENUM tok, int n=0) const {return this->value(tok,n); };
 
 };
 
