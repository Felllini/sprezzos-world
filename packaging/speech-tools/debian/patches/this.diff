Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 speech-tools (1:2.1-SprezzOS1) unstable; urgency=low
 .
   * Rebuild without libesd
Author: Nick Black <nick.black@sprezzatech.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- speech-tools-2.1.orig/include/EST_TIterator.h
+++ speech-tools-2.1/include/EST_TIterator.h
@@ -101,7 +101,7 @@ public:
 
   /// Create an iterator ready to run over the given container.
   EST_TIterator(const Container &over)
-    { begin(over); }
+    { this->begin(over); }
 
   /// Copy an iterator by assignment
   Iter &operator = (const Iter &orig)
@@ -109,7 +109,7 @@ public:
 
   /// Assigning a container to an iterator sets it ready to start.
   Iter &operator = (const Container &over)
-    { begin(over); return *this;}
+    { this->begin(over); return *this;}
 
   /// Set the iterator ready to run over this container.
   void begin(const Container &over)
@@ -209,7 +209,7 @@ public:
 
   /// Create an iterator ready to run over the given container.
   EST_TStructIterator(const Container &over)
-    { begin(over); }
+    { this->begin(over); }
 
   const Entry *operator ->() const
     {return &this->current();}
@@ -239,7 +239,7 @@ public:
 
   /// Create an iterator ready to run over the given container.
   EST_TRwIterator(Container &over)
-    { begin(over); }
+    { this->begin(over); }
 
   /// Set the iterator ready to run over this container.
   void begin(Container &over)
@@ -289,7 +289,7 @@ public:
 
   /// Create an iterator ready to run over the given container.
   EST_TRwStructIterator(Container &over)
-    { begin(over); }
+    { this->begin(over); }
 
   Entry *operator ->() const
     {return &this->current();}
