Description: Port from python-gtkmozembed to python-webkit
Author: Chris Coulson <chris.coulson@canonical.com>
Forwarded: no

--- a/src/share/screenlets-manager/WebappScreenlet.py
+++ b/src/share/screenlets-manager/WebappScreenlet.py
@@ -22,59 +22,13 @@ import sys
 import os
 from screenlets import sensors
 
-#########WORKARROUND FOR GTKOZEMBED BUG BY WHISE################
 myfile = 'WebappScreenlet.py'
-mypath = sys.argv[0][:sys.argv[0].find('myfile')].strip()
 
-if sys.argv[0].endswith(myfile): # Makes Shure its not the manager running...
-		# First workarround
-		c = None
-		workarround = "python "+ sys.argv[0] + " &"
-		a = str(commands.getoutput('whereis firefox')).replace('firefox: ','').split(' ')
-		for b in a:
-			if os.path.isfile(b + '/run-mozilla.sh'):
-				c = b + '/run-mozilla.sh'
-				workarround = c + " " + sys.argv[0] + " &"
-
-		if c == None:
-			# Second workarround
-			print 'First workarround didnt work let run a second manual workarround'
-			if str(sensors.sys_get_distrib_name()).lower().find('ubuntu') != -1: # Works for ubuntu 32
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/firefox \n export MOZILLA_FIVE_HOME=/usr/lib/firefox \n python "+ sys.argv[0] + " &"
-			elif str(sensors.sys_get_distrib_name()).lower().find('debian') != -1: # Works for debian 32 with iceweasel installed
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/iceweasel \n export MOZILLA_FIVE_HOME=/usr/lib/iceweasel \n python " + sys.argv[0] + " &"
-			elif str(sensors.sys_get_distrib_name()).lower().find('suse') != -1: # Works for suse 32 with seamonkey installed
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/seamonkey \n export MOZILLA_FIVE_HOME=/usr/lib/seamonkey \n python "+ sys.argv[0] + " &"
-				print 'Your running suse , make shure you have seamonkey installed'
-			elif str(sensors.sys_get_distrib_name()).lower().find('fedora') != -1: # Works for fedora 32 with seamonkey installed
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/seamonkey \n export MOZILLA_FIVE_HOME=/usr/lib/seamonkey \n python "+ sys.argv[0] + " &"
-				print 'Your running fedora , make shure you have seamonkey installed'
-
-
-		if os.path.isfile("/tmp/"+ myfile+"running"):
-			os.system("rm -f " + "/tmp/"+ myfile+"running")
-		
-		else:
-			if workarround == "python "+ sys.argv[0] + " &":
-				print 'No workarround will be applied to your sistem , this screenlet will probably not work properly'			
-			os.system (workarround)
-			fileObj = open("/tmp/"+ myfile+"running","w") #// open for for write
-			fileObj.write('gtkmozembed bug workarround')
-		
-			fileObj.close()
-			sys.exit()
-
-
-else:
-	pass
 try:
-	import gtkmozembed
+	import webkit
 except:
-	if sys.argv[0].endswith(myfile):screenlets.show_error(None,"You need Gtkmozembed to run this Screenlet , please install it")
-	else: print "You need Gtkmozembed to run this Screenlet , please install it"
-#########WORKARROUND FOR GTKOZEMBED BUG BY WHISE################
-
-
+	if sys.argv[0].endswith(myfile):screenlets.show_error(None,"You need WebKit to run this Screenlet , please install it")
+	else: print "You need WebKit to run this Screenlet , please install it"
 
 class WebappScreenlet (screenlets.Screenlet):
 	"""Brings Web applications to your desktop"""
@@ -93,21 +47,16 @@ class WebappScreenlet (screenlets.Screen
 		screenlets.Screenlet.__init__(self, width=325, height=370,uses_theme=True, 
 			is_widget=False, is_sticky=True,draw_buttons=False, **keyword_args)
 
-		if hasattr(gtkmozembed, 'set_profile_path'):
-			gtkmozembed.set_profile_path(self.mypath,'mozilla')
-		else:
-			gtkmozembed.gtk_moz_embed_set_profile_path(self.mypath ,'mozilla')
-
-		self.moz = gtkmozembed.MozEmbed()
+		self.view = webkit.WebView()
 		self.win = gtk.Window()
 
 		#self.win.maximize()
-		self.win.add(self.moz)
+		self.win.add(self.view)
 
-		self.moz.load_url(self.url)
+		self.view.load_uri(self.url)
 		self.win.connect('destroy',self.quitall)
 		self.win.connect("configure-event", self.configure)
-		self.moz.connect("title",self.update)		
+		self.view.connect("notify::title",self.update)		
 
 				
 	def configure (self, widget, event):
@@ -133,7 +82,7 @@ class WebappScreenlet (screenlets.Screen
 
 	def update(self,widget):
 		
-		title = self.moz.get_title()
+		title = self.view.get_title()
 		self.win.set_title(title)
 	def quitall(self,widget):
 		if len(self.session.instances) > 1:
--- a/setup.py
+++ b/setup.py
@@ -81,7 +81,6 @@ files_list.insert(0, ('share/screenlets-
 	'src/share/screenlets-manager/KarambaScreenlet.py',
 	'src/share/screenlets-manager/widget.png',
 	'src/share/screenlets-manager/WidgetScreenlet.py',
-	'src/share/screenlets-manager/prefs.js',
 	'src/share/screenlets-manager/webapp.png',
 	'src/share/screenlets-manager/WebappScreenlet.py',
 	'src/share/screenlets-manager/karamba.png']))
--- a/src/share/screenlets-manager/WidgetScreenlet.py
+++ b/src/share/screenlets-manager/WidgetScreenlet.py
@@ -22,60 +22,14 @@ import sys
 import os
 from screenlets import sensors
 
-
-
-#########WORKARROUND FOR GTKOZEMBED BUG BY WHISE################
 myfile = 'WidgetScreenlet.py'
-mypath = sys.argv[0][:sys.argv[0].find(myfile)].strip()
-
-if sys.argv[0].endswith(myfile): # Makes Shure its not the manager running...
-		# First workarround
-		c = None
-		workarround =  "python "+ sys.argv[0] + " &"
-		a = str(commands.getoutput('whereis firefox')).replace('firefox: ','').split(' ')
-		for b in a:
-			if os.path.isfile(b + '/run-mozilla.sh'):
-				c = b + '/run-mozilla.sh'
-				workarround = c + " " + sys.argv[0] + " &"
-
-
-		if c == None:
-			# Second workarround
-			print 'First workarround didnt work let run a second manual workarround'
-			if str(sensors.sys_get_distrib_name()).lower().find('ubuntu') != -1: # Works for ubuntu 32
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/firefox \n export MOZILLA_FIVE_HOME=/usr/lib/firefox \n python "+ sys.argv[0] + " &"
-			elif str(sensors.sys_get_distrib_name()).lower().find('debian') != -1: # Works for debian 32 with iceweasel installed
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/iceweasel \n export MOZILLA_FIVE_HOME=/usr/lib/iceweasel \n python " + sys.argv[0] + " &"
-			elif str(sensors.sys_get_distrib_name()).lower().find('suse') != -1: # Works for suse 32 with seamonkey installed
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/seamonkey \n export MOZILLA_FIVE_HOME=/usr/lib/seamonkey \n python "+ sys.argv[0] + " &"
-				print 'Your running suse , make shure you have seamonkey installed'
-			elif str(sensors.sys_get_distrib_name()).lower().find('fedora') != -1: # Works for fedora 32 with seamonkey installed
-				workarround = "export LD_LIBRARY_PATH=/usr/lib/seamonkey \n export MOZILLA_FIVE_HOME=/usr/lib/seamonkey \n python "+ sys.argv[0] + " &"
-				print 'Your running fedora , make shure you have seamonkey installed'
 
-
-		if os.path.isfile("/tmp/"+ myfile+"running"):
-			os.system("rm -f " + "/tmp/"+ myfile+"running")
-		
-		else:
-			if workarround == "python "+ sys.argv[0] + " &":
-				print 'No workarround will be applied to your sistem , this screenlet will probably not work properly'
-			os.system (workarround)
-			fileObj = open("/tmp/"+ myfile+"running","w") #// open for for write
-			fileObj.write('gtkmozembed bug workarround')
-		
-			fileObj.close()
-			sys.exit()
-
-
-else:
-	pass
 try:
-	import gtkmozembed
+	import webkit
 except:
-	if sys.argv[0].endswith(myfile):screenlets.show_error(None,"You need Gtkmozembed to run this Screenlet , please install it")
-	else: print "You need Gtkmozembed to run this Screenlet , please install it"
-#########WORKARROUND FOR GTKOZEMBED BUG BY WHISE################
+	if sys.argv[0].endswith(myfile):screenlets.show_error(None,"You need WebKit to run this Screenlet , please install it")
+	else: print "You need WebKit to run this Screenlet , please install it"
+
 #Check for internet connection required for web widgets
 
 if sys.argv[0].endswith(myfile):# Makes Shure its not the manager running...
@@ -97,7 +51,7 @@ class WidgetScreenlet (screenlets.Screen
 	__desc__		= __doc__
 
 	started = False
-	moz = None
+	view = None
 	box = None
 	mypath = sys.argv[0][:sys.argv[0].find('WidgetScreenlet.py')].strip()
 	url = mypath + 'index.html'
@@ -130,12 +84,8 @@ class WidgetScreenlet (screenlets.Screen
 		self.disable_option('scale')
 		self.theme_name = 'default'
 		self.box = gtk.VBox(False, 0)
-		if hasattr(gtkmozembed, 'set_profile_path'):
-			gtkmozembed.set_profile_path(self.mypath,'mozilla')
-		else:
-			gtkmozembed.gtk_moz_embed_set_profile_path(self.mypath ,'mozilla')
-		self.moz = gtkmozembed.MozEmbed()
-    		self.box.pack_start(self.moz, False, False, 0)
+		self.view = webkit.WebView()
+    		self.box.pack_start(self.view, False, False, 0)
 
 		self.window.add(self.box)		
 			
@@ -202,7 +152,7 @@ class WidgetScreenlet (screenlets.Screen
 					#ctx.translate(0,10)
 					self.draw_scaled_image(ctx,0,0,self.width,self.height,self.mypath + 'icon.png')
 
-				self.moz.shape_combine_mask(self.bgpbms,0,0)	
+				self.view.shape_combine_mask(self.bgpbms,0,0)	
 			else:
 				self.bgpb = gtk.gdk.pixbuf_new_from_file(self.mypath + 'icon.png').scale_simple(int(self.widget_width),int(self.widget_height),gtk.gdk.INTERP_HYPER)
 				self.bgpbim, self.bgpbms = self.bgpb.render_pixmap_and_mask(alpha_threshold=128)
@@ -211,7 +161,7 @@ class WidgetScreenlet (screenlets.Screen
 					ctx.translate(0,10)
 					self.draw_image(ctx,0,0,self.mypath + 'icon.png')
 
-				self.moz.shape_combine_mask(self.bgpbms,8,8)	
+				self.view.shape_combine_mask(self.bgpbms,8,8)	
  	
 
 
@@ -276,7 +226,7 @@ class WidgetScreenlet (screenlets.Screen
 			self.url = self.widget_info[13:][:(len(self.widget_info)-24)]
 			
 			self.engine = 'google'
-		self.moz.load_url(self.url)
+		self.view.load_uri(self.url)
 		print 'loading ' + self.url
 		
 		self.width = int(self.widget_width)+30
@@ -291,9 +241,9 @@ class WidgetScreenlet (screenlets.Screen
 
 			self.box.set_uposition(-1,7)
 		
-			self.moz.set_size_request(-1,int(self.widget_height))
+			self.view.set_size_request(-1,int(self.widget_height))
 		else:
-			self.moz.set_size_request(-1,int(self.height))
+			self.view.set_size_request(-1,int(self.height))
 		self.redraw_canvas()
 
 	def on_mouse_down(self,event):
--- a/src/share/screenlets-manager/screenlets-manager.py
+++ b/src/share/screenlets-manager/screenlets-manager.py
@@ -1058,7 +1058,6 @@ class ScreenletsManager(object):
 						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/WebappScreenlet.py ' +DIR_USER + '/' + a + '/' + a + 'Screenlet.py')
 						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/webapp.png ' +DIR_USER + '/' + a + '/icon.png')				
 						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/webapp.png ' +DIR_USER + '/' + a + '/themes/default')
-						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/prefs.js ' +DIR_USER + '/' + a + '/mozilla')			
 		
 						enginecopy = open(DIR_USER + '/' + a + '/' + a + 'Screenlet.py','r')
 						enginesave = enginecopy.read()
@@ -1145,7 +1144,6 @@ class ScreenletsManager(object):
 						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/WidgetScreenlet.py ' +DIR_USER + '/' + a + '/' + a + 'Screenlet.py')
 						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/widget.png ' +DIR_USER + '/' + a + '/icon.png')				
 						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/widget.png ' +DIR_USER + '/' + a + '/themes/default')
-						os.system('cp ' + screenlets.INSTALL_PREFIX + '/share/screenlets-manager/prefs.js ' +DIR_USER + '/' + a + '/mozilla')			
 						enginecopy = open(DIR_USER + '/' + a + '/' + a + 'Screenlet.py','r')
 						enginesave = enginecopy.read()
 						enginesave = enginesave.replace('WidgetScreenlet',a + 'Screenlet')
