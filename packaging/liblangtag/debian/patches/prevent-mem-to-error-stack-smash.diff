commit bd6c35fe27f94abb9b0ef9d72f8a860cad771212
Author: Bjoern Michaelsen <bjoern.michaelsen@canonical.com>
Date:   Wed Apr 3 01:51:46 2013 +0200

    calling the generic error reporting from memory management is a hazard
    
    - the error reporting is pluggable with function pointers doing all kinds of
      funky stuff (including calling back into memory mngmt.)
    - this introduces a high risk of stack smashing circular calls
    - better silently return here

diff --git a/liblangtag/lt-mem.c b/liblangtag/lt-mem.c
index 94271dd..23234cd 100644
--- a/liblangtag/lt-mem.c
+++ b/liblangtag/lt-mem.c
@@ -212,9 +212,9 @@ lt_mem_add_ref(lt_mem_t          *object,
 	       lt_pointer_t       p,
 	       lt_destroy_func_t  func)
 {
-	lt_return_if_fail (object != NULL);
-	lt_return_if_fail (p != NULL);
-	lt_return_if_fail (func != NULL);
+	if(!object) return;
+	if(!p) return;
+	if(!func) return;
 
 	object->refs = lt_mem_slist_append(object->refs, p, func);
 }
