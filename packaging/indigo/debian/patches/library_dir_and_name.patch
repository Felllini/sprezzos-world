--- indigo-1.0.0.orig/api/python/indigo.py
+++ indigo-1.0.0/api/python/indigo.py
@@ -125,14 +125,8 @@ class Indigo:
     
     if os.name == 'posix' and not platform.mac_ver()[0]:
       arch = platform.architecture()[0]
-      path += "/Linux"
-      if arch == '32bit':
-        path += "/x86"
-      elif arch == '64bit':
-        path += "/x64"
-      else:
-        raise IndigoException("unknown platform " + arch)
-      Indigo._lib = CDLL(path + "/libindigo.so", mode=RTLD_GLOBAL)
+      path = "/usr/lib"
+      Indigo._lib = CDLL(path + "/libindigo.so.0d", mode=RTLD_GLOBAL)
     elif os.name == 'nt':
       arch = platform.architecture()[0]
       path += "/Win"
--- indigo-1.0.0.orig/api/renderer/python/indigo_renderer.py
+++ indigo-1.0.0/api/renderer/python/indigo_renderer.py
@@ -20,7 +20,7 @@ class IndigoRenderer:
     self.indigo = indigo
 
     if os.name == 'posix' and not platform.mac_ver()[0]:
-      self._lib = CDLL(indigo.dllpath + "/libindigo-renderer.so")
+      self._lib = CDLL(indigo.dllpath + "/libindigo-renderer.so.0d")
     elif os.name == 'nt':
       self._lib = CDLL(indigo.dllpath + "\indigo-renderer.dll")
     elif platform.mac_ver()[0]:
--- indigo-1.0.0.orig/api/renderer/java/src/com/ggasoftware/indigo/IndigoRenderer.java
+++ indigo-1.0.0/api/renderer/java/src/com/ggasoftware/indigo/IndigoRenderer.java
@@ -92,7 +92,7 @@ public class IndigoRenderer
       int os = Indigo.getOs();
 
       if (os == Indigo.OS_LINUX || os == Indigo.OS_SOLARIS)
-         _lib = (IndigoRendererLib)Native.loadLibrary(getPathToBinary(path, "libindigo-renderer.so"), IndigoRendererLib.class);
+         _lib = (IndigoRendererLib)Native.loadLibrary(getPathToBinary(path, "libindigo-renderer.so.0d"), IndigoRendererLib.class);
       else if (os == Indigo.OS_MACOS)
          _lib = (IndigoRendererLib)Native.loadLibrary(getPathToBinary(path, "libindigo-renderer.dylib"), IndigoRendererLib.class);
       else // os == OS_WINDOWS
--- indigo-1.0.0.orig/api/java/src/com/ggasoftware/indigo/Indigo.java
+++ indigo-1.0.0/api/java/src/com/ggasoftware/indigo/Indigo.java
@@ -641,7 +641,7 @@ public class Indigo
          return;
 
       if (_os == OS_LINUX || _os == OS_SOLARIS)
-         _lib = (IndigoLib)Native.loadLibrary(getPathToBinary(path, "libindigo.so"), IndigoLib.class);
+         _lib = (IndigoLib)Native.loadLibrary(getPathToBinary(path, "libindigo.so.0d"), IndigoLib.class);
       else if (_os == OS_MACOS)
          _lib = (IndigoLib)Native.loadLibrary(getPathToBinary(path, "libindigo.dylib"), IndigoLib.class);
       else // _os == OS_WINDOWS
@@ -765,13 +765,7 @@ public class Indigo
       }
       else
       {
-          String archstr = System.getProperty("os.arch");
-          if (archstr.equals("x86") || archstr.equals("i386"))
-               path += "x86";
-          else if (archstr.equals("x86_64") || archstr.equals("amd64"))
-               path += "x64";
-          else
-              throw new Error("architecture not recognized");
+          path = "/usr/lib";
       }
 
       return path;
