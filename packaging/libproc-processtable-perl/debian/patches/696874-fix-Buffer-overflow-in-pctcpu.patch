Description: Fix for buffer overflow in pctcpu
 On systems with more than 9 logical CPUs, a process can use more than 999% of
 CPU and overflow pctcpu. This patch increases the buffer so that it will work
 for up to 9999 logical CPUs.
Bug: https://rt.cpan.org/Public/Bug/Display.html?id=82175
Bug-Debian: http://bugs.debian.org/696874
Bug-Ubuntu: https://launchpad.net/bugs/1093289
Forwarded: not-needed
Author: Matthew L. Dailey <matthew.l.dailey@dartmouth.edu>
Reviewed-by: Salvatore Bonaccorso <carnil@debian.org>
Last-Update: 2012-12-23

--- libproc-processtable-perl-0.45.orig/os/Linux.h
+++ libproc-processtable-perl-0.45/os/Linux.h
@@ -42,7 +42,7 @@ struct procstat
 	char			*cmndline;
 	char			*exec;
 	/* other values */
-	char			pctcpu[sizeof("100.00")];	/* precent cpu, without '%' char */
+	char			pctcpu[sizeof("100000.00")];	/* precent cpu, without '%' char */
 	char			pctmem[sizeof("100.00")];	/* precent memory, without '%' char */
 };
 
--- libproc-processtable-perl-0.45.orig/os/Linux.c
+++ libproc-processtable-perl-0.45/os/Linux.c
@@ -551,7 +551,7 @@ static void calc_prec(char *format_str,
     float pctcpu = 100.0f * (prs->utime / 1e6) / (time(NULL) - prs->start_time);
 
     /* calculate pctcpu - NOTE: This assumes the cpu time is in microsecond units! */
-    sprintf(prs->pctcpu, "%3.2f", pctcpu);
+    sprintf(prs->pctcpu, "%6.2f", pctcpu);
     field_enable(format_str, F_PCTCPU);
 
     /* calculate pctmem */
