Index: indiv-screenlets-0.1.6/src/Googlemaps/GooglemapsScreenlet.py
===================================================================
--- indiv-screenlets-0.1.6.orig/src/Googlemaps/GooglemapsScreenlet.py	2012-01-27 22:51:45.000000000 +0100
+++ indiv-screenlets-0.1.6/src/Googlemaps/GooglemapsScreenlet.py	2012-02-12 23:26:14.000000000 +0100
@@ -29,28 +29,10 @@
 import os
 
 
-#########WORKARROUND FOR GTKOZEMBED BUG################
-
-if sys.argv[0].endswith('GooglemapsScreenlet.py'):
-
-	if commands.getoutput("lsb_release -is") == 'Ubuntu':
-		mypath = sys.argv[0][:sys.argv[0].find('GooglemapsScreenlet.py')].strip()
-		if os.path.isfile(mypath + "running"):
-			os.system("rm -f " + mypath + "running")
-		
-		else:
-			os.system ("export LD_LIBRARY_PATH=/usr/lib/firefox \n export MOZILLA_FIVE_HOME=/usr/lib/firefox \n python "+ sys.argv[0] + " &")
-			fileObj = open(mypath + "running","w") #// open for for write
-			fileObj.write('gtkmozembed bug workarround')
-		
-			fileObj.close()
-			exit()
-else:
-	pass
 try:
-	import gtkmozembed
+	import webkit
 except:
-	print 'You dont have gtkmozembed , please install python gnome extras'
+	print 'You dont have WebKit , please install python-webkit'
 	
 #use gettext for translation
 import gettext
@@ -77,7 +59,7 @@
 	fh1 = None
 	fh2 = None
 	gameswf = 'arkanoid.swf'
-	moz = None
+	view = None
 	box = gtk.VBox(False, 0)
 	mypath = sys.argv[0][:sys.argv[0].find('GooglemapsScreenlet.py')].strip()
 
@@ -109,16 +91,16 @@
 			# create evntbox
 		
 			self.box.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
-			self.moz = gtkmozembed.MozEmbed()
-			self.moz.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
+			self.view = webkit.WebView()
+			self.view.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
 		
-			self.moz.load_url(str(self.url))
+			self.view.load_uri(str(self.url))
 		
 		# add/show all inputs
 		
 	
 
-    			self.box.pack_start(self.moz, False, False, 0)
+    			self.box.pack_start(self.view, False, False, 0)
 			self.box.set_uposition(1,46)
 			self.window.add(self.box)		
 		
@@ -144,7 +126,7 @@
 
 		
 		if y >= 48 and y <= 60 and x >= 71 and x <= 247:
-			self.moz.load_url(str(self.url))
+			self.view.load_uri(str(self.url))
 
 
 		self.redraw_canvas()
@@ -156,7 +138,7 @@
 		if self.window:
 			self.box.set_border_width(int(15*self.scale))
 			self.box.set_uposition(int(1*self.scale),int(46*self.scale+(self.scale*5)))
-			self.moz.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
+			self.view.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
 		self.fh = open(str(self.mypath)+'geomap.html', 'r')
 		self.fh1 = self.fh.read()
 		self.fh.close()
@@ -166,7 +148,7 @@
 		fh2.write(self.fh1)
 		fh2.close()
 		self.url = str(self.mypath)+'gtoload.html'
-		self.moz.load_url(str(self.url))
+		self.view.load_uri(str(self.url))
 	def on_draw_shape (self, ctx):
 		ctx.scale(self.scale, self.scale)
 		ctx.set_source_rgba(0, 0, 0, 1)
Index: indiv-screenlets-0.1.6/src/Youtube/YoutubeScreenlet.py
===================================================================
--- indiv-screenlets-0.1.6.orig/src/Youtube/YoutubeScreenlet.py	2012-01-27 22:51:45.000000000 +0100
+++ indiv-screenlets-0.1.6/src/Youtube/YoutubeScreenlet.py	2012-02-12 23:26:14.000000000 +0100
@@ -32,58 +32,15 @@
 
 
 
-#########workaround FOR GTKOZEMBED BUG BY WHISE################
 myfile = 'YoutubeScreenlet.py'
 mypath = sys.argv[0][:sys.argv[0].find(myfile)].strip()
 
-if sys.argv[0].endswith(myfile): # Makes Shure its not the manager running...
-		# First workaround
-		c = None
-		workaround =  "python "+ sys.argv[0] + " &"
-		a = str(commands.getoutput('whereis firefox')).replace('firefox: ','').split(' ')
-		for b in a:
-			if os.path.isfile(b + '/run-mozilla.sh'):
-				c = b + '/run-mozilla.sh'
-				workaround = c + " " + sys.argv[0] + " &"
-
-
-		if c == None:
-			# Second workaround
-			print 'First workaround didnt work let run a second manual workaround'
-			if str(sensors.sys_get_distrib_name()).lower().find('ubuntu') != -1: # Works for ubuntu 32
-				workaround = "export LD_LIBRARY_PATH=/usr/lib/firefox \n export MOZILLA_FIVE_HOME=/usr/lib/firefox \n python "+ sys.argv[0] + " &"
-			elif str(sensors.sys_get_distrib_name()).lower().find('debian') != -1: # Works for debian 32 with iceweasel installed
-				workaround = "export LD_LIBRARY_PATH=/usr/lib/iceweasel \n export MOZILLA_FIVE_HOME=/usr/lib/iceweasel \n python " + sys.argv[0] + " &"
-			elif str(sensors.sys_get_distrib_name()).lower().find('suse') != -1: # Works for suse 32 with seamonkey installed
-				workaround = "export LD_LIBRARY_PATH=/usr/lib/seamonkey \n export MOZILLA_FIVE_HOME=/usr/lib/seamonkey \n python "+ sys.argv[0] + " &"
-				print 'Your running suse , make shure you have seamonkey installed'
-			elif str(sensors.sys_get_distrib_name()).lower().find('fedora') != -1: # Works for fedora 32 with seamonkey installed
-				workaround = "export LD_LIBRARY_PATH=/usr/lib/seamonkey \n export MOZILLA_FIVE_HOME=/usr/lib/seamonkey \n python "+ sys.argv[0] + " &"
-				print 'Your running fedora , make shure you have seamonkey installed'
-
-
-		if os.path.isfile("/tmp/"+ myfile+"running"):
-			os.system("rm -f " + "/tmp/"+ myfile+"running")
-		
-		else:
-			if workaround == "python "+ sys.argv[0] + " &":
-				print 'No workaround will be applied to your sistem , this screenlet will probably not work properly'
-			os.system (workaround)
-			fileObj = open("/tmp/"+ myfile+"running","w") #// open for for write
-			fileObj.write('gtkmozembed bug workaround')
-		
-			fileObj.close()
-			sys.exit()
-
-
-else:
-	pass
 try:
-	import gtkmozembed
+	import webkit
 except:
-	if sys.argv[0].endswith(myfile):screenlets.show_error(None,_("You need Gtkmozembed to run this Screenlet , please install it"))
-	else: print "You need Gtkmozembed to run this Screenlet , please install it"
-#########workaround FOR GTKOZEMBED BUG BY WHISE################
+	if sys.argv[0].endswith(myfile):screenlets.show_error(None,_("You need WebKit to run this Screenlet , please install it"))
+	else: print "You need WebKit to run this Screenlet , please install it"
+
 #Check for internet connection required for web widgets
 
 if sys.argv[0].endswith(myfile):# Makes Shure its not the manager running...
@@ -116,7 +73,7 @@
 	__desc__		= __doc__
 
 	started = False
-	moz = None
+	view = None
 	box = None
 	mypath = sys.argv[0][:sys.argv[0].find('YoutubeScreenlet.py')].strip()
 	url = mypath + 'index.html'
@@ -149,12 +106,8 @@
 		self.disable_option('scale')
 		self.theme_name = 'default'
 		self.box = gtk.VBox(False, 0)
-		if hasattr(gtkmozembed, 'set_profile_path'):
-			gtkmozembed.set_profile_path(self.mypath,'mozilla')
-		else:
-			gtkmozembed.gtk_moz_embed_set_profile_path(self.mypath ,'mozilla')
-		self.moz = gtkmozembed.MozEmbed()
-    		self.box.pack_start(self.moz, False, False, 0)
+		self.view = webkit.WebView()
+    		self.box.pack_start(self.view, False, False, 0)
 
 		self.window.add(self.box)		
 			
@@ -221,7 +174,7 @@
 					#ctx.translate(0,10)
 					self.theme.draw_scaled_image(ctx,0,0,self.width,self.height,self.mypath + 'icon.svg')
 
-				self.moz.shape_combine_mask(self.bgpbms,0,0)	
+				self.view.shape_combine_mask(self.bgpbms,0,0)	
 			else:
 				self.bgpb = gtk.gdk.pixbuf_new_from_file(self.mypath + 'icon.svg').scale_simple(int(self.widget_width),int(self.widget_height),gtk.gdk.INTERP_HYPER)
 				self.bgpbim, self.bgpbms = self.bgpb.render_pixmap_and_mask(alpha_threshold=128)
@@ -230,7 +183,7 @@
 					ctx.translate(0,10)
 					self.theme.draw_image(ctx,0,0,self.mypath + 'icon.svg')
 
-				self.moz.shape_combine_mask(self.bgpbms,8,8)	
+				self.view.shape_combine_mask(self.bgpbms,8,8)	
  	
 
 
@@ -295,7 +248,7 @@
 			self.url = self.widget_info[13:][:(len(self.widget_info)-24)]
 			
 			self.engine = 'google'
-		self.moz.load_url(self.url)
+		self.view.load_uri(self.url)
 		print 'loading ' + self.url
 		
 		self.width = int(self.widget_width)+30
@@ -310,9 +263,9 @@
 
 			self.box.set_uposition(-1,7)
 		
-			self.moz.set_size_request(-1,int(self.widget_height))
+			self.view.set_size_request(-1,int(self.widget_height))
 		else:
-			self.moz.set_size_request(-1,int(self.height))
+			self.view.set_size_request(-1,int(self.height))
 		self.redraw_canvas()
 
 	def on_mouse_down(self,event):
Index: indiv-screenlets-0.1.6/src/OSM/OSMScreenlet.py
===================================================================
--- indiv-screenlets-0.1.6.orig/src/OSM/OSMScreenlet.py	2012-01-27 22:51:45.000000000 +0100
+++ indiv-screenlets-0.1.6/src/OSM/OSMScreenlet.py	2012-02-12 23:26:14.000000000 +0100
@@ -30,28 +30,10 @@
 import os
 
 
-#########WORKARROUND FOR GTKOZEMBED BUG################
-
-if sys.argv[0].endswith('OSMScreenlet.py'):
-
-	if commands.getoutput("lsb_release -is") == 'Ubuntu':
-		mypath = sys.argv[0][:sys.argv[0].find('OSMScreenlet.py')].strip()
-		if os.path.isfile(mypath + "running"):
-			os.system("rm -f " + mypath + "running")
-
-		else:
-			os.system ("export LD_LIBRARY_PATH=/usr/lib/firefox \n export MOZILLA_FIVE_HOME=/usr/lib/firefox \n python "+ sys.argv[0] + " &")
-			fileObj = open(mypath + "running","w") #// open for for write
-			fileObj.write('gtkmozembed bug workarround')
-
-			fileObj.close()
-			exit()
-else:
-	pass
 try:
-	import gtkmozembed
+	import webkit
 except:
-	print 'You dont have gtkmozembed , please install python gnome extras'
+	print 'You dont have WebKit , please install python-webkit'
 	
 #use gettext for translation
 import gettext
@@ -110,10 +92,10 @@
 			# create evntbox
 
 			self.box.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
-			self.moz = gtkmozembed.MozEmbed()
+			self.moz = webkit.WebView()
 			self.moz.set_size_request(int(1*self.scale),int((self.height-77)*(self.scale)-(self.scale*5)))
 
-			self.moz.load_url(str(self.url))
+			self.moz.load_uri(str(self.url))
 
 		# add/show all inputs
 
@@ -145,7 +127,7 @@
 
 
 		if y >= 48 and y <= 60 and x >= 71 and x <= 247:
-			self.moz.load_url(str(self.url))
+			self.moz.load_uri(str(self.url))
 
 
 		self.redraw_canvas()
@@ -167,7 +149,7 @@
 		fh2.write(self.fh1)
 		fh2.close()
 		self.url = str(self.mypath)+'gtoload.html'
-		self.moz.load_url(str(self.url))
+		self.moz.load_uri(str(self.url))
 	def on_draw_shape (self, ctx):
 		ctx.scale(self.scale, self.scale)
 		ctx.set_source_rgba(0, 0, 0, 1)
