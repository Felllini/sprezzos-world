diff -ruN console-tools-0.2.3-old/vttools/vcstime.c console-tools-0.2.3/vttools/vcstime.c
--- console-tools-0.2.3-old/vttools/vcstime.c	1999-04-08 23:11:15.000000000 +0100
+++ console-tools-0.2.3/vttools/vcstime.c	2003-02-26 16:23:36.000000000 +0000
@@ -7,6 +7,8 @@
 #include <fcntl.h>
 #include <stdio.h>
 #include <unistd.h>
+#include <string.h>
+#include <getopt.h>
 
 #if TM_IN_SYS_TIME
 # include <sys/time.h>
@@ -23,6 +25,10 @@
 	   "Show time in upper right hand corner of the console screen\n"), progname);
   OPTIONS_ARE();
 
+  
+  OPT("-r --row          ", _("What row? (counting from top)"));
+  OPT("-1 --dev_1        ", _("Device 1"));
+  OPT("-2 --dev_2        ", _("Device 2"));
   OPT("-h --help         ", HELPDESC);
   OPT("-V --version      ", VERSIONDESC);
 }
@@ -34,14 +40,14 @@
 }
 
 unsigned char
-number_of_columns() {
+number_of_columns(char *dev) {
     int fda;
     unsigned char rc[2];
 
-    if((fda = open("/dev/vcsa", O_RDONLY)) < 0)
-	fatal("/dev/vcsa");
+    if((fda = open(dev, O_RDONLY)) < 0)
+	fatal(dev);
     if(read(fda, rc, 2) != 2)
-	fatal("/dev/vcsa");
+	fatal(dev);
     close(fda);
     return rc[1];
 }
@@ -50,20 +56,59 @@
 main(int argc, char **argv)
 {
     int fd;
-    int cols = number_of_columns();
+    int cols , row = 1;
     time_t tid;
     struct tm *t;
     char tijd[10];
+    char *dev_1 = NULL, *dev_2 = NULL;
+    const struct option long_opts[] = {
+         { "row",    1,              NULL,   'r'     },
+         { "dev_1",  1,              NULL,   '1'     },
+         { "dev_2",  1,              NULL,   '2'     },
+         { "help",   no_argument,    NULL,   'h'     },
+         { "version",no_argument,    NULL,   'V'     },
+         { NULL,     0,              NULL,   0       }
+       };
+    char *progname = strip_path(argv[0]);
+    int c;
 
     setuplocale();
-  
-    simple_options (argc, argv, usage, strip_path(argv[0]));
-
-    if((fd = open("/dev/vcs", O_WRONLY)) < 0)
-	fatal("/dev/vcs");
+    while ((c = getopt_long(argc, argv, "Vh1:2:r:", long_opts, NULL)) != EOF) {
+                 switch (c) {
+               case 'h':
+                   usage(progname);
+                   exit(0);
+               case 'V':
+                   version(progname);
+                   exit(0);
+               case 'r':
+                   row = atoi(optarg);
+                   break;
+               case '1':
+                   dev_1 = strdup(optarg);
+                   break;
+               case '2':
+                   dev_2 = strdup(optarg);
+                   break;
+               default:
+                   usage(progname);
+                   exit(1);
+           }
+       }
+
+
+    if (!dev_1) dev_1 = strdup("/dev/vcs");
+    if (!dev_2) dev_2 = strdup("/dev/vcsa");
+
+    cols = number_of_columns(dev_2);
+    printf("dev_1: '%s', dev_2: '%s', cols: '%d', row: '%d'\n",
+           dev_1, dev_2, cols, row);
+    if((fd = open(dev_1, O_WRONLY)) < 0)
+       fatal(dev_1);
+                                                                                
 
     while(1) {
-	lseek(fd, cols-10, 0);
+	lseek(fd, (cols*row) -10, 0);
 	tid = time(0);
 	t = localtime(&tid);
 	sprintf(tijd, " %02d:%02d:%02d", t->tm_hour, t->tm_min, t->tm_sec);
