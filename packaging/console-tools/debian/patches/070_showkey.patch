diff -ruN console-tools-0.2.3-old/kbdtools/showkey.c console-tools-0.2.3/kbdtools/showkey.c
--- console-tools-0.2.3-old/kbdtools/showkey.c	2003-11-16 19:46:03.000000000 +0000
+++ console-tools-0.2.3/kbdtools/showkey.c	2003-11-16 20:24:07.000000000 +0000
@@ -9,10 +9,11 @@
 #include <linux/kd.h>
 #include <linux/keyboard.h>
 #include <sys/ioctl.h>
-
+#include <sys/stat.h>
 #include <lct/local.h>
 #include <lct/utils.h>
 #include <lct/console.h>
+#include <sys/sysmacros.h>
 
 int fd;
 int oldkbmode;
@@ -47,11 +48,8 @@
       m = _("?UNKNOWN?"); break;
     }
   printf(_("kb mode was %s\n"), m);
-  if (oldkbmode != K_XLATE)
-    {
-      printf(_("[ if you are trying this under X, it might not work\n"));
-      printf(_("since the X server is also reading /dev/console ]\n"));
-    }
+  
+  
   printf("\n");
 }
 
@@ -94,6 +92,25 @@
   OPT("-t --timeout=N  ", _("set the timeout to N seconds."));
 }
 
+/* Warn if we are a pseudoterminal, as the keycodes will be 
+ * mangled before we get them...
+ */
+void warn_pseudoterms()
+{
+	struct stat buf;
+	if (stat ("/proc/self/fd/0", &buf)) {
+		// Can't read device?
+		return;
+	}
+	if (!S_ISCHR(buf.st_mode)) {
+		return; // Another error
+	}
+	if (major (buf.st_rdev) == 136) {
+		printf (_("(Warnning: Currently running in a pseudoterminal.\n"));
+		printf (_("The reported keycodes are probably wrong.\n\n"));
+	}
+}
+
 int
 main (int argc, char *argv[])
 {
@@ -212,6 +229,9 @@
   signal(SIGTTOU, die);
 
   get_mode();
+
+  warn_pseudoterms();
+
   if (tcgetattr(fd, &old) == -1)
     perror("tcgetattr = %d\n");
   if (tcgetattr(fd, &new) == -1)
