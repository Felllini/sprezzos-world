Description: rename mutex type to mutex_tp
Author: Jakub Wilk <jwilk@debian.org>
Bug-Debian: http://bugs.debian.org/665676
Forwarded: no
Last-Update: 2012-04-29

--- a/zfuncs.cc
+++ b/zfuncs.cc
@@ -449,7 +449,7 @@
 //  safely access parameters from multiple threads
 //  limitation: one lock for any number of parameters
 
-mutex zget_lock = PTHREAD_MUTEX_INITIALIZER;
+mutex_tp zget_lock = PTHREAD_MUTEX_INITIALIZER;
 
 int zget_locked(int &param)                                                //  lock and return parameter
 {
@@ -481,7 +481,7 @@
 //  Allow only one thread at a time through a function that is otherwise 
 //  not thread-safe. Function must call these functions at entry and exit.
 
-mutex gate_threads_mutex = PTHREAD_MUTEX_INITIALIZER;
+mutex_tp gate_threads_mutex = PTHREAD_MUTEX_INITIALIZER;
 
 void gate_threads_enter()
 {
@@ -7776,8 +7776,8 @@
    int      busythreads;
    int      stopthreads;
    char     *lockfiles[5];
-   mutex    filelock = PTHREAD_MUTEX_INITIALIZER;
-   mutex    thumblock = PTHREAD_MUTEX_INITIALIZER;
+   mutex_tp filelock = PTHREAD_MUTEX_INITIALIZER;
+   mutex_tp thumblock = PTHREAD_MUTEX_INITIALIZER;
 }
 
 
--- a/fotoxx.h
+++ b/fotoxx.h
@@ -212,7 +212,7 @@
 EX int         E9ww, E9hh;                                                 //  scratch image dimensions
 EX int         Dww, Dhh;                                                   //  drawing window size
 
-EX mutex       Fpixmap_lock;                                               //  lock for accessing PXM pixmaps
+EX mutex_tp    Fpixmap_lock;                                               //  lock for accessing PXM pixmaps
 
 EX int         Frefresh;                                                   //  full image refresh needed
 EX double      Fzoom;                                                      //  image zoom scale (0 = fit window)
--- a/zfuncs.h
+++ b/zfuncs.h
@@ -53,7 +53,7 @@
 
 #define  wstrerror(err) strerror(WEXITSTATUS(err))                         //  get text status for child process
 
-#define  mutex          pthread_mutex_t                                    //  abbreviations
+#define  mutex_tp       pthread_mutex_t                                    //  abbreviations
 #define  mutex_init     pthread_mutex_init
 #define  mutex_lock     pthread_mutex_lock
 #define  mutex_trylock  pthread_mutex_trylock
@@ -536,7 +536,7 @@
 {
    char        wmi[8];
    Vxstring  * vd;                                                         //  vector of xstrings
-   mutex       qmutex;                                                     //  for multi-thread access
+   mutex_tp    qmutex;                                                     //  for multi-thread access
    int         qcap;                                                       //  queue capacity
    int         qcount;                                                     //  curr. queue count
    int         ent1;                                                       //  first entry pointer
