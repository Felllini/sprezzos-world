=== modified file 'src/lispbibl.d'
Index: clisp/src/lispbibl.d
===================================================================
--- clisp.orig/src/lispbibl.d	2011-07-13 00:28:05.000000000 +0200
+++ clisp/src/lispbibl.d	2011-07-13 00:28:10.000000000 +0200
@@ -2979,7 +2979,7 @@
 #endif
 
 
-#if (oint_addr_shift == 0) && (addr_shift == 0) && defined(TYPECODES) && !defined(WIDE_SOFT) && !(defined(AMD64) && defined(UNIX_LINUX))
+#if (oint_addr_shift == 0) && (addr_shift == 0) && defined(TYPECODES) && !defined(WIDE_SOFT) && !(defined(AMD64) && defined(UNIX_GNU))
 /* If the address bits are the lower ones and not WIDE_SOFT,
  memory mapping may be possible. */
 
Index: clisp/src/spvw.d
===================================================================
--- clisp.orig/src/spvw.d	2011-07-13 00:28:05.000000000 +0200
+++ clisp/src/spvw.d	2011-07-13 00:28:10.000000000 +0200
@@ -3019,7 +3019,7 @@
       var aint end = bitm(oint_addr_len-1); /* keep garcol_bit zero */
        #endif
       var aint part = floor(end - (start & (end-1)),5);
-      #if defined(AMD64) && defined(UNIX_LINUX)
+      #if defined(AMD64)
       /* Don't use more than 36 address bits, otherwise mmap() fails. */
       part &= 0x0000000FFFFFFFFFUL;
       #endif
@@ -3068,7 +3068,7 @@
         #endif
        #endif
       var aint part = floor(end - (start & (end-1)),5);
-      #if defined(AMD64) && defined(UNIX_LINUX)
+      #if defined(AMD64)
       /* Don't use more than 36 address bits, otherwise mmap() fails. */
       part &= 0x0000000FFFFFFFFFUL;
       #endif
Index: clisp/src/spvw_page.d
===================================================================
--- clisp.orig/src/spvw_page.d	2011-07-13 00:28:05.000000000 +0200
+++ clisp/src/spvw_page.d	2011-07-13 00:28:10.000000000 +0200
@@ -113,7 +113,7 @@
        only a 2^32 size address space. */
       #define oint_addr_relevant_len  32
     #endif
-    #if (defined(IA64) || defined(AMD64)) && defined(UNIX_LINUX)
+    #if defined(IA64) || defined(AMD64)
       /* It is unlikely that more than 4 GB will be used. */
       #define oint_addr_relevant_len  32
     #endif
