Description: Adapt cango-dock to pangocairo
 PangoCairo has superseded PangoX. Ala GTKGLEXT, remove obsoleted font code.
 .
 cairo-dock (3.1.2.1-SprezzOS1) unstable; urgency=low
 .
   * New upstream 3.1.2.1
Author: Nick Black <nick.black@sprezzatech.com>

--- cairo-dock-3.1.2.1.orig/CMakeLists.txt
+++ cairo-dock-3.1.2.1/CMakeLists.txt
@@ -73,7 +73,7 @@ set (bindir "${prefix}/${CMAKE_INSTALL_B
 
 ########### dependencies ###############
 
-set (packages_required "glib-2.0 gthread-2.0 cairo librsvg-2.0 dbus-1 dbus-glib-1 libxml-2.0 xrender gl glu pangox libcurl")  # for the .pc and to have details
+set (packages_required "glib-2.0 gthread-2.0 cairo librsvg-2.0 dbus-1 dbus-glib-1 libxml-2.0 xrender gl glu pangocairo libcurl")  # for the .pc and to have details
 STRING (REGEX REPLACE " " ";" packages_required_semicolon ${packages_required})  # replace blank space by semicolon => to have more details if a package is missing
 pkg_check_modules ("PACKAGE" REQUIRED "${packages_required_semicolon}")
 
--- cairo-dock_3.1.2.1/src/gldit/cairo-dock-opengl-font.c	2012-12-30 15:16:05.000000000 -0500
+++ cdock/src/gldit/cairo-dock-opengl-font.c	2012-12-30 15:14:30.418121621 -0500
@@ -27,7 +27,7 @@
 #include <gtk/gtk.h>
 #include <gdk/gdkx.h>
 
-#include <pango/pangox.h>
+#include <pango/pangocairo.h>
 #include <cairo.h>
 #include <pango/pango.h>
@@ -94,107 +94,6 @@
 	return iTexture;
 }
 
-
-// taken from gdkgl
-// pango_x_ functions are deprecated, but as long as they work, we shouldn't care too much.
-// use XLoadQueryFont() if needed...
-static PangoFont *
-gldi_font_use_pango_font_common (PangoFontMap               *font_map,
-                                   const PangoFontDescription *font_desc,
-                                   int                         first,
-                                   int                         count,
-                                   int                         list_base)
-{
-	PangoFont *font = NULL;
-	const gchar *charset = NULL;
-	PangoXSubfont subfont_id;
-	gchar *xlfd = NULL;  // X Logical Font Description
-	PangoXFontCache *font_cache;
-	XFontStruct *fs;
-
-	font = pango_font_map_load_font (font_map, NULL, font_desc);
-	if (font == NULL)
-	{
-		g_warning ("cannot load PangoFont");
-		goto FAIL;
-	}
-
-	charset = "iso8859-1";
-	if (!pango_x_find_first_subfont (font, (gchar **)&charset, 1, &subfont_id))
-	{
-		g_warning ("cannot find PangoXSubfont");
-		font = NULL;
-		goto FAIL;
-	}
-
-	xlfd = pango_x_font_subfont_xlfd (font, subfont_id);
-	if (xlfd == NULL)
-	{
-		g_warning ("cannot get XLFD");
-		font = NULL;
-		goto FAIL;
-	}
-
-	font_cache = pango_x_font_map_get_font_cache (font_map);
-
-	fs = pango_x_font_cache_load (font_cache, xlfd);
-
-	glXUseXFont (fs->fid, first, count, list_base);
-
-	pango_x_font_cache_unload (font_cache, fs);
-
-	FAIL:
-
-	if (xlfd != NULL)
-		g_free (xlfd);
-
-	return font;
-}
-static PangoFont *
-gldi_font_use_pango_font (const PangoFontDescription *font_desc,
-                            int                         first,
-                            int                         count,
-                            int                         list_base)
-{
-	PangoFontMap *font_map;
-
-	g_return_val_if_fail (font_desc != NULL, NULL);
-	
-	font_map = pango_x_font_map_for_display (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()));
-
-	return gldi_font_use_pango_font_common (font_map, font_desc,
-											first, count, list_base);
-}
-
-
-CairoDockGLFont *cairo_dock_load_bitmap_font (const gchar *cFontDescription, int first, int count)
-{
-	g_return_val_if_fail (cFontDescription != NULL && count > 0, NULL);
-	
-	GLuint iListBase = glGenLists (count);
-	g_return_val_if_fail (iListBase != 0, NULL);
-	
-	CairoDockGLFont *pFont = g_new0 (CairoDockGLFont, 1);
-	pFont->iListBase = iListBase;
-	pFont->iNbChars = count;
-	pFont->iCharBase = first;
-	
-	PangoFontDescription *fd = pango_font_description_from_string (cFontDescription);
-	PangoFont *font = gldi_font_use_pango_font (fd,
-		first,
-		count,
-		iListBase);
-	g_return_val_if_fail (font != NULL, NULL);
-	
-	PangoFontMetrics* metrics = pango_font_get_metrics (font, NULL);
-	pFont->iCharWidth = pango_font_metrics_get_approximate_char_width (metrics) / PANGO_SCALE;
-	pFont->iCharHeight = (pango_font_metrics_get_ascent (metrics) + pango_font_metrics_get_descent (metrics)) / PANGO_SCALE;
-	pango_font_metrics_unref(metrics);
-	
-	pango_font_description_free (fd);
-	return pFont;
-}
-
 CairoDockGLFont *cairo_dock_load_textured_font (const gchar *cFontDescription, int first, int count)
 {
 	g_return_val_if_fail (g_pPrimaryContainer != NULL && count > 0, NULL);
diff -ur cairo-dock_3.1.2.1/src/gldit/cairo-dock-opengl-font.h cdock/src/gldit/cairo-dock-opengl-font.h
--- cairo-dock_3.1.2.1/src/gldit/cairo-dock-opengl-font.h	2012-11-05 11:19:38.000000000 -0500
+++ cdock/src/gldit/cairo-dock-opengl-font.h	2012-12-30 15:14:51.031454582 -0500
@@ -33,7 +33,6 @@
 *@file cairo-dock-opengl-font.h This class provides different ways to draw text directly in OpenGL.
 * \ref cairo_dock_create_texture_from_text_simple lets you draw any text in any font, by creating a texture from a Pango font description. This is a convenient function but not very fast.
 * For a more efficient way, you load a font into a CairoDockGLFont with either :
-* \ref cairo_dock_load_bitmap_font to load a subset of any font into bitmaps (bitmaps are not influenced by the transformation matrix)
 * \ref cairo_dock_load_textured_font to load a subset of a Mono font into textures.
 * You then use \ref cairo_dock_draw_gl_text_at_position to draw the text.
 */
@@ -60,14 +59,6 @@
 	gdouble iCharHeight;
 };
 
-/** Load a font into bitmaps. You can load any characters of font with this function. The drawback is that each character is a bitmap, that is to say you can't zoom them.
-*@param cFontDescription a description of the font, for instance "Monospace Bold 12"
-*@param first first character to load.
-*@param count number of characters to load.
-*@return a newly allocated opengl font.
-*/
-CairoDockGLFont *cairo_dock_load_bitmap_font (const gchar *cFontDescription, int first, int count);
-
 /** Load a font into textures. You can then render your text like a normal texture (zoom, etc). The drawback is that only a mono font can be used with this function.
 *@param cFontDescription a description of the font, for instance "Monospace Bold 12"
 *@param first first character to load.
Only in cdock/src/gldit: gldi-config.h
